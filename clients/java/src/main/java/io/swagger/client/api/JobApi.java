/*
 * Bacalhau API
 * This page is the reference of the Bacalhau REST API. Project docs are available at https://docs.bacalhau.org/. Find more information about Bacalhau at https://github.com/filecoin-project/bacalhau.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: team@bacalhau.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.PublicapiEventsRequest;
import io.swagger.client.model.PublicapiEventsResponse;
import io.swagger.client.model.PublicapiListRequest;
import io.swagger.client.model.PublicapiListResponse;
import io.swagger.client.model.PublicapiLocalEventsRequest;
import io.swagger.client.model.PublicapiLocalEventsResponse;
import io.swagger.client.model.PublicapiResultsResponse;
import io.swagger.client.model.PublicapiStateRequest;
import io.swagger.client.model.PublicapiStateResponse;
import io.swagger.client.model.PublicapiSubmitRequest;
import io.swagger.client.model.PublicapiSubmitResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class JobApi {
    private ApiClient apiClient;

    public JobApi() {
        this(Configuration.getDefaultApiClient());
    }

    public JobApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for pkgapiServerSubmit
     * @param body  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call pkgapiServerSubmitCall(PublicapiSubmitRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/submit";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call pkgapiServerSubmitValidateBeforeCall(PublicapiSubmitRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling pkgapiServerSubmit(Async)");
        }
        
        com.squareup.okhttp.Call call = pkgapiServerSubmitCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Submits a new job to the network.
     * Description:  * &#x60;client_public_key&#x60;: The base64-encoded public key of the client. * &#x60;signature&#x60;: A base64-encoded signature of the &#x60;data&#x60; attribute, signed by the client. * &#x60;data&#x60;     * &#x60;ClientID&#x60;: Request must specify a &#x60;ClientID&#x60;. To retrieve your &#x60;ClientID&#x60;, you can do the following: (1) submit a dummy job to Bacalhau (or use one you created before), (2) run &#x60;bacalhau describe &lt;job-id&gt;&#x60; and fetch the &#x60;ClientID&#x60; field.     * &#x60;Job&#x60;: see example below.  Example request &#x60;&#x60;&#x60;json {  \&quot;data\&quot;: {   \&quot;ClientID\&quot;: \&quot;ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51\&quot;,   \&quot;Job\&quot;: {    \&quot;APIVersion\&quot;: \&quot;V1beta1\&quot;,    \&quot;Spec\&quot;: {     \&quot;Engine\&quot;: \&quot;Docker\&quot;,     \&quot;Verifier\&quot;: \&quot;Noop\&quot;,     \&quot;Publisher\&quot;: \&quot;Estuary\&quot;,     \&quot;Docker\&quot;: {      \&quot;Image\&quot;: \&quot;ubuntu\&quot;,      \&quot;Entrypoint\&quot;: [       \&quot;date\&quot;      ]     },     \&quot;Timeout\&quot;: 1800,     \&quot;outputs\&quot;: [      {       \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,       \&quot;Name\&quot;: \&quot;outputs\&quot;,       \&quot;path\&quot;: \&quot;/outputs\&quot;      }     ],     \&quot;Sharding\&quot;: {      \&quot;BatchSize\&quot;: 1,      \&quot;GlobPatternBasePath\&quot;: \&quot;/inputs\&quot;     }    },    \&quot;Deal\&quot;: {     \&quot;Concurrency\&quot;: 1    }   }  },  \&quot;signature\&quot;: \&quot;...\&quot;,  \&quot;client_public_key\&quot;: \&quot;...\&quot; } &#x60;&#x60;&#x60;
     * @param body  (required)
     * @return PublicapiSubmitResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PublicapiSubmitResponse pkgapiServerSubmit(PublicapiSubmitRequest body) throws ApiException {
        ApiResponse<PublicapiSubmitResponse> resp = pkgapiServerSubmitWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Submits a new job to the network.
     * Description:  * &#x60;client_public_key&#x60;: The base64-encoded public key of the client. * &#x60;signature&#x60;: A base64-encoded signature of the &#x60;data&#x60; attribute, signed by the client. * &#x60;data&#x60;     * &#x60;ClientID&#x60;: Request must specify a &#x60;ClientID&#x60;. To retrieve your &#x60;ClientID&#x60;, you can do the following: (1) submit a dummy job to Bacalhau (or use one you created before), (2) run &#x60;bacalhau describe &lt;job-id&gt;&#x60; and fetch the &#x60;ClientID&#x60; field.     * &#x60;Job&#x60;: see example below.  Example request &#x60;&#x60;&#x60;json {  \&quot;data\&quot;: {   \&quot;ClientID\&quot;: \&quot;ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51\&quot;,   \&quot;Job\&quot;: {    \&quot;APIVersion\&quot;: \&quot;V1beta1\&quot;,    \&quot;Spec\&quot;: {     \&quot;Engine\&quot;: \&quot;Docker\&quot;,     \&quot;Verifier\&quot;: \&quot;Noop\&quot;,     \&quot;Publisher\&quot;: \&quot;Estuary\&quot;,     \&quot;Docker\&quot;: {      \&quot;Image\&quot;: \&quot;ubuntu\&quot;,      \&quot;Entrypoint\&quot;: [       \&quot;date\&quot;      ]     },     \&quot;Timeout\&quot;: 1800,     \&quot;outputs\&quot;: [      {       \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,       \&quot;Name\&quot;: \&quot;outputs\&quot;,       \&quot;path\&quot;: \&quot;/outputs\&quot;      }     ],     \&quot;Sharding\&quot;: {      \&quot;BatchSize\&quot;: 1,      \&quot;GlobPatternBasePath\&quot;: \&quot;/inputs\&quot;     }    },    \&quot;Deal\&quot;: {     \&quot;Concurrency\&quot;: 1    }   }  },  \&quot;signature\&quot;: \&quot;...\&quot;,  \&quot;client_public_key\&quot;: \&quot;...\&quot; } &#x60;&#x60;&#x60;
     * @param body  (required)
     * @return ApiResponse&lt;PublicapiSubmitResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PublicapiSubmitResponse> pkgapiServerSubmitWithHttpInfo(PublicapiSubmitRequest body) throws ApiException {
        com.squareup.okhttp.Call call = pkgapiServerSubmitValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<PublicapiSubmitResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Submits a new job to the network. (asynchronously)
     * Description:  * &#x60;client_public_key&#x60;: The base64-encoded public key of the client. * &#x60;signature&#x60;: A base64-encoded signature of the &#x60;data&#x60; attribute, signed by the client. * &#x60;data&#x60;     * &#x60;ClientID&#x60;: Request must specify a &#x60;ClientID&#x60;. To retrieve your &#x60;ClientID&#x60;, you can do the following: (1) submit a dummy job to Bacalhau (or use one you created before), (2) run &#x60;bacalhau describe &lt;job-id&gt;&#x60; and fetch the &#x60;ClientID&#x60; field.     * &#x60;Job&#x60;: see example below.  Example request &#x60;&#x60;&#x60;json {  \&quot;data\&quot;: {   \&quot;ClientID\&quot;: \&quot;ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51\&quot;,   \&quot;Job\&quot;: {    \&quot;APIVersion\&quot;: \&quot;V1beta1\&quot;,    \&quot;Spec\&quot;: {     \&quot;Engine\&quot;: \&quot;Docker\&quot;,     \&quot;Verifier\&quot;: \&quot;Noop\&quot;,     \&quot;Publisher\&quot;: \&quot;Estuary\&quot;,     \&quot;Docker\&quot;: {      \&quot;Image\&quot;: \&quot;ubuntu\&quot;,      \&quot;Entrypoint\&quot;: [       \&quot;date\&quot;      ]     },     \&quot;Timeout\&quot;: 1800,     \&quot;outputs\&quot;: [      {       \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,       \&quot;Name\&quot;: \&quot;outputs\&quot;,       \&quot;path\&quot;: \&quot;/outputs\&quot;      }     ],     \&quot;Sharding\&quot;: {      \&quot;BatchSize\&quot;: 1,      \&quot;GlobPatternBasePath\&quot;: \&quot;/inputs\&quot;     }    },    \&quot;Deal\&quot;: {     \&quot;Concurrency\&quot;: 1    }   }  },  \&quot;signature\&quot;: \&quot;...\&quot;,  \&quot;client_public_key\&quot;: \&quot;...\&quot; } &#x60;&#x60;&#x60;
     * @param body  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call pkgapiServerSubmitAsync(PublicapiSubmitRequest body, final ApiCallback<PublicapiSubmitResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = pkgapiServerSubmitValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PublicapiSubmitResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for pkgpublicapiList
     * @param body Set &#x60;return_all&#x60; to &#x60;true&#x60; to return all jobs on the network (may degrade performance, use with care!). (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call pkgpublicapiListCall(PublicapiListRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call pkgpublicapiListValidateBeforeCall(PublicapiListRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling pkgpublicapiList(Async)");
        }
        
        com.squareup.okhttp.Call call = pkgpublicapiListCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Simply lists jobs.
     * Returns the first (sorted) #&#x60;max_jobs&#x60; jobs that belong to the &#x60;client_id&#x60; passed in the body payload (by default). If &#x60;return_all&#x60; is set to true, it returns all jobs on the Bacalhau network.  If &#x60;id&#x60; is set, it returns only the job with that ID.  Example response: &#x60;&#x60;&#x60;json {   \&quot;jobs\&quot;: [     {       \&quot;APIVersion\&quot;: \&quot;V1beta1\&quot;,       \&quot;ID\&quot;: \&quot;9304c616-291f-41ad-b862-54e133c0149e\&quot;,       \&quot;RequesterNodeID\&quot;: \&quot;QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\&quot;,       \&quot;RequesterPublicKey\&quot;: \&quot;...\&quot;,       \&quot;ClientID\&quot;: \&quot;ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51\&quot;,       \&quot;Spec\&quot;: {         \&quot;Engine\&quot;: \&quot;Docker\&quot;,         \&quot;Verifier\&quot;: \&quot;Noop\&quot;,         \&quot;Publisher\&quot;: \&quot;Estuary\&quot;,         \&quot;Docker\&quot;: {           \&quot;Image\&quot;: \&quot;ubuntu\&quot;,           \&quot;Entrypoint\&quot;: [             \&quot;date\&quot;           ]         },         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Timeout\&quot;: 1800,         \&quot;outputs\&quot;: [           {             \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,             \&quot;Name\&quot;: \&quot;outputs\&quot;,             \&quot;path\&quot;: \&quot;/outputs\&quot;           }         ],         \&quot;Sharding\&quot;: {           \&quot;BatchSize\&quot;: 1,           \&quot;GlobPatternBasePath\&quot;: \&quot;/inputs\&quot;         }       },       \&quot;Deal\&quot;: {         \&quot;Concurrency\&quot;: 1       },       \&quot;ExecutionPlan\&quot;: {         \&quot;ShardsTotal\&quot;: 1       },       \&quot;CreatedAt\&quot;: \&quot;2022-11-17T13:32:55.33837275Z\&quot;,       \&quot;JobState\&quot;: {         \&quot;Nodes\&quot;: {           \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;,                 \&quot;State\&quot;: \&quot;Cancelled\&quot;,                 \&quot;VerificationResult\&quot;: {},                 \&quot;PublishedResults\&quot;: {}               }             }           },           \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;,                 \&quot;State\&quot;: \&quot;Cancelled\&quot;,                 \&quot;VerificationResult\&quot;: {},                 \&quot;PublishedResults\&quot;: {}               }             }           },           \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,                 \&quot;State\&quot;: \&quot;Completed\&quot;,                 \&quot;Status\&quot;: \&quot;Got results proposal of length: 0\&quot;,                 \&quot;VerificationResult\&quot;: {                   \&quot;Complete\&quot;: true,                   \&quot;Result\&quot;: true                 },                 \&quot;PublishedResults\&quot;: {                   \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,                   \&quot;Name\&quot;: \&quot;job-9304c616-291f-41ad-b862-54e133c0149e-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,                   \&quot;CID\&quot;: \&quot;QmTVmC7JBD2ES2qGPqBNVWnX1KeEPNrPGb7rJ8cpFgtefe\&quot;                 },                 \&quot;RunOutput\&quot;: {                   \&quot;stdout\&quot;: \&quot;Thu Nov 17 13:32:55 UTC 2022\\n\&quot;,                   \&quot;stdouttruncated\&quot;: false,                   \&quot;stderr\&quot;: \&quot;\&quot;,                   \&quot;stderrtruncated\&quot;: false,                   \&quot;exitCode\&quot;: 0,                   \&quot;runnerError\&quot;: \&quot;\&quot;                 }               }             }           }         }       }     },     {       \&quot;APIVersion\&quot;: \&quot;V1beta1\&quot;,       \&quot;ID\&quot;: \&quot;92d5d4ee-3765-4f78-8353-623f5f26df08\&quot;,       \&quot;RequesterNodeID\&quot;: \&quot;QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\&quot;,       \&quot;RequesterPublicKey\&quot;: \&quot;...\&quot;,       \&quot;ClientID\&quot;: \&quot;ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51\&quot;,       \&quot;Spec\&quot;: {         \&quot;Engine\&quot;: \&quot;Docker\&quot;,         \&quot;Verifier\&quot;: \&quot;Noop\&quot;,         \&quot;Publisher\&quot;: \&quot;Estuary\&quot;,         \&quot;Docker\&quot;: {           \&quot;Image\&quot;: \&quot;ubuntu\&quot;,           \&quot;Entrypoint\&quot;: [             \&quot;sleep\&quot;,             \&quot;4\&quot;           ]         },         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Timeout\&quot;: 1800,         \&quot;outputs\&quot;: [           {             \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,             \&quot;Name\&quot;: \&quot;outputs\&quot;,             \&quot;path\&quot;: \&quot;/outputs\&quot;           }         ],         \&quot;Sharding\&quot;: {           \&quot;BatchSize\&quot;: 1,           \&quot;GlobPatternBasePath\&quot;: \&quot;/inputs\&quot;         }       },       \&quot;Deal\&quot;: {         \&quot;Concurrency\&quot;: 1       },       \&quot;ExecutionPlan\&quot;: {         \&quot;ShardsTotal\&quot;: 1       },       \&quot;CreatedAt\&quot;: \&quot;2022-11-17T13:29:01.871140291Z\&quot;,       \&quot;JobState\&quot;: {         \&quot;Nodes\&quot;: {           \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;,                 \&quot;State\&quot;: \&quot;Cancelled\&quot;,                 \&quot;VerificationResult\&quot;: {},                 \&quot;PublishedResults\&quot;: {}               }             }           },           \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;,                 \&quot;State\&quot;: \&quot;Completed\&quot;,                 \&quot;Status\&quot;: \&quot;Got results proposal of length: 0\&quot;,                 \&quot;VerificationResult\&quot;: {                   \&quot;Complete\&quot;: true,                   \&quot;Result\&quot;: true                 },                 \&quot;PublishedResults\&quot;: {                   \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,                   \&quot;Name\&quot;: \&quot;job-92d5d4ee-3765-4f78-8353-623f5f26df08-shard-0-host-QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;,                   \&quot;CID\&quot;: \&quot;QmWUXBndMuq2G6B6ndQCmkRHjZ6CvyJ8qLxXBG3YsSFzQG\&quot;                 },                 \&quot;RunOutput\&quot;: {                   \&quot;stdout\&quot;: \&quot;\&quot;,                   \&quot;stdouttruncated\&quot;: false,                   \&quot;stderr\&quot;: \&quot;\&quot;,                   \&quot;stderrtruncated\&quot;: false,                   \&quot;exitCode\&quot;: 0,                   \&quot;runnerError\&quot;: \&quot;\&quot;                 }               }             }           }         }       }     }   ] } &#x60;&#x60;&#x60;
     * @param body Set &#x60;return_all&#x60; to &#x60;true&#x60; to return all jobs on the network (may degrade performance, use with care!). (required)
     * @return PublicapiListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PublicapiListResponse pkgpublicapiList(PublicapiListRequest body) throws ApiException {
        ApiResponse<PublicapiListResponse> resp = pkgpublicapiListWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Simply lists jobs.
     * Returns the first (sorted) #&#x60;max_jobs&#x60; jobs that belong to the &#x60;client_id&#x60; passed in the body payload (by default). If &#x60;return_all&#x60; is set to true, it returns all jobs on the Bacalhau network.  If &#x60;id&#x60; is set, it returns only the job with that ID.  Example response: &#x60;&#x60;&#x60;json {   \&quot;jobs\&quot;: [     {       \&quot;APIVersion\&quot;: \&quot;V1beta1\&quot;,       \&quot;ID\&quot;: \&quot;9304c616-291f-41ad-b862-54e133c0149e\&quot;,       \&quot;RequesterNodeID\&quot;: \&quot;QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\&quot;,       \&quot;RequesterPublicKey\&quot;: \&quot;...\&quot;,       \&quot;ClientID\&quot;: \&quot;ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51\&quot;,       \&quot;Spec\&quot;: {         \&quot;Engine\&quot;: \&quot;Docker\&quot;,         \&quot;Verifier\&quot;: \&quot;Noop\&quot;,         \&quot;Publisher\&quot;: \&quot;Estuary\&quot;,         \&quot;Docker\&quot;: {           \&quot;Image\&quot;: \&quot;ubuntu\&quot;,           \&quot;Entrypoint\&quot;: [             \&quot;date\&quot;           ]         },         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Timeout\&quot;: 1800,         \&quot;outputs\&quot;: [           {             \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,             \&quot;Name\&quot;: \&quot;outputs\&quot;,             \&quot;path\&quot;: \&quot;/outputs\&quot;           }         ],         \&quot;Sharding\&quot;: {           \&quot;BatchSize\&quot;: 1,           \&quot;GlobPatternBasePath\&quot;: \&quot;/inputs\&quot;         }       },       \&quot;Deal\&quot;: {         \&quot;Concurrency\&quot;: 1       },       \&quot;ExecutionPlan\&quot;: {         \&quot;ShardsTotal\&quot;: 1       },       \&quot;CreatedAt\&quot;: \&quot;2022-11-17T13:32:55.33837275Z\&quot;,       \&quot;JobState\&quot;: {         \&quot;Nodes\&quot;: {           \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;,                 \&quot;State\&quot;: \&quot;Cancelled\&quot;,                 \&quot;VerificationResult\&quot;: {},                 \&quot;PublishedResults\&quot;: {}               }             }           },           \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;,                 \&quot;State\&quot;: \&quot;Cancelled\&quot;,                 \&quot;VerificationResult\&quot;: {},                 \&quot;PublishedResults\&quot;: {}               }             }           },           \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,                 \&quot;State\&quot;: \&quot;Completed\&quot;,                 \&quot;Status\&quot;: \&quot;Got results proposal of length: 0\&quot;,                 \&quot;VerificationResult\&quot;: {                   \&quot;Complete\&quot;: true,                   \&quot;Result\&quot;: true                 },                 \&quot;PublishedResults\&quot;: {                   \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,                   \&quot;Name\&quot;: \&quot;job-9304c616-291f-41ad-b862-54e133c0149e-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,                   \&quot;CID\&quot;: \&quot;QmTVmC7JBD2ES2qGPqBNVWnX1KeEPNrPGb7rJ8cpFgtefe\&quot;                 },                 \&quot;RunOutput\&quot;: {                   \&quot;stdout\&quot;: \&quot;Thu Nov 17 13:32:55 UTC 2022\\n\&quot;,                   \&quot;stdouttruncated\&quot;: false,                   \&quot;stderr\&quot;: \&quot;\&quot;,                   \&quot;stderrtruncated\&quot;: false,                   \&quot;exitCode\&quot;: 0,                   \&quot;runnerError\&quot;: \&quot;\&quot;                 }               }             }           }         }       }     },     {       \&quot;APIVersion\&quot;: \&quot;V1beta1\&quot;,       \&quot;ID\&quot;: \&quot;92d5d4ee-3765-4f78-8353-623f5f26df08\&quot;,       \&quot;RequesterNodeID\&quot;: \&quot;QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\&quot;,       \&quot;RequesterPublicKey\&quot;: \&quot;...\&quot;,       \&quot;ClientID\&quot;: \&quot;ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51\&quot;,       \&quot;Spec\&quot;: {         \&quot;Engine\&quot;: \&quot;Docker\&quot;,         \&quot;Verifier\&quot;: \&quot;Noop\&quot;,         \&quot;Publisher\&quot;: \&quot;Estuary\&quot;,         \&quot;Docker\&quot;: {           \&quot;Image\&quot;: \&quot;ubuntu\&quot;,           \&quot;Entrypoint\&quot;: [             \&quot;sleep\&quot;,             \&quot;4\&quot;           ]         },         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Timeout\&quot;: 1800,         \&quot;outputs\&quot;: [           {             \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,             \&quot;Name\&quot;: \&quot;outputs\&quot;,             \&quot;path\&quot;: \&quot;/outputs\&quot;           }         ],         \&quot;Sharding\&quot;: {           \&quot;BatchSize\&quot;: 1,           \&quot;GlobPatternBasePath\&quot;: \&quot;/inputs\&quot;         }       },       \&quot;Deal\&quot;: {         \&quot;Concurrency\&quot;: 1       },       \&quot;ExecutionPlan\&quot;: {         \&quot;ShardsTotal\&quot;: 1       },       \&quot;CreatedAt\&quot;: \&quot;2022-11-17T13:29:01.871140291Z\&quot;,       \&quot;JobState\&quot;: {         \&quot;Nodes\&quot;: {           \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;,                 \&quot;State\&quot;: \&quot;Cancelled\&quot;,                 \&quot;VerificationResult\&quot;: {},                 \&quot;PublishedResults\&quot;: {}               }             }           },           \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;,                 \&quot;State\&quot;: \&quot;Completed\&quot;,                 \&quot;Status\&quot;: \&quot;Got results proposal of length: 0\&quot;,                 \&quot;VerificationResult\&quot;: {                   \&quot;Complete\&quot;: true,                   \&quot;Result\&quot;: true                 },                 \&quot;PublishedResults\&quot;: {                   \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,                   \&quot;Name\&quot;: \&quot;job-92d5d4ee-3765-4f78-8353-623f5f26df08-shard-0-host-QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;,                   \&quot;CID\&quot;: \&quot;QmWUXBndMuq2G6B6ndQCmkRHjZ6CvyJ8qLxXBG3YsSFzQG\&quot;                 },                 \&quot;RunOutput\&quot;: {                   \&quot;stdout\&quot;: \&quot;\&quot;,                   \&quot;stdouttruncated\&quot;: false,                   \&quot;stderr\&quot;: \&quot;\&quot;,                   \&quot;stderrtruncated\&quot;: false,                   \&quot;exitCode\&quot;: 0,                   \&quot;runnerError\&quot;: \&quot;\&quot;                 }               }             }           }         }       }     }   ] } &#x60;&#x60;&#x60;
     * @param body Set &#x60;return_all&#x60; to &#x60;true&#x60; to return all jobs on the network (may degrade performance, use with care!). (required)
     * @return ApiResponse&lt;PublicapiListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PublicapiListResponse> pkgpublicapiListWithHttpInfo(PublicapiListRequest body) throws ApiException {
        com.squareup.okhttp.Call call = pkgpublicapiListValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<PublicapiListResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Simply lists jobs. (asynchronously)
     * Returns the first (sorted) #&#x60;max_jobs&#x60; jobs that belong to the &#x60;client_id&#x60; passed in the body payload (by default). If &#x60;return_all&#x60; is set to true, it returns all jobs on the Bacalhau network.  If &#x60;id&#x60; is set, it returns only the job with that ID.  Example response: &#x60;&#x60;&#x60;json {   \&quot;jobs\&quot;: [     {       \&quot;APIVersion\&quot;: \&quot;V1beta1\&quot;,       \&quot;ID\&quot;: \&quot;9304c616-291f-41ad-b862-54e133c0149e\&quot;,       \&quot;RequesterNodeID\&quot;: \&quot;QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\&quot;,       \&quot;RequesterPublicKey\&quot;: \&quot;...\&quot;,       \&quot;ClientID\&quot;: \&quot;ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51\&quot;,       \&quot;Spec\&quot;: {         \&quot;Engine\&quot;: \&quot;Docker\&quot;,         \&quot;Verifier\&quot;: \&quot;Noop\&quot;,         \&quot;Publisher\&quot;: \&quot;Estuary\&quot;,         \&quot;Docker\&quot;: {           \&quot;Image\&quot;: \&quot;ubuntu\&quot;,           \&quot;Entrypoint\&quot;: [             \&quot;date\&quot;           ]         },         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Timeout\&quot;: 1800,         \&quot;outputs\&quot;: [           {             \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,             \&quot;Name\&quot;: \&quot;outputs\&quot;,             \&quot;path\&quot;: \&quot;/outputs\&quot;           }         ],         \&quot;Sharding\&quot;: {           \&quot;BatchSize\&quot;: 1,           \&quot;GlobPatternBasePath\&quot;: \&quot;/inputs\&quot;         }       },       \&quot;Deal\&quot;: {         \&quot;Concurrency\&quot;: 1       },       \&quot;ExecutionPlan\&quot;: {         \&quot;ShardsTotal\&quot;: 1       },       \&quot;CreatedAt\&quot;: \&quot;2022-11-17T13:32:55.33837275Z\&quot;,       \&quot;JobState\&quot;: {         \&quot;Nodes\&quot;: {           \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;,                 \&quot;State\&quot;: \&quot;Cancelled\&quot;,                 \&quot;VerificationResult\&quot;: {},                 \&quot;PublishedResults\&quot;: {}               }             }           },           \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;,                 \&quot;State\&quot;: \&quot;Cancelled\&quot;,                 \&quot;VerificationResult\&quot;: {},                 \&quot;PublishedResults\&quot;: {}               }             }           },           \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,                 \&quot;State\&quot;: \&quot;Completed\&quot;,                 \&quot;Status\&quot;: \&quot;Got results proposal of length: 0\&quot;,                 \&quot;VerificationResult\&quot;: {                   \&quot;Complete\&quot;: true,                   \&quot;Result\&quot;: true                 },                 \&quot;PublishedResults\&quot;: {                   \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,                   \&quot;Name\&quot;: \&quot;job-9304c616-291f-41ad-b862-54e133c0149e-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,                   \&quot;CID\&quot;: \&quot;QmTVmC7JBD2ES2qGPqBNVWnX1KeEPNrPGb7rJ8cpFgtefe\&quot;                 },                 \&quot;RunOutput\&quot;: {                   \&quot;stdout\&quot;: \&quot;Thu Nov 17 13:32:55 UTC 2022\\n\&quot;,                   \&quot;stdouttruncated\&quot;: false,                   \&quot;stderr\&quot;: \&quot;\&quot;,                   \&quot;stderrtruncated\&quot;: false,                   \&quot;exitCode\&quot;: 0,                   \&quot;runnerError\&quot;: \&quot;\&quot;                 }               }             }           }         }       }     },     {       \&quot;APIVersion\&quot;: \&quot;V1beta1\&quot;,       \&quot;ID\&quot;: \&quot;92d5d4ee-3765-4f78-8353-623f5f26df08\&quot;,       \&quot;RequesterNodeID\&quot;: \&quot;QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\&quot;,       \&quot;RequesterPublicKey\&quot;: \&quot;...\&quot;,       \&quot;ClientID\&quot;: \&quot;ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51\&quot;,       \&quot;Spec\&quot;: {         \&quot;Engine\&quot;: \&quot;Docker\&quot;,         \&quot;Verifier\&quot;: \&quot;Noop\&quot;,         \&quot;Publisher\&quot;: \&quot;Estuary\&quot;,         \&quot;Docker\&quot;: {           \&quot;Image\&quot;: \&quot;ubuntu\&quot;,           \&quot;Entrypoint\&quot;: [             \&quot;sleep\&quot;,             \&quot;4\&quot;           ]         },         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Timeout\&quot;: 1800,         \&quot;outputs\&quot;: [           {             \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,             \&quot;Name\&quot;: \&quot;outputs\&quot;,             \&quot;path\&quot;: \&quot;/outputs\&quot;           }         ],         \&quot;Sharding\&quot;: {           \&quot;BatchSize\&quot;: 1,           \&quot;GlobPatternBasePath\&quot;: \&quot;/inputs\&quot;         }       },       \&quot;Deal\&quot;: {         \&quot;Concurrency\&quot;: 1       },       \&quot;ExecutionPlan\&quot;: {         \&quot;ShardsTotal\&quot;: 1       },       \&quot;CreatedAt\&quot;: \&quot;2022-11-17T13:29:01.871140291Z\&quot;,       \&quot;JobState\&quot;: {         \&quot;Nodes\&quot;: {           \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;,                 \&quot;State\&quot;: \&quot;Cancelled\&quot;,                 \&quot;VerificationResult\&quot;: {},                 \&quot;PublishedResults\&quot;: {}               }             }           },           \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;: {             \&quot;Shards\&quot;: {               \&quot;0\&quot;: {                 \&quot;NodeId\&quot;: \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;,                 \&quot;State\&quot;: \&quot;Completed\&quot;,                 \&quot;Status\&quot;: \&quot;Got results proposal of length: 0\&quot;,                 \&quot;VerificationResult\&quot;: {                   \&quot;Complete\&quot;: true,                   \&quot;Result\&quot;: true                 },                 \&quot;PublishedResults\&quot;: {                   \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,                   \&quot;Name\&quot;: \&quot;job-92d5d4ee-3765-4f78-8353-623f5f26df08-shard-0-host-QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;,                   \&quot;CID\&quot;: \&quot;QmWUXBndMuq2G6B6ndQCmkRHjZ6CvyJ8qLxXBG3YsSFzQG\&quot;                 },                 \&quot;RunOutput\&quot;: {                   \&quot;stdout\&quot;: \&quot;\&quot;,                   \&quot;stdouttruncated\&quot;: false,                   \&quot;stderr\&quot;: \&quot;\&quot;,                   \&quot;stderrtruncated\&quot;: false,                   \&quot;exitCode\&quot;: 0,                   \&quot;runnerError\&quot;: \&quot;\&quot;                 }               }             }           }         }       }     }   ] } &#x60;&#x60;&#x60;
     * @param body Set &#x60;return_all&#x60; to &#x60;true&#x60; to return all jobs on the network (may degrade performance, use with care!). (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call pkgpublicapiListAsync(PublicapiListRequest body, final ApiCallback<PublicapiListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = pkgpublicapiListValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PublicapiListResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for pkgpublicapievents
     * @param body Request must specify a &#x60;client_id&#x60;. To retrieve your &#x60;client_id&#x60;, you can do the following: (1) submit a dummy job to Bacalhau (or use one you created before), (2) run &#x60;bacalhau describe &lt;job-id&gt;&#x60; and fetch the &#x60;ClientID&#x60; field. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call pkgpublicapieventsCall(PublicapiEventsRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/events";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call pkgpublicapieventsValidateBeforeCall(PublicapiEventsRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling pkgpublicapievents(Async)");
        }
        
        com.squareup.okhttp.Call call = pkgpublicapieventsCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Returns the events related to the job-id passed in the body payload. Useful for troubleshooting.
     * Events (e.g. Created, Bid, BidAccepted, ..., ResultsAccepted, ResultsPublished) are useful to track the progress of a job.  Example response (truncated): &#x60;&#x60;&#x60;json {   \&quot;events\&quot;: [     {       \&quot;APIVersion\&quot;: \&quot;V1beta1\&quot;,       \&quot;JobID\&quot;: \&quot;9304c616-291f-41ad-b862-54e133c0149e\&quot;,       \&quot;ClientID\&quot;: \&quot;ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51\&quot;,       \&quot;SourceNodeID\&quot;: \&quot;QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\&quot;,       \&quot;EventName\&quot;: \&quot;Created\&quot;,       \&quot;Spec\&quot;: {         \&quot;Engine\&quot;: \&quot;Docker\&quot;,         \&quot;Verifier\&quot;: \&quot;Noop\&quot;,         \&quot;Publisher\&quot;: \&quot;Estuary\&quot;,         \&quot;Docker\&quot;: {           \&quot;Image\&quot;: \&quot;ubuntu\&quot;,           \&quot;Entrypoint\&quot;: [             \&quot;date\&quot;           ]         },         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Timeout\&quot;: 1800,         \&quot;outputs\&quot;: [           {             \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,             \&quot;Name\&quot;: \&quot;outputs\&quot;,             \&quot;path\&quot;: \&quot;/outputs\&quot;           }         ],         \&quot;Sharding\&quot;: {           \&quot;BatchSize\&quot;: 1,           \&quot;GlobPatternBasePath\&quot;: \&quot;/inputs\&quot;         }       },       \&quot;JobExecutionPlan\&quot;: {         \&quot;ShardsTotal\&quot;: 1       },       \&quot;Deal\&quot;: {         \&quot;Concurrency\&quot;: 1       },       \&quot;VerificationResult\&quot;: {},       \&quot;PublishedResult\&quot;: {},       \&quot;EventTime\&quot;: \&quot;2022-11-17T13:32:55.331375351Z\&quot;,       \&quot;SenderPublicKey\&quot;: \&quot;...\&quot;     },     ...     {       \&quot;JobID\&quot;: \&quot;9304c616-291f-41ad-b862-54e133c0149e\&quot;,       \&quot;SourceNodeID\&quot;: \&quot;QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\&quot;,       \&quot;TargetNodeID\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,       \&quot;EventName\&quot;: \&quot;ResultsAccepted\&quot;,       \&quot;Spec\&quot;: {         \&quot;Docker\&quot;: {},         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Sharding\&quot;: {}       },       \&quot;JobExecutionPlan\&quot;: {},       \&quot;Deal\&quot;: {},       \&quot;VerificationResult\&quot;: {         \&quot;Complete\&quot;: true,         \&quot;Result\&quot;: true       },       \&quot;PublishedResult\&quot;: {},       \&quot;EventTime\&quot;: \&quot;2022-11-17T13:32:55.707825569Z\&quot;,       \&quot;SenderPublicKey\&quot;: \&quot;...\&quot;     },     {       \&quot;JobID\&quot;: \&quot;9304c616-291f-41ad-b862-54e133c0149e\&quot;,       \&quot;SourceNodeID\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,       \&quot;EventName\&quot;: \&quot;ResultsPublished\&quot;,       \&quot;Spec\&quot;: {         \&quot;Docker\&quot;: {},         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Sharding\&quot;: {}       },       \&quot;JobExecutionPlan\&quot;: {},       \&quot;Deal\&quot;: {},       \&quot;VerificationResult\&quot;: {},       \&quot;PublishedResult\&quot;: {         \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,         \&quot;Name\&quot;: \&quot;job-9304c616-291f-41ad-b862-54e133c0149e-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,         \&quot;CID\&quot;: \&quot;QmTVmC7JBD2ES2qGPqBNVWnX1KeEPNrPGb7rJ8cpFgtefe\&quot;       },       \&quot;EventTime\&quot;: \&quot;2022-11-17T13:32:55.756658941Z\&quot;,       \&quot;SenderPublicKey\&quot;: \&quot;...\&quot;     }   ] } &#x60;&#x60;&#x60;
     * @param body Request must specify a &#x60;client_id&#x60;. To retrieve your &#x60;client_id&#x60;, you can do the following: (1) submit a dummy job to Bacalhau (or use one you created before), (2) run &#x60;bacalhau describe &lt;job-id&gt;&#x60; and fetch the &#x60;ClientID&#x60; field. (required)
     * @return PublicapiEventsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PublicapiEventsResponse pkgpublicapievents(PublicapiEventsRequest body) throws ApiException {
        ApiResponse<PublicapiEventsResponse> resp = pkgpublicapieventsWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Returns the events related to the job-id passed in the body payload. Useful for troubleshooting.
     * Events (e.g. Created, Bid, BidAccepted, ..., ResultsAccepted, ResultsPublished) are useful to track the progress of a job.  Example response (truncated): &#x60;&#x60;&#x60;json {   \&quot;events\&quot;: [     {       \&quot;APIVersion\&quot;: \&quot;V1beta1\&quot;,       \&quot;JobID\&quot;: \&quot;9304c616-291f-41ad-b862-54e133c0149e\&quot;,       \&quot;ClientID\&quot;: \&quot;ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51\&quot;,       \&quot;SourceNodeID\&quot;: \&quot;QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\&quot;,       \&quot;EventName\&quot;: \&quot;Created\&quot;,       \&quot;Spec\&quot;: {         \&quot;Engine\&quot;: \&quot;Docker\&quot;,         \&quot;Verifier\&quot;: \&quot;Noop\&quot;,         \&quot;Publisher\&quot;: \&quot;Estuary\&quot;,         \&quot;Docker\&quot;: {           \&quot;Image\&quot;: \&quot;ubuntu\&quot;,           \&quot;Entrypoint\&quot;: [             \&quot;date\&quot;           ]         },         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Timeout\&quot;: 1800,         \&quot;outputs\&quot;: [           {             \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,             \&quot;Name\&quot;: \&quot;outputs\&quot;,             \&quot;path\&quot;: \&quot;/outputs\&quot;           }         ],         \&quot;Sharding\&quot;: {           \&quot;BatchSize\&quot;: 1,           \&quot;GlobPatternBasePath\&quot;: \&quot;/inputs\&quot;         }       },       \&quot;JobExecutionPlan\&quot;: {         \&quot;ShardsTotal\&quot;: 1       },       \&quot;Deal\&quot;: {         \&quot;Concurrency\&quot;: 1       },       \&quot;VerificationResult\&quot;: {},       \&quot;PublishedResult\&quot;: {},       \&quot;EventTime\&quot;: \&quot;2022-11-17T13:32:55.331375351Z\&quot;,       \&quot;SenderPublicKey\&quot;: \&quot;...\&quot;     },     ...     {       \&quot;JobID\&quot;: \&quot;9304c616-291f-41ad-b862-54e133c0149e\&quot;,       \&quot;SourceNodeID\&quot;: \&quot;QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\&quot;,       \&quot;TargetNodeID\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,       \&quot;EventName\&quot;: \&quot;ResultsAccepted\&quot;,       \&quot;Spec\&quot;: {         \&quot;Docker\&quot;: {},         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Sharding\&quot;: {}       },       \&quot;JobExecutionPlan\&quot;: {},       \&quot;Deal\&quot;: {},       \&quot;VerificationResult\&quot;: {         \&quot;Complete\&quot;: true,         \&quot;Result\&quot;: true       },       \&quot;PublishedResult\&quot;: {},       \&quot;EventTime\&quot;: \&quot;2022-11-17T13:32:55.707825569Z\&quot;,       \&quot;SenderPublicKey\&quot;: \&quot;...\&quot;     },     {       \&quot;JobID\&quot;: \&quot;9304c616-291f-41ad-b862-54e133c0149e\&quot;,       \&quot;SourceNodeID\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,       \&quot;EventName\&quot;: \&quot;ResultsPublished\&quot;,       \&quot;Spec\&quot;: {         \&quot;Docker\&quot;: {},         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Sharding\&quot;: {}       },       \&quot;JobExecutionPlan\&quot;: {},       \&quot;Deal\&quot;: {},       \&quot;VerificationResult\&quot;: {},       \&quot;PublishedResult\&quot;: {         \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,         \&quot;Name\&quot;: \&quot;job-9304c616-291f-41ad-b862-54e133c0149e-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,         \&quot;CID\&quot;: \&quot;QmTVmC7JBD2ES2qGPqBNVWnX1KeEPNrPGb7rJ8cpFgtefe\&quot;       },       \&quot;EventTime\&quot;: \&quot;2022-11-17T13:32:55.756658941Z\&quot;,       \&quot;SenderPublicKey\&quot;: \&quot;...\&quot;     }   ] } &#x60;&#x60;&#x60;
     * @param body Request must specify a &#x60;client_id&#x60;. To retrieve your &#x60;client_id&#x60;, you can do the following: (1) submit a dummy job to Bacalhau (or use one you created before), (2) run &#x60;bacalhau describe &lt;job-id&gt;&#x60; and fetch the &#x60;ClientID&#x60; field. (required)
     * @return ApiResponse&lt;PublicapiEventsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PublicapiEventsResponse> pkgpublicapieventsWithHttpInfo(PublicapiEventsRequest body) throws ApiException {
        com.squareup.okhttp.Call call = pkgpublicapieventsValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<PublicapiEventsResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Returns the events related to the job-id passed in the body payload. Useful for troubleshooting. (asynchronously)
     * Events (e.g. Created, Bid, BidAccepted, ..., ResultsAccepted, ResultsPublished) are useful to track the progress of a job.  Example response (truncated): &#x60;&#x60;&#x60;json {   \&quot;events\&quot;: [     {       \&quot;APIVersion\&quot;: \&quot;V1beta1\&quot;,       \&quot;JobID\&quot;: \&quot;9304c616-291f-41ad-b862-54e133c0149e\&quot;,       \&quot;ClientID\&quot;: \&quot;ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51\&quot;,       \&quot;SourceNodeID\&quot;: \&quot;QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\&quot;,       \&quot;EventName\&quot;: \&quot;Created\&quot;,       \&quot;Spec\&quot;: {         \&quot;Engine\&quot;: \&quot;Docker\&quot;,         \&quot;Verifier\&quot;: \&quot;Noop\&quot;,         \&quot;Publisher\&quot;: \&quot;Estuary\&quot;,         \&quot;Docker\&quot;: {           \&quot;Image\&quot;: \&quot;ubuntu\&quot;,           \&quot;Entrypoint\&quot;: [             \&quot;date\&quot;           ]         },         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Timeout\&quot;: 1800,         \&quot;outputs\&quot;: [           {             \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,             \&quot;Name\&quot;: \&quot;outputs\&quot;,             \&quot;path\&quot;: \&quot;/outputs\&quot;           }         ],         \&quot;Sharding\&quot;: {           \&quot;BatchSize\&quot;: 1,           \&quot;GlobPatternBasePath\&quot;: \&quot;/inputs\&quot;         }       },       \&quot;JobExecutionPlan\&quot;: {         \&quot;ShardsTotal\&quot;: 1       },       \&quot;Deal\&quot;: {         \&quot;Concurrency\&quot;: 1       },       \&quot;VerificationResult\&quot;: {},       \&quot;PublishedResult\&quot;: {},       \&quot;EventTime\&quot;: \&quot;2022-11-17T13:32:55.331375351Z\&quot;,       \&quot;SenderPublicKey\&quot;: \&quot;...\&quot;     },     ...     {       \&quot;JobID\&quot;: \&quot;9304c616-291f-41ad-b862-54e133c0149e\&quot;,       \&quot;SourceNodeID\&quot;: \&quot;QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF\&quot;,       \&quot;TargetNodeID\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,       \&quot;EventName\&quot;: \&quot;ResultsAccepted\&quot;,       \&quot;Spec\&quot;: {         \&quot;Docker\&quot;: {},         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Sharding\&quot;: {}       },       \&quot;JobExecutionPlan\&quot;: {},       \&quot;Deal\&quot;: {},       \&quot;VerificationResult\&quot;: {         \&quot;Complete\&quot;: true,         \&quot;Result\&quot;: true       },       \&quot;PublishedResult\&quot;: {},       \&quot;EventTime\&quot;: \&quot;2022-11-17T13:32:55.707825569Z\&quot;,       \&quot;SenderPublicKey\&quot;: \&quot;...\&quot;     },     {       \&quot;JobID\&quot;: \&quot;9304c616-291f-41ad-b862-54e133c0149e\&quot;,       \&quot;SourceNodeID\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,       \&quot;EventName\&quot;: \&quot;ResultsPublished\&quot;,       \&quot;Spec\&quot;: {         \&quot;Docker\&quot;: {},         \&quot;Language\&quot;: {           \&quot;JobContext\&quot;: {}         },         \&quot;Wasm\&quot;: {},         \&quot;Resources\&quot;: {           \&quot;GPU\&quot;: \&quot;\&quot;         },         \&quot;Sharding\&quot;: {}       },       \&quot;JobExecutionPlan\&quot;: {},       \&quot;Deal\&quot;: {},       \&quot;VerificationResult\&quot;: {},       \&quot;PublishedResult\&quot;: {         \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,         \&quot;Name\&quot;: \&quot;job-9304c616-291f-41ad-b862-54e133c0149e-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,         \&quot;CID\&quot;: \&quot;QmTVmC7JBD2ES2qGPqBNVWnX1KeEPNrPGb7rJ8cpFgtefe\&quot;       },       \&quot;EventTime\&quot;: \&quot;2022-11-17T13:32:55.756658941Z\&quot;,       \&quot;SenderPublicKey\&quot;: \&quot;...\&quot;     }   ] } &#x60;&#x60;&#x60;
     * @param body Request must specify a &#x60;client_id&#x60;. To retrieve your &#x60;client_id&#x60;, you can do the following: (1) submit a dummy job to Bacalhau (or use one you created before), (2) run &#x60;bacalhau describe &lt;job-id&gt;&#x60; and fetch the &#x60;ClientID&#x60; field. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call pkgpublicapieventsAsync(PublicapiEventsRequest body, final ApiCallback<PublicapiEventsResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = pkgpublicapieventsValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PublicapiEventsResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for pkgpublicapilocalEvents
     * @param body  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call pkgpublicapilocalEventsCall(PublicapiLocalEventsRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/local_events";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call pkgpublicapilocalEventsValidateBeforeCall(PublicapiLocalEventsRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling pkgpublicapilocalEvents(Async)");
        }
        
        com.squareup.okhttp.Call call = pkgpublicapilocalEventsCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Returns the node&#x27;s local events related to the job-id passed in the body payload. Useful for troubleshooting.
     * Local events (e.g. Selected, BidAccepted, Verified) are useful to track the progress of a job.
     * @param body  (required)
     * @return PublicapiLocalEventsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PublicapiLocalEventsResponse pkgpublicapilocalEvents(PublicapiLocalEventsRequest body) throws ApiException {
        ApiResponse<PublicapiLocalEventsResponse> resp = pkgpublicapilocalEventsWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Returns the node&#x27;s local events related to the job-id passed in the body payload. Useful for troubleshooting.
     * Local events (e.g. Selected, BidAccepted, Verified) are useful to track the progress of a job.
     * @param body  (required)
     * @return ApiResponse&lt;PublicapiLocalEventsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PublicapiLocalEventsResponse> pkgpublicapilocalEventsWithHttpInfo(PublicapiLocalEventsRequest body) throws ApiException {
        com.squareup.okhttp.Call call = pkgpublicapilocalEventsValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<PublicapiLocalEventsResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Returns the node&#x27;s local events related to the job-id passed in the body payload. Useful for troubleshooting. (asynchronously)
     * Local events (e.g. Selected, BidAccepted, Verified) are useful to track the progress of a job.
     * @param body  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call pkgpublicapilocalEventsAsync(PublicapiLocalEventsRequest body, final ApiCallback<PublicapiLocalEventsResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = pkgpublicapilocalEventsValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PublicapiLocalEventsResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for pkgpublicapiresults
     * @param body  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call pkgpublicapiresultsCall(PublicapiStateRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/results";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call pkgpublicapiresultsValidateBeforeCall(PublicapiStateRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling pkgpublicapiresults(Async)");
        }
        
        com.squareup.okhttp.Call call = pkgpublicapiresultsCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Returns the results of the job-id specified in the body payload.
     * Example response:  &#x60;&#x60;&#x60;json {   \&quot;results\&quot;: [     {       \&quot;NodeID\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,       \&quot;Data\&quot;: {         \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,         \&quot;Name\&quot;: \&quot;job-9304c616-291f-41ad-b862-54e133c0149e-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,         \&quot;CID\&quot;: \&quot;QmTVmC7JBD2ES2qGPqBNVWnX1KeEPNrPGb7rJ8cpFgtefe\&quot;       }     }   ] } &#x60;&#x60;&#x60;
     * @param body  (required)
     * @return PublicapiResultsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PublicapiResultsResponse pkgpublicapiresults(PublicapiStateRequest body) throws ApiException {
        ApiResponse<PublicapiResultsResponse> resp = pkgpublicapiresultsWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Returns the results of the job-id specified in the body payload.
     * Example response:  &#x60;&#x60;&#x60;json {   \&quot;results\&quot;: [     {       \&quot;NodeID\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,       \&quot;Data\&quot;: {         \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,         \&quot;Name\&quot;: \&quot;job-9304c616-291f-41ad-b862-54e133c0149e-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,         \&quot;CID\&quot;: \&quot;QmTVmC7JBD2ES2qGPqBNVWnX1KeEPNrPGb7rJ8cpFgtefe\&quot;       }     }   ] } &#x60;&#x60;&#x60;
     * @param body  (required)
     * @return ApiResponse&lt;PublicapiResultsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PublicapiResultsResponse> pkgpublicapiresultsWithHttpInfo(PublicapiStateRequest body) throws ApiException {
        com.squareup.okhttp.Call call = pkgpublicapiresultsValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<PublicapiResultsResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Returns the results of the job-id specified in the body payload. (asynchronously)
     * Example response:  &#x60;&#x60;&#x60;json {   \&quot;results\&quot;: [     {       \&quot;NodeID\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,       \&quot;Data\&quot;: {         \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,         \&quot;Name\&quot;: \&quot;job-9304c616-291f-41ad-b862-54e133c0149e-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,         \&quot;CID\&quot;: \&quot;QmTVmC7JBD2ES2qGPqBNVWnX1KeEPNrPGb7rJ8cpFgtefe\&quot;       }     }   ] } &#x60;&#x60;&#x60;
     * @param body  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call pkgpublicapiresultsAsync(PublicapiStateRequest body, final ApiCallback<PublicapiResultsResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = pkgpublicapiresultsValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PublicapiResultsResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for pkgpublicapistates
     * @param body  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call pkgpublicapistatesCall(PublicapiStateRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/states";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call pkgpublicapistatesValidateBeforeCall(PublicapiStateRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling pkgpublicapistates(Async)");
        }
        
        com.squareup.okhttp.Call call = pkgpublicapistatesCall(body, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Returns the state of the job-id specified in the body payload.
     * Example response:  &#x60;&#x60;&#x60;json {   \&quot;state\&quot;: {     \&quot;Nodes\&quot;: {       \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;: {         \&quot;Shards\&quot;: {           \&quot;0\&quot;: {             \&quot;NodeId\&quot;: \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;,             \&quot;State\&quot;: \&quot;Cancelled\&quot;,             \&quot;VerificationResult\&quot;: {},             \&quot;PublishedResults\&quot;: {}           }         }       },       \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;: {         \&quot;Shards\&quot;: {           \&quot;0\&quot;: {             \&quot;NodeId\&quot;: \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;,             \&quot;State\&quot;: \&quot;Cancelled\&quot;,             \&quot;VerificationResult\&quot;: {},             \&quot;PublishedResults\&quot;: {}           }         }       },       \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;: {         \&quot;Shards\&quot;: {           \&quot;0\&quot;: {             \&quot;NodeId\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,             \&quot;State\&quot;: \&quot;Completed\&quot;,             \&quot;Status\&quot;: \&quot;Got results proposal of length: 0\&quot;,             \&quot;VerificationResult\&quot;: {               \&quot;Complete\&quot;: true,               \&quot;Result\&quot;: true             },             \&quot;PublishedResults\&quot;: {               \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,               \&quot;Name\&quot;: \&quot;job-9304c616-291f-41ad-b862-54e133c0149e-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,               \&quot;CID\&quot;: \&quot;QmTVmC7JBD2ES2qGPqBNVWnX1KeEPNrPGb7rJ8cpFgtefe\&quot;             },             \&quot;RunOutput\&quot;: {               \&quot;stdout\&quot;: \&quot;Thu Nov 17 13:32:55 UTC 2022\\n\&quot;,               \&quot;stdouttruncated\&quot;: false,               \&quot;stderr\&quot;: \&quot;\&quot;,               \&quot;stderrtruncated\&quot;: false,               \&quot;exitCode\&quot;: 0,               \&quot;runnerError\&quot;: \&quot;\&quot;             }           }         }       }     }   } } &#x60;&#x60;&#x60;
     * @param body  (required)
     * @return PublicapiStateResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PublicapiStateResponse pkgpublicapistates(PublicapiStateRequest body) throws ApiException {
        ApiResponse<PublicapiStateResponse> resp = pkgpublicapistatesWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Returns the state of the job-id specified in the body payload.
     * Example response:  &#x60;&#x60;&#x60;json {   \&quot;state\&quot;: {     \&quot;Nodes\&quot;: {       \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;: {         \&quot;Shards\&quot;: {           \&quot;0\&quot;: {             \&quot;NodeId\&quot;: \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;,             \&quot;State\&quot;: \&quot;Cancelled\&quot;,             \&quot;VerificationResult\&quot;: {},             \&quot;PublishedResults\&quot;: {}           }         }       },       \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;: {         \&quot;Shards\&quot;: {           \&quot;0\&quot;: {             \&quot;NodeId\&quot;: \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;,             \&quot;State\&quot;: \&quot;Cancelled\&quot;,             \&quot;VerificationResult\&quot;: {},             \&quot;PublishedResults\&quot;: {}           }         }       },       \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;: {         \&quot;Shards\&quot;: {           \&quot;0\&quot;: {             \&quot;NodeId\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,             \&quot;State\&quot;: \&quot;Completed\&quot;,             \&quot;Status\&quot;: \&quot;Got results proposal of length: 0\&quot;,             \&quot;VerificationResult\&quot;: {               \&quot;Complete\&quot;: true,               \&quot;Result\&quot;: true             },             \&quot;PublishedResults\&quot;: {               \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,               \&quot;Name\&quot;: \&quot;job-9304c616-291f-41ad-b862-54e133c0149e-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,               \&quot;CID\&quot;: \&quot;QmTVmC7JBD2ES2qGPqBNVWnX1KeEPNrPGb7rJ8cpFgtefe\&quot;             },             \&quot;RunOutput\&quot;: {               \&quot;stdout\&quot;: \&quot;Thu Nov 17 13:32:55 UTC 2022\\n\&quot;,               \&quot;stdouttruncated\&quot;: false,               \&quot;stderr\&quot;: \&quot;\&quot;,               \&quot;stderrtruncated\&quot;: false,               \&quot;exitCode\&quot;: 0,               \&quot;runnerError\&quot;: \&quot;\&quot;             }           }         }       }     }   } } &#x60;&#x60;&#x60;
     * @param body  (required)
     * @return ApiResponse&lt;PublicapiStateResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PublicapiStateResponse> pkgpublicapistatesWithHttpInfo(PublicapiStateRequest body) throws ApiException {
        com.squareup.okhttp.Call call = pkgpublicapistatesValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<PublicapiStateResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Returns the state of the job-id specified in the body payload. (asynchronously)
     * Example response:  &#x60;&#x60;&#x60;json {   \&quot;state\&quot;: {     \&quot;Nodes\&quot;: {       \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;: {         \&quot;Shards\&quot;: {           \&quot;0\&quot;: {             \&quot;NodeId\&quot;: \&quot;QmSyJ8VUd4YSPwZFJSJsHmmmmg7sd4BAc2yHY73nisJo86\&quot;,             \&quot;State\&quot;: \&quot;Cancelled\&quot;,             \&quot;VerificationResult\&quot;: {},             \&quot;PublishedResults\&quot;: {}           }         }       },       \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;: {         \&quot;Shards\&quot;: {           \&quot;0\&quot;: {             \&quot;NodeId\&quot;: \&quot;QmYgxZiySj3MRkwLSL4X2MF5F9f2PMhAE3LV49XkfNL1o3\&quot;,             \&quot;State\&quot;: \&quot;Cancelled\&quot;,             \&quot;VerificationResult\&quot;: {},             \&quot;PublishedResults\&quot;: {}           }         }       },       \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;: {         \&quot;Shards\&quot;: {           \&quot;0\&quot;: {             \&quot;NodeId\&quot;: \&quot;QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,             \&quot;State\&quot;: \&quot;Completed\&quot;,             \&quot;Status\&quot;: \&quot;Got results proposal of length: 0\&quot;,             \&quot;VerificationResult\&quot;: {               \&quot;Complete\&quot;: true,               \&quot;Result\&quot;: true             },             \&quot;PublishedResults\&quot;: {               \&quot;StorageSource\&quot;: \&quot;IPFS\&quot;,               \&quot;Name\&quot;: \&quot;job-9304c616-291f-41ad-b862-54e133c0149e-shard-0-host-QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL\&quot;,               \&quot;CID\&quot;: \&quot;QmTVmC7JBD2ES2qGPqBNVWnX1KeEPNrPGb7rJ8cpFgtefe\&quot;             },             \&quot;RunOutput\&quot;: {               \&quot;stdout\&quot;: \&quot;Thu Nov 17 13:32:55 UTC 2022\\n\&quot;,               \&quot;stdouttruncated\&quot;: false,               \&quot;stderr\&quot;: \&quot;\&quot;,               \&quot;stderrtruncated\&quot;: false,               \&quot;exitCode\&quot;: 0,               \&quot;runnerError\&quot;: \&quot;\&quot;             }           }         }       }     }   } } &#x60;&#x60;&#x60;
     * @param body  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call pkgpublicapistatesAsync(PublicapiStateRequest body, final ApiCallback<PublicapiStateResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = pkgpublicapistatesValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PublicapiStateResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
