/*
 * Bacalhau API
 * This page is the reference of the Bacalhau REST API. Project docs are available at https://docs.bacalhau.org/. Find more information about Bacalhau at https://github.com/filecoin-project/bacalhau.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: team@bacalhau.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BacalhauClient);
  }
}(this, function(expect, BacalhauClient) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('RequesternodeActiveJob', function() {
      beforeEach(function() {
        instance = new BacalhauClient.RequesternodeActiveJob();
      });

      it('should create an instance of RequesternodeActiveJob', function() {
        // TODO: update the code to test RequesternodeActiveJob
        expect(instance).to.be.a(BacalhauClient.RequesternodeActiveJob);
      });

      it('should have the property biddingNodesCount (base name: "BiddingNodesCount")', function() {
        // TODO: update the code to test the property biddingNodesCount
        expect(instance).to.have.property('biddingNodesCount');
        // expect(instance.biddingNodesCount).to.be(expectedValueLiteral);
      });

      it('should have the property completedNodesCount (base name: "CompletedNodesCount")', function() {
        // TODO: update the code to test the property completedNodesCount
        expect(instance).to.have.property('completedNodesCount');
        // expect(instance.completedNodesCount).to.be(expectedValueLiteral);
      });

      it('should have the property shardID (base name: "ShardID")', function() {
        // TODO: update the code to test the property shardID
        expect(instance).to.have.property('shardID');
        // expect(instance.shardID).to.be(expectedValueLiteral);
      });

      it('should have the property state (base name: "State")', function() {
        // TODO: update the code to test the property state
        expect(instance).to.have.property('state');
        // expect(instance.state).to.be(expectedValueLiteral);
      });

    });
  });

}));
