/*
 * Bacalhau API
 * This page is the reference of the Bacalhau REST API. Project docs are available at https://docs.bacalhau.org/. Find more information about Bacalhau at https://github.com/filecoin-project/bacalhau.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: team@bacalhau.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ModelDeal} from './ModelDeal';
import {ModelJobEvent} from './ModelJobEvent';
import {ModelJobExecutionPlan} from './ModelJobExecutionPlan';
import {ModelJobLocalEvent} from './ModelJobLocalEvent';
import {ModelJobState} from './ModelJobState';
import {ModelSpec} from './ModelSpec';

/**
 * The ModelJob model module.
 * @module model/ModelJob
 * @version 0.3.13
 */
export class ModelJob {
  /**
   * Constructs a new <code>ModelJob</code>.
   * @alias module:model/ModelJob
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ModelJob</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ModelJob} obj Optional instance to populate.
   * @return {module:model/ModelJob} The populated <code>ModelJob</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ModelJob();
      if (data.hasOwnProperty('APIVersion'))
        obj.aPIVersion = ApiClient.convertToType(data['APIVersion'], 'String');
      if (data.hasOwnProperty('ClientID'))
        obj.clientID = ApiClient.convertToType(data['ClientID'], 'String');
      if (data.hasOwnProperty('CreatedAt'))
        obj.createdAt = ApiClient.convertToType(data['CreatedAt'], 'String');
      if (data.hasOwnProperty('Deal'))
        obj.deal = ModelDeal.constructFromObject(data['Deal']);
      if (data.hasOwnProperty('ExecutionPlan'))
        obj.executionPlan = ModelJobExecutionPlan.constructFromObject(data['ExecutionPlan']);
      if (data.hasOwnProperty('ID'))
        obj.ID = ApiClient.convertToType(data['ID'], 'String');
      if (data.hasOwnProperty('JobEvents'))
        obj.jobEvents = ApiClient.convertToType(data['JobEvents'], [ModelJobEvent]);
      if (data.hasOwnProperty('JobState'))
        obj.jobState = ModelJobState.constructFromObject(data['JobState']);
      if (data.hasOwnProperty('LocalJobEvents'))
        obj.localJobEvents = ApiClient.convertToType(data['LocalJobEvents'], [ModelJobLocalEvent]);
      if (data.hasOwnProperty('RequesterNodeID'))
        obj.requesterNodeID = ApiClient.convertToType(data['RequesterNodeID'], 'String');
      if (data.hasOwnProperty('RequesterPublicKey'))
        obj.requesterPublicKey = ApiClient.convertToType(data['RequesterPublicKey'], ['Number']);
      if (data.hasOwnProperty('Spec'))
        obj.spec = ModelSpec.constructFromObject(data['Spec']);
    }
    return obj;
  }
}

/**
 * @member {String} aPIVersion
 */
ModelJob.prototype.aPIVersion = undefined;

/**
 * The ID of the client that created this job.
 * @member {String} clientID
 */
ModelJob.prototype.clientID = undefined;

/**
 * Time the job was submitted to the bacalhau network.
 * @member {String} createdAt
 */
ModelJob.prototype.createdAt = undefined;

/**
 * @member {module:model/ModelDeal} deal
 */
ModelJob.prototype.deal = undefined;

/**
 * @member {module:model/ModelJobExecutionPlan} executionPlan
 */
ModelJob.prototype.executionPlan = undefined;

/**
 * The unique global ID of this job in the bacalhau network.
 * @member {String} ID
 */
ModelJob.prototype.ID = undefined;

/**
 * All events associated with the job
 * @member {Array.<module:model/ModelJobEvent>} jobEvents
 */
ModelJob.prototype.jobEvents = undefined;

/**
 * @member {module:model/ModelJobState} jobState
 */
ModelJob.prototype.jobState = undefined;

/**
 * All local events associated with the job
 * @member {Array.<module:model/ModelJobLocalEvent>} localJobEvents
 */
ModelJob.prototype.localJobEvents = undefined;

/**
 * The ID of the requester node that owns this job.
 * @member {String} requesterNodeID
 */
ModelJob.prototype.requesterNodeID = undefined;

/**
 * The public key of the Requester node that created this job This can be used to encrypt messages back to the creator
 * @member {Array.<Number>} requesterPublicKey
 */
ModelJob.prototype.requesterPublicKey = undefined;

/**
 * @member {module:model/ModelSpec} spec
 */
ModelJob.prototype.spec = undefined;

