//
// MiscAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class MiscAPI {
    /**
     Returns the id of the host node.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiServerid(completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        apiServeridWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the id of the host node.
     - GET /id
     - 

     - examples: [{contentType=application/json, example=""}]

     - returns: RequestBuilder<String> 
     */
    open class func apiServeridWithRequestBuilder() -> RequestBuilder<String> {
        let path = "/id"
        let URLString = bacalhau-clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<String>.Type = bacalhau-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Returns the peers connected to the host via the transport layer.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiServerpeers(completion: @escaping ((_ data: [String:[String]]?,_ error: Error?) -> Void)) {
        apiServerpeersWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the peers connected to the host via the transport layer.
     - GET /peers

     - examples: [{contentType=application/json, example={
  "key" : [ "", "" ]
}}]

     - returns: RequestBuilder<[String:[String]]> 
     */
    open class func apiServerpeersWithRequestBuilder() -> RequestBuilder<[String:[String]]> {
        let path = "/peers"
        let URLString = bacalhau-clientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[String:[String]]>.Type = bacalhau-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Returns the build version running on the server.

     - parameter body: (body) Request must specify a &#x60;client_id&#x60;. To retrieve your &#x60;client_id&#x60;, you can do the following: (1) submit a dummy job to Bacalhau (or use one you created before), (2) run &#x60;bacalhau describe &lt;job-id&gt;&#x60; and fetch the &#x60;ClientID&#x60; field. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiServerversion(body: PublicapiVersionRequest, completion: @escaping ((_ data: PublicapiVersionResponse?,_ error: Error?) -> Void)) {
        apiServerversionWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Returns the build version running on the server.
     - POST /version

     - examples: [{contentType=application/json, example={
  "build_version_info" : {
    "goarch" : "amd64",
    "major" : "0",
    "minor" : "3",
    "builddate" : "2022-11-16T14:03:31Z",
    "goos" : "linux",
    "gitversion" : "v0.3.12",
    "gitcommit" : "d612b63108f2b5ce1ab2b9e02444eb1dac1d922d"
  }
}}]
     - parameter body: (body) Request must specify a &#x60;client_id&#x60;. To retrieve your &#x60;client_id&#x60;, you can do the following: (1) submit a dummy job to Bacalhau (or use one you created before), (2) run &#x60;bacalhau describe &lt;job-id&gt;&#x60; and fetch the &#x60;ClientID&#x60; field. 

     - returns: RequestBuilder<PublicapiVersionResponse> 
     */
    open class func apiServerversionWithRequestBuilder(body: PublicapiVersionRequest) -> RequestBuilder<PublicapiVersionResponse> {
        let path = "/version"
        let URLString = bacalhau-clientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<PublicapiVersionResponse>.Type = bacalhau-clientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
