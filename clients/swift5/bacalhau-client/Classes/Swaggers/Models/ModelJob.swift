//
// ModelJob.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct ModelJob: Codable {

    public var aPIVersion: String?
    /** The ID of the client that created this job. */
    public var clientID: String?
    /** Time the job was submitted to the bacalhau network. */
    public var createdAt: String?
    public var deal: ModelDeal?
    public var executionPlan: ModelJobExecutionPlan?
    /** The unique global ID of this job in the bacalhau network. */
    public var ID: String?
    /** All events associated with the job */
    public var jobEvents: [ModelJobEvent]?
    public var jobState: ModelJobState?
    /** All local events associated with the job */
    public var localJobEvents: [ModelJobLocalEvent]?
    /** The ID of the requester node that owns this job. */
    public var requesterNodeID: String?
    /** The public key of the Requester node that created this job This can be used to encrypt messages back to the creator */
    public var requesterPublicKey: [Int]?
    public var spec: ModelSpec?

    public init(aPIVersion: String? = nil, clientID: String? = nil, createdAt: String? = nil, deal: ModelDeal? = nil, executionPlan: ModelJobExecutionPlan? = nil, ID: String? = nil, jobEvents: [ModelJobEvent]? = nil, jobState: ModelJobState? = nil, localJobEvents: [ModelJobLocalEvent]? = nil, requesterNodeID: String? = nil, requesterPublicKey: [Int]? = nil, spec: ModelSpec? = nil) {
        self.aPIVersion = aPIVersion
        self.clientID = clientID
        self.createdAt = createdAt
        self.deal = deal
        self.executionPlan = executionPlan
        self.ID = ID
        self.jobEvents = jobEvents
        self.jobState = jobState
        self.localJobEvents = localJobEvents
        self.requesterNodeID = requesterNodeID
        self.requesterPublicKey = requesterPublicKey
        self.spec = spec
    }

    public enum CodingKeys: String, CodingKey { 
        case aPIVersion = "APIVersion"
        case clientID = "ClientID"
        case createdAt = "CreatedAt"
        case deal = "Deal"
        case executionPlan = "ExecutionPlan"
        case ID
        case jobEvents = "JobEvents"
        case jobState = "JobState"
        case localJobEvents = "LocalJobEvents"
        case requesterNodeID = "RequesterNodeID"
        case requesterPublicKey = "RequesterPublicKey"
        case spec = "Spec"
    }

}
