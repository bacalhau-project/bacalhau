//
// ModelJobShardingConfig.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct ModelJobShardingConfig: Codable {

    /** how many \&quot;items\&quot; are to be processed in each shard we first apply the glob pattern which will result in a flat list of items this number decides how to group that flat list into actual shards run by compute nodes */
    public var batchSize: Int?
    /** divide the inputs up into the smallest possible unit for example /_* would mean \&quot;all top level files or folders\&quot; this being an empty string means \&quot;no sharding\&quot; */
    public var globPattern: String?
    /** when using multiple input volumes what path do we treat as the common mount path to apply the glob pattern to */
    public var globPatternBasePath: String?

    public init(batchSize: Int? = nil, globPattern: String? = nil, globPatternBasePath: String? = nil) {
        self.batchSize = batchSize
        self.globPattern = globPattern
        self.globPatternBasePath = globPatternBasePath
    }

    public enum CodingKeys: String, CodingKey { 
        case batchSize = "BatchSize"
        case globPattern = "GlobPattern"
        case globPatternBasePath = "GlobPatternBasePath"
    }

}
