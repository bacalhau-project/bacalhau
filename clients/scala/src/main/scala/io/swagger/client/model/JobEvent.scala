/**
 * Bacalhau API
 * This page is the reference of the Bacalhau REST API. Project docs are available at https://docs.bacalhau.org/. Find more information about Bacalhau at https://github.com/filecoin-project/bacalhau.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: team@bacalhau.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.model


/**
 * @param aPIVersion APIVersion of the Job for example: '''V1beta1'''
 * @param clientID optional clientID if this is an externally triggered event (like create job) for example: '''ac13188e93c97a9c2e7cf8e86c7313156a73436036f30da1ececc2ce79f9ea51'''
 * @param deal 
 * @param eventName 
 * @param eventTime  for example: '''2022-11-17T13:32:55.756658941Z'''
 * @param jobExecutionPlan 
 * @param jobID  for example: '''9304c616-291f-41ad-b862-54e133c0149e'''
 * @param publishedResult 
 * @param runOutput 
 * @param senderPublicKey 
 * @param shardIndex what shard is this event for
 * @param sourceNodeID the node that emitted this event for example: '''QmXaXu9N5GNetatsvwnTfQqNtSeKAD6uCmarbh3LMRYAcF'''
 * @param spec 
 * @param status  for example: '''Got results proposal of length: 0'''
 * @param targetNodeID the node that this event is for e.g. \"AcceptJobBid\" was emitted by Requester but it targeting compute node for example: '''QmdZQ7ZbhnvWY1J12XYKGHApJ6aufKyLNSvf8jZBrBaAVL'''
 * @param verificationProposal 
 * @param verificationResult 
 */
case class JobEvent (
  aPIVersion: Option[String] = None,
  clientID: Option[String] = None,
  deal: Option[model.Deal] = None,
  eventName: Option[Integer] = None,
  eventTime: Option[String] = None,
  jobExecutionPlan: Option[model.JobExecutionPlan] = None,
  jobID: Option[String] = None,
  publishedResult: Option[model.StorageSpec] = None,
  runOutput: Option[model.RunCommandResult] = None,
  senderPublicKey: Option[List[Integer]] = None,
  shardIndex: Option[Integer] = None,
  sourceNodeID: Option[String] = None,
  spec: Option[model.Spec] = None,
  status: Option[String] = None,
  targetNodeID: Option[String] = None,
  verificationProposal: Option[List[Integer]] = None,
  verificationResult: Option[model.VerificationResult] = None
)

