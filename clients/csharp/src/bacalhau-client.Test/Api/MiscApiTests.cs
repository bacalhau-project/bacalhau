/* 
 * Bacalhau API
 *
 * This page is the reference of the Bacalhau REST API. Project docs are available at https://docs.bacalhau.org/. Find more information about Bacalhau at https://github.com/filecoin-project/bacalhau.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: team@bacalhau.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using bacalhau-client.Client;
using bacalhau-client.Api;
using bacalhau-client.Model;

namespace bacalhau-client.Test
{
    /// <summary>
    ///  Class for testing MiscApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MiscApiTests
    {
        private MiscApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MiscApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MiscApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MiscApi
            //Assert.IsInstanceOfType(typeof(MiscApi), instance, "instance is a MiscApi");
        }

        /// <summary>
        /// Test ApiServerid
        /// </summary>
        [Test]
        public void ApiServeridTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiServerid();
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        /// <summary>
        /// Test ApiServerpeers
        /// </summary>
        [Test]
        public void ApiServerpeersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiServerpeers();
            //Assert.IsInstanceOf<Dictionary<string, List<string>>> (response, "response is Dictionary<string, List<string>>");
        }
        /// <summary>
        /// Test ApiServerversion
        /// </summary>
        [Test]
        public void ApiServerversionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PublicapiVersionRequest body = null;
            //var response = instance.ApiServerversion(body);
            //Assert.IsInstanceOf<PublicapiVersionResponse> (response, "response is PublicapiVersionResponse");
        }
    }

}
