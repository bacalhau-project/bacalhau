/**
 * Bacalhau API
 * This page is the reference of the Bacalhau REST API. Project docs are available at https://docs.bacalhau.org/. Find more information about Bacalhau at https://github.com/filecoin-project/bacalhau.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: team@bacalhau.org
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api"
import { Configuration } from "./configuration"

const config: Configuration = {}

describe("HealthApi", () => {
  let instance: api.HealthApi
  beforeEach(function() {
    instance = new api.HealthApi(config)
  });

  test("apiServerdebug", () => {
    return expect(instance.apiServerdebug({})).resolves.toBe(null)
  })
  test("apiServerhealthz", () => {
    return expect(instance.apiServerhealthz({})).resolves.toBe(null)
  })
  test("apiServerlivez", () => {
    return expect(instance.apiServerlivez({})).resolves.toBe(null)
  })
  test("apiServerlogz", () => {
    return expect(instance.apiServerlogz({})).resolves.toBe(null)
  })
  test("apiServerreadyz", () => {
    return expect(instance.apiServerreadyz({})).resolves.toBe(null)
  })
  test("apiServervarz", () => {
    return expect(instance.apiServervarz({})).resolves.toBe(null)
  })
})

describe("JobApi", () => {
  let instance: api.JobApi
  beforeEach(function() {
    instance = new api.JobApi(config)
  });

  test("pkgapiServerSubmit", () => {
    const body: api.PublicapiSubmitRequest = undefined
    return expect(instance.pkgapiServerSubmit(body, {})).resolves.toBe(null)
  })
  test("pkgpublicapiList", () => {
    const body: api.PublicapiListRequest = undefined
    return expect(instance.pkgpublicapiList(body, {})).resolves.toBe(null)
  })
  test("pkgpublicapievents", () => {
    const body: api.PublicapiEventsRequest = undefined
    return expect(instance.pkgpublicapievents(body, {})).resolves.toBe(null)
  })
  test("pkgpublicapilocalEvents", () => {
    const body: api.PublicapiLocalEventsRequest = undefined
    return expect(instance.pkgpublicapilocalEvents(body, {})).resolves.toBe(null)
  })
  test("pkgpublicapiresults", () => {
    const body: api.PublicapiStateRequest = undefined
    return expect(instance.pkgpublicapiresults(body, {})).resolves.toBe(null)
  })
  test("pkgpublicapistates", () => {
    const body: api.PublicapiStateRequest = undefined
    return expect(instance.pkgpublicapistates(body, {})).resolves.toBe(null)
  })
})

describe("MiscApi", () => {
  let instance: api.MiscApi
  beforeEach(function() {
    instance = new api.MiscApi(config)
  });

  test("apiServerid", () => {
    return expect(instance.apiServerid({})).resolves.toBe(null)
  })
  test("apiServerpeers", () => {
    return expect(instance.apiServerpeers({})).resolves.toBe(null)
  })
  test("apiServerversion", () => {
    const body: api.PublicapiVersionRequest = undefined
    return expect(instance.apiServerversion(body, {})).resolves.toBe(null)
  })
})

