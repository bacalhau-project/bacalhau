# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bacalhau-client.models.base_model_ import Model
from bacalhau-client import util


class TypesMountStatus(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, all: int=None, free: int=None, used: int=None):  # noqa: E501
        """TypesMountStatus - a model defined in Swagger

        :param all: The all of this TypesMountStatus.  # noqa: E501
        :type all: int
        :param free: The free of this TypesMountStatus.  # noqa: E501
        :type free: int
        :param used: The used of this TypesMountStatus.  # noqa: E501
        :type used: int
        """
        self.swagger_types = {
            'all': int,
            'free': int,
            'used': int
        }

        self.attribute_map = {
            'all': 'All',
            'free': 'Free',
            'used': 'Used'
        }
        self._all = all
        self._free = free
        self._used = used

    @classmethod
    def from_dict(cls, dikt) -> 'TypesMountStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The types.MountStatus of this TypesMountStatus.  # noqa: E501
        :rtype: TypesMountStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all(self) -> int:
        """Gets the all of this TypesMountStatus.


        :return: The all of this TypesMountStatus.
        :rtype: int
        """
        return self._all

    @all.setter
    def all(self, all: int):
        """Sets the all of this TypesMountStatus.


        :param all: The all of this TypesMountStatus.
        :type all: int
        """

        self._all = all

    @property
    def free(self) -> int:
        """Gets the free of this TypesMountStatus.


        :return: The free of this TypesMountStatus.
        :rtype: int
        """
        return self._free

    @free.setter
    def free(self, free: int):
        """Sets the free of this TypesMountStatus.


        :param free: The free of this TypesMountStatus.
        :type free: int
        """

        self._free = free

    @property
    def used(self) -> int:
        """Gets the used of this TypesMountStatus.


        :return: The used of this TypesMountStatus.
        :rtype: int
        """
        return self._used

    @used.setter
    def used(self, used: int):
        """Sets the used of this TypesMountStatus.


        :param used: The used of this TypesMountStatus.
        :type used: int
        """

        self._used = used
