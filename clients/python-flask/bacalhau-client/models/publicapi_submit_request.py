# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bacalhau-client.models.base_model_ import Model
from bacalhau-client.models.model_job_create_payload import ModelJobCreatePayload  # noqa: F401,E501
from bacalhau-client import util


class PublicapiSubmitRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, client_public_key: str=None, data: ModelJobCreatePayload=None, signature: str=None):  # noqa: E501
        """PublicapiSubmitRequest - a model defined in Swagger

        :param client_public_key: The client_public_key of this PublicapiSubmitRequest.  # noqa: E501
        :type client_public_key: str
        :param data: The data of this PublicapiSubmitRequest.  # noqa: E501
        :type data: ModelJobCreatePayload
        :param signature: The signature of this PublicapiSubmitRequest.  # noqa: E501
        :type signature: str
        """
        self.swagger_types = {
            'client_public_key': str,
            'data': ModelJobCreatePayload,
            'signature': str
        }

        self.attribute_map = {
            'client_public_key': 'client_public_key',
            'data': 'data',
            'signature': 'signature'
        }
        self._client_public_key = client_public_key
        self._data = data
        self._signature = signature

    @classmethod
    def from_dict(cls, dikt) -> 'PublicapiSubmitRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The publicapi.submitRequest of this PublicapiSubmitRequest.  # noqa: E501
        :rtype: PublicapiSubmitRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_public_key(self) -> str:
        """Gets the client_public_key of this PublicapiSubmitRequest.

        The base64-encoded public key of the client:  # noqa: E501

        :return: The client_public_key of this PublicapiSubmitRequest.
        :rtype: str
        """
        return self._client_public_key

    @client_public_key.setter
    def client_public_key(self, client_public_key: str):
        """Sets the client_public_key of this PublicapiSubmitRequest.

        The base64-encoded public key of the client:  # noqa: E501

        :param client_public_key: The client_public_key of this PublicapiSubmitRequest.
        :type client_public_key: str
        """
        if client_public_key is None:
            raise ValueError("Invalid value for `client_public_key`, must not be `None`")  # noqa: E501

        self._client_public_key = client_public_key

    @property
    def data(self) -> ModelJobCreatePayload:
        """Gets the data of this PublicapiSubmitRequest.


        :return: The data of this PublicapiSubmitRequest.
        :rtype: ModelJobCreatePayload
        """
        return self._data

    @data.setter
    def data(self, data: ModelJobCreatePayload):
        """Sets the data of this PublicapiSubmitRequest.


        :param data: The data of this PublicapiSubmitRequest.
        :type data: ModelJobCreatePayload
        """
        if data is None:
            raise ValueError("Invalid value for `data`, must not be `None`")  # noqa: E501

        self._data = data

    @property
    def signature(self) -> str:
        """Gets the signature of this PublicapiSubmitRequest.

        A base64-encoded signature of the data, signed by the client:  # noqa: E501

        :return: The signature of this PublicapiSubmitRequest.
        :rtype: str
        """
        return self._signature

    @signature.setter
    def signature(self, signature: str):
        """Sets the signature of this PublicapiSubmitRequest.

        A base64-encoded signature of the data, signed by the client:  # noqa: E501

        :param signature: The signature of this PublicapiSubmitRequest.
        :type signature: str
        """
        if signature is None:
            raise ValueError("Invalid value for `signature`, must not be `None`")  # noqa: E501

        self._signature = signature
