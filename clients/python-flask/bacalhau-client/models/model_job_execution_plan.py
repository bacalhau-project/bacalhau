# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bacalhau-client.models.base_model_ import Model
from bacalhau-client import util


class ModelJobExecutionPlan(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, shards_total: int=None):  # noqa: E501
        """ModelJobExecutionPlan - a model defined in Swagger

        :param shards_total: The shards_total of this ModelJobExecutionPlan.  # noqa: E501
        :type shards_total: int
        """
        self.swagger_types = {
            'shards_total': int
        }

        self.attribute_map = {
            'shards_total': 'ShardsTotal'
        }
        self._shards_total = shards_total

    @classmethod
    def from_dict(cls, dikt) -> 'ModelJobExecutionPlan':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The model.JobExecutionPlan of this ModelJobExecutionPlan.  # noqa: E501
        :rtype: ModelJobExecutionPlan
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shards_total(self) -> int:
        """Gets the shards_total of this ModelJobExecutionPlan.

        how many shards are there in total for this job we are expecting this number x concurrency total JobShardState objects for this job  # noqa: E501

        :return: The shards_total of this ModelJobExecutionPlan.
        :rtype: int
        """
        return self._shards_total

    @shards_total.setter
    def shards_total(self, shards_total: int):
        """Sets the shards_total of this ModelJobExecutionPlan.

        how many shards are there in total for this job we are expecting this number x concurrency total JobShardState objects for this job  # noqa: E501

        :param shards_total: The shards_total of this ModelJobExecutionPlan.
        :type shards_total: int
        """

        self._shards_total = shards_total
