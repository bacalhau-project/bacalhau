# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bacalhau-client.models.base_model_ import Model
from bacalhau-client import util


class ModelBuildVersionInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, builddate: str=None, gitcommit: str=None, gitversion: str=None, goarch: str=None, goos: str=None, major: str=None, minor: str=None):  # noqa: E501
        """ModelBuildVersionInfo - a model defined in Swagger

        :param builddate: The builddate of this ModelBuildVersionInfo.  # noqa: E501
        :type builddate: str
        :param gitcommit: The gitcommit of this ModelBuildVersionInfo.  # noqa: E501
        :type gitcommit: str
        :param gitversion: The gitversion of this ModelBuildVersionInfo.  # noqa: E501
        :type gitversion: str
        :param goarch: The goarch of this ModelBuildVersionInfo.  # noqa: E501
        :type goarch: str
        :param goos: The goos of this ModelBuildVersionInfo.  # noqa: E501
        :type goos: str
        :param major: The major of this ModelBuildVersionInfo.  # noqa: E501
        :type major: str
        :param minor: The minor of this ModelBuildVersionInfo.  # noqa: E501
        :type minor: str
        """
        self.swagger_types = {
            'builddate': str,
            'gitcommit': str,
            'gitversion': str,
            'goarch': str,
            'goos': str,
            'major': str,
            'minor': str
        }

        self.attribute_map = {
            'builddate': 'builddate',
            'gitcommit': 'gitcommit',
            'gitversion': 'gitversion',
            'goarch': 'goarch',
            'goos': 'goos',
            'major': 'major',
            'minor': 'minor'
        }
        self._builddate = builddate
        self._gitcommit = gitcommit
        self._gitversion = gitversion
        self._goarch = goarch
        self._goos = goos
        self._major = major
        self._minor = minor

    @classmethod
    def from_dict(cls, dikt) -> 'ModelBuildVersionInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The model.BuildVersionInfo of this ModelBuildVersionInfo.  # noqa: E501
        :rtype: ModelBuildVersionInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def builddate(self) -> str:
        """Gets the builddate of this ModelBuildVersionInfo.


        :return: The builddate of this ModelBuildVersionInfo.
        :rtype: str
        """
        return self._builddate

    @builddate.setter
    def builddate(self, builddate: str):
        """Sets the builddate of this ModelBuildVersionInfo.


        :param builddate: The builddate of this ModelBuildVersionInfo.
        :type builddate: str
        """

        self._builddate = builddate

    @property
    def gitcommit(self) -> str:
        """Gets the gitcommit of this ModelBuildVersionInfo.


        :return: The gitcommit of this ModelBuildVersionInfo.
        :rtype: str
        """
        return self._gitcommit

    @gitcommit.setter
    def gitcommit(self, gitcommit: str):
        """Sets the gitcommit of this ModelBuildVersionInfo.


        :param gitcommit: The gitcommit of this ModelBuildVersionInfo.
        :type gitcommit: str
        """

        self._gitcommit = gitcommit

    @property
    def gitversion(self) -> str:
        """Gets the gitversion of this ModelBuildVersionInfo.


        :return: The gitversion of this ModelBuildVersionInfo.
        :rtype: str
        """
        return self._gitversion

    @gitversion.setter
    def gitversion(self, gitversion: str):
        """Sets the gitversion of this ModelBuildVersionInfo.


        :param gitversion: The gitversion of this ModelBuildVersionInfo.
        :type gitversion: str
        """

        self._gitversion = gitversion

    @property
    def goarch(self) -> str:
        """Gets the goarch of this ModelBuildVersionInfo.


        :return: The goarch of this ModelBuildVersionInfo.
        :rtype: str
        """
        return self._goarch

    @goarch.setter
    def goarch(self, goarch: str):
        """Sets the goarch of this ModelBuildVersionInfo.


        :param goarch: The goarch of this ModelBuildVersionInfo.
        :type goarch: str
        """

        self._goarch = goarch

    @property
    def goos(self) -> str:
        """Gets the goos of this ModelBuildVersionInfo.


        :return: The goos of this ModelBuildVersionInfo.
        :rtype: str
        """
        return self._goos

    @goos.setter
    def goos(self, goos: str):
        """Sets the goos of this ModelBuildVersionInfo.


        :param goos: The goos of this ModelBuildVersionInfo.
        :type goos: str
        """

        self._goos = goos

    @property
    def major(self) -> str:
        """Gets the major of this ModelBuildVersionInfo.


        :return: The major of this ModelBuildVersionInfo.
        :rtype: str
        """
        return self._major

    @major.setter
    def major(self, major: str):
        """Sets the major of this ModelBuildVersionInfo.


        :param major: The major of this ModelBuildVersionInfo.
        :type major: str
        """

        self._major = major

    @property
    def minor(self) -> str:
        """Gets the minor of this ModelBuildVersionInfo.


        :return: The minor of this ModelBuildVersionInfo.
        :rtype: str
        """
        return self._minor

    @minor.setter
    def minor(self, minor: str):
        """Sets the minor of this ModelBuildVersionInfo.


        :param minor: The minor of this ModelBuildVersionInfo.
        :type minor: str
        """

        self._minor = minor
