# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bacalhau-client.models.base_model_ import Model
from bacalhau-client.models.model_deal import ModelDeal  # noqa: F401,E501
from bacalhau-client.models.model_job_event import ModelJobEvent  # noqa: F401,E501
from bacalhau-client.models.model_job_execution_plan import ModelJobExecutionPlan  # noqa: F401,E501
from bacalhau-client.models.model_job_local_event import ModelJobLocalEvent  # noqa: F401,E501
from bacalhau-client.models.model_job_state import ModelJobState  # noqa: F401,E501
from bacalhau-client.models.model_spec import ModelSpec  # noqa: F401,E501
from bacalhau-client import util


class ModelJob(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, api_version: str=None, client_id: str=None, created_at: str=None, deal: ModelDeal=None, execution_plan: ModelJobExecutionPlan=None, id: str=None, job_events: List[ModelJobEvent]=None, job_state: ModelJobState=None, local_job_events: List[ModelJobLocalEvent]=None, requester_node_id: str=None, requester_public_key: List[int]=None, spec: ModelSpec=None):  # noqa: E501
        """ModelJob - a model defined in Swagger

        :param api_version: The api_version of this ModelJob.  # noqa: E501
        :type api_version: str
        :param client_id: The client_id of this ModelJob.  # noqa: E501
        :type client_id: str
        :param created_at: The created_at of this ModelJob.  # noqa: E501
        :type created_at: str
        :param deal: The deal of this ModelJob.  # noqa: E501
        :type deal: ModelDeal
        :param execution_plan: The execution_plan of this ModelJob.  # noqa: E501
        :type execution_plan: ModelJobExecutionPlan
        :param id: The id of this ModelJob.  # noqa: E501
        :type id: str
        :param job_events: The job_events of this ModelJob.  # noqa: E501
        :type job_events: List[ModelJobEvent]
        :param job_state: The job_state of this ModelJob.  # noqa: E501
        :type job_state: ModelJobState
        :param local_job_events: The local_job_events of this ModelJob.  # noqa: E501
        :type local_job_events: List[ModelJobLocalEvent]
        :param requester_node_id: The requester_node_id of this ModelJob.  # noqa: E501
        :type requester_node_id: str
        :param requester_public_key: The requester_public_key of this ModelJob.  # noqa: E501
        :type requester_public_key: List[int]
        :param spec: The spec of this ModelJob.  # noqa: E501
        :type spec: ModelSpec
        """
        self.swagger_types = {
            'api_version': str,
            'client_id': str,
            'created_at': str,
            'deal': ModelDeal,
            'execution_plan': ModelJobExecutionPlan,
            'id': str,
            'job_events': List[ModelJobEvent],
            'job_state': ModelJobState,
            'local_job_events': List[ModelJobLocalEvent],
            'requester_node_id': str,
            'requester_public_key': List[int],
            'spec': ModelSpec
        }

        self.attribute_map = {
            'api_version': 'APIVersion',
            'client_id': 'ClientID',
            'created_at': 'CreatedAt',
            'deal': 'Deal',
            'execution_plan': 'ExecutionPlan',
            'id': 'ID',
            'job_events': 'JobEvents',
            'job_state': 'JobState',
            'local_job_events': 'LocalJobEvents',
            'requester_node_id': 'RequesterNodeID',
            'requester_public_key': 'RequesterPublicKey',
            'spec': 'Spec'
        }
        self._api_version = api_version
        self._client_id = client_id
        self._created_at = created_at
        self._deal = deal
        self._execution_plan = execution_plan
        self._id = id
        self._job_events = job_events
        self._job_state = job_state
        self._local_job_events = local_job_events
        self._requester_node_id = requester_node_id
        self._requester_public_key = requester_public_key
        self._spec = spec

    @classmethod
    def from_dict(cls, dikt) -> 'ModelJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The model.Job of this ModelJob.  # noqa: E501
        :rtype: ModelJob
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_version(self) -> str:
        """Gets the api_version of this ModelJob.


        :return: The api_version of this ModelJob.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version: str):
        """Sets the api_version of this ModelJob.


        :param api_version: The api_version of this ModelJob.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def client_id(self) -> str:
        """Gets the client_id of this ModelJob.

        The ID of the client that created this job.  # noqa: E501

        :return: The client_id of this ModelJob.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id: str):
        """Sets the client_id of this ModelJob.

        The ID of the client that created this job.  # noqa: E501

        :param client_id: The client_id of this ModelJob.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def created_at(self) -> str:
        """Gets the created_at of this ModelJob.

        Time the job was submitted to the bacalhau network.  # noqa: E501

        :return: The created_at of this ModelJob.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: str):
        """Sets the created_at of this ModelJob.

        Time the job was submitted to the bacalhau network.  # noqa: E501

        :param created_at: The created_at of this ModelJob.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def deal(self) -> ModelDeal:
        """Gets the deal of this ModelJob.


        :return: The deal of this ModelJob.
        :rtype: ModelDeal
        """
        return self._deal

    @deal.setter
    def deal(self, deal: ModelDeal):
        """Sets the deal of this ModelJob.


        :param deal: The deal of this ModelJob.
        :type deal: ModelDeal
        """

        self._deal = deal

    @property
    def execution_plan(self) -> ModelJobExecutionPlan:
        """Gets the execution_plan of this ModelJob.


        :return: The execution_plan of this ModelJob.
        :rtype: ModelJobExecutionPlan
        """
        return self._execution_plan

    @execution_plan.setter
    def execution_plan(self, execution_plan: ModelJobExecutionPlan):
        """Sets the execution_plan of this ModelJob.


        :param execution_plan: The execution_plan of this ModelJob.
        :type execution_plan: ModelJobExecutionPlan
        """

        self._execution_plan = execution_plan

    @property
    def id(self) -> str:
        """Gets the id of this ModelJob.

        The unique global ID of this job in the bacalhau network.  # noqa: E501

        :return: The id of this ModelJob.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this ModelJob.

        The unique global ID of this job in the bacalhau network.  # noqa: E501

        :param id: The id of this ModelJob.
        :type id: str
        """

        self._id = id

    @property
    def job_events(self) -> List[ModelJobEvent]:
        """Gets the job_events of this ModelJob.

        All events associated with the job  # noqa: E501

        :return: The job_events of this ModelJob.
        :rtype: List[ModelJobEvent]
        """
        return self._job_events

    @job_events.setter
    def job_events(self, job_events: List[ModelJobEvent]):
        """Sets the job_events of this ModelJob.

        All events associated with the job  # noqa: E501

        :param job_events: The job_events of this ModelJob.
        :type job_events: List[ModelJobEvent]
        """

        self._job_events = job_events

    @property
    def job_state(self) -> ModelJobState:
        """Gets the job_state of this ModelJob.


        :return: The job_state of this ModelJob.
        :rtype: ModelJobState
        """
        return self._job_state

    @job_state.setter
    def job_state(self, job_state: ModelJobState):
        """Sets the job_state of this ModelJob.


        :param job_state: The job_state of this ModelJob.
        :type job_state: ModelJobState
        """

        self._job_state = job_state

    @property
    def local_job_events(self) -> List[ModelJobLocalEvent]:
        """Gets the local_job_events of this ModelJob.

        All local events associated with the job  # noqa: E501

        :return: The local_job_events of this ModelJob.
        :rtype: List[ModelJobLocalEvent]
        """
        return self._local_job_events

    @local_job_events.setter
    def local_job_events(self, local_job_events: List[ModelJobLocalEvent]):
        """Sets the local_job_events of this ModelJob.

        All local events associated with the job  # noqa: E501

        :param local_job_events: The local_job_events of this ModelJob.
        :type local_job_events: List[ModelJobLocalEvent]
        """

        self._local_job_events = local_job_events

    @property
    def requester_node_id(self) -> str:
        """Gets the requester_node_id of this ModelJob.

        The ID of the requester node that owns this job.  # noqa: E501

        :return: The requester_node_id of this ModelJob.
        :rtype: str
        """
        return self._requester_node_id

    @requester_node_id.setter
    def requester_node_id(self, requester_node_id: str):
        """Sets the requester_node_id of this ModelJob.

        The ID of the requester node that owns this job.  # noqa: E501

        :param requester_node_id: The requester_node_id of this ModelJob.
        :type requester_node_id: str
        """

        self._requester_node_id = requester_node_id

    @property
    def requester_public_key(self) -> List[int]:
        """Gets the requester_public_key of this ModelJob.

        The public key of the Requester node that created this job This can be used to encrypt messages back to the creator  # noqa: E501

        :return: The requester_public_key of this ModelJob.
        :rtype: List[int]
        """
        return self._requester_public_key

    @requester_public_key.setter
    def requester_public_key(self, requester_public_key: List[int]):
        """Sets the requester_public_key of this ModelJob.

        The public key of the Requester node that created this job This can be used to encrypt messages back to the creator  # noqa: E501

        :param requester_public_key: The requester_public_key of this ModelJob.
        :type requester_public_key: List[int]
        """

        self._requester_public_key = requester_public_key

    @property
    def spec(self) -> ModelSpec:
        """Gets the spec of this ModelJob.


        :return: The spec of this ModelJob.
        :rtype: ModelSpec
        """
        return self._spec

    @spec.setter
    def spec(self, spec: ModelSpec):
        """Sets the spec of this ModelJob.


        :param spec: The spec of this ModelJob.
        :type spec: ModelSpec
        """

        self._spec = spec
