# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bacalhau-client.models.base_model_ import Model
from bacalhau-client.models.computenode_active_job import ComputenodeActiveJob  # noqa: F401,E501
from bacalhau-client.models.model_resource_usage_data import ModelResourceUsageData  # noqa: F401,E501
from bacalhau-client.models.requesternode_active_job import RequesternodeActiveJob  # noqa: F401,E501
from bacalhau-client import util


class PublicapiDebugResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, available_compute_capacity: ModelResourceUsageData=None, compute_jobs: List[ComputenodeActiveJob]=None, requester_jobs: List[RequesternodeActiveJob]=None):  # noqa: E501
        """PublicapiDebugResponse - a model defined in Swagger

        :param available_compute_capacity: The available_compute_capacity of this PublicapiDebugResponse.  # noqa: E501
        :type available_compute_capacity: ModelResourceUsageData
        :param compute_jobs: The compute_jobs of this PublicapiDebugResponse.  # noqa: E501
        :type compute_jobs: List[ComputenodeActiveJob]
        :param requester_jobs: The requester_jobs of this PublicapiDebugResponse.  # noqa: E501
        :type requester_jobs: List[RequesternodeActiveJob]
        """
        self.swagger_types = {
            'available_compute_capacity': ModelResourceUsageData,
            'compute_jobs': List[ComputenodeActiveJob],
            'requester_jobs': List[RequesternodeActiveJob]
        }

        self.attribute_map = {
            'available_compute_capacity': 'AvailableComputeCapacity',
            'compute_jobs': 'ComputeJobs',
            'requester_jobs': 'RequesterJobs'
        }
        self._available_compute_capacity = available_compute_capacity
        self._compute_jobs = compute_jobs
        self._requester_jobs = requester_jobs

    @classmethod
    def from_dict(cls, dikt) -> 'PublicapiDebugResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The publicapi.debugResponse of this PublicapiDebugResponse.  # noqa: E501
        :rtype: PublicapiDebugResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def available_compute_capacity(self) -> ModelResourceUsageData:
        """Gets the available_compute_capacity of this PublicapiDebugResponse.


        :return: The available_compute_capacity of this PublicapiDebugResponse.
        :rtype: ModelResourceUsageData
        """
        return self._available_compute_capacity

    @available_compute_capacity.setter
    def available_compute_capacity(self, available_compute_capacity: ModelResourceUsageData):
        """Sets the available_compute_capacity of this PublicapiDebugResponse.


        :param available_compute_capacity: The available_compute_capacity of this PublicapiDebugResponse.
        :type available_compute_capacity: ModelResourceUsageData
        """

        self._available_compute_capacity = available_compute_capacity

    @property
    def compute_jobs(self) -> List[ComputenodeActiveJob]:
        """Gets the compute_jobs of this PublicapiDebugResponse.


        :return: The compute_jobs of this PublicapiDebugResponse.
        :rtype: List[ComputenodeActiveJob]
        """
        return self._compute_jobs

    @compute_jobs.setter
    def compute_jobs(self, compute_jobs: List[ComputenodeActiveJob]):
        """Sets the compute_jobs of this PublicapiDebugResponse.


        :param compute_jobs: The compute_jobs of this PublicapiDebugResponse.
        :type compute_jobs: List[ComputenodeActiveJob]
        """

        self._compute_jobs = compute_jobs

    @property
    def requester_jobs(self) -> List[RequesternodeActiveJob]:
        """Gets the requester_jobs of this PublicapiDebugResponse.


        :return: The requester_jobs of this PublicapiDebugResponse.
        :rtype: List[RequesternodeActiveJob]
        """
        return self._requester_jobs

    @requester_jobs.setter
    def requester_jobs(self, requester_jobs: List[RequesternodeActiveJob]):
        """Sets the requester_jobs of this PublicapiDebugResponse.


        :param requester_jobs: The requester_jobs of this PublicapiDebugResponse.
        :type requester_jobs: List[RequesternodeActiveJob]
        """

        self._requester_jobs = requester_jobs
