# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bacalhau-client.models.base_model_ import Model
from bacalhau-client.models.model_job_node_state import ModelJobNodeState  # noqa: F401,E501
from bacalhau-client import util


class ModelJobState(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, nodes: Dict[str, ModelJobNodeState]=None):  # noqa: E501
        """ModelJobState - a model defined in Swagger

        :param nodes: The nodes of this ModelJobState.  # noqa: E501
        :type nodes: Dict[str, ModelJobNodeState]
        """
        self.swagger_types = {
            'nodes': Dict[str, ModelJobNodeState]
        }

        self.attribute_map = {
            'nodes': 'Nodes'
        }
        self._nodes = nodes

    @classmethod
    def from_dict(cls, dikt) -> 'ModelJobState':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The model.JobState of this ModelJobState.  # noqa: E501
        :rtype: ModelJobState
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nodes(self) -> Dict[str, ModelJobNodeState]:
        """Gets the nodes of this ModelJobState.


        :return: The nodes of this ModelJobState.
        :rtype: Dict[str, ModelJobNodeState]
        """
        return self._nodes

    @nodes.setter
    def nodes(self, nodes: Dict[str, ModelJobNodeState]):
        """Sets the nodes of this ModelJobState.


        :param nodes: The nodes of this ModelJobState.
        :type nodes: Dict[str, ModelJobNodeState]
        """

        self._nodes = nodes
