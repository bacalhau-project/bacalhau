# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bacalhau-client.models.base_model_ import Model
from bacalhau-client import util


class ModelRunCommandResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, exit_code: int=None, runner_error: str=None, stderr: str=None, stderrtruncated: bool=None, stdout: str=None, stdouttruncated: bool=None):  # noqa: E501
        """ModelRunCommandResult - a model defined in Swagger

        :param exit_code: The exit_code of this ModelRunCommandResult.  # noqa: E501
        :type exit_code: int
        :param runner_error: The runner_error of this ModelRunCommandResult.  # noqa: E501
        :type runner_error: str
        :param stderr: The stderr of this ModelRunCommandResult.  # noqa: E501
        :type stderr: str
        :param stderrtruncated: The stderrtruncated of this ModelRunCommandResult.  # noqa: E501
        :type stderrtruncated: bool
        :param stdout: The stdout of this ModelRunCommandResult.  # noqa: E501
        :type stdout: str
        :param stdouttruncated: The stdouttruncated of this ModelRunCommandResult.  # noqa: E501
        :type stdouttruncated: bool
        """
        self.swagger_types = {
            'exit_code': int,
            'runner_error': str,
            'stderr': str,
            'stderrtruncated': bool,
            'stdout': str,
            'stdouttruncated': bool
        }

        self.attribute_map = {
            'exit_code': 'exitCode',
            'runner_error': 'runnerError',
            'stderr': 'stderr',
            'stderrtruncated': 'stderrtruncated',
            'stdout': 'stdout',
            'stdouttruncated': 'stdouttruncated'
        }
        self._exit_code = exit_code
        self._runner_error = runner_error
        self._stderr = stderr
        self._stderrtruncated = stderrtruncated
        self._stdout = stdout
        self._stdouttruncated = stdouttruncated

    @classmethod
    def from_dict(cls, dikt) -> 'ModelRunCommandResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The model.RunCommandResult of this ModelRunCommandResult.  # noqa: E501
        :rtype: ModelRunCommandResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exit_code(self) -> int:
        """Gets the exit_code of this ModelRunCommandResult.

        exit code of the run.  # noqa: E501

        :return: The exit_code of this ModelRunCommandResult.
        :rtype: int
        """
        return self._exit_code

    @exit_code.setter
    def exit_code(self, exit_code: int):
        """Sets the exit_code of this ModelRunCommandResult.

        exit code of the run.  # noqa: E501

        :param exit_code: The exit_code of this ModelRunCommandResult.
        :type exit_code: int
        """

        self._exit_code = exit_code

    @property
    def runner_error(self) -> str:
        """Gets the runner_error of this ModelRunCommandResult.

        Runner error  # noqa: E501

        :return: The runner_error of this ModelRunCommandResult.
        :rtype: str
        """
        return self._runner_error

    @runner_error.setter
    def runner_error(self, runner_error: str):
        """Sets the runner_error of this ModelRunCommandResult.

        Runner error  # noqa: E501

        :param runner_error: The runner_error of this ModelRunCommandResult.
        :type runner_error: str
        """

        self._runner_error = runner_error

    @property
    def stderr(self) -> str:
        """Gets the stderr of this ModelRunCommandResult.

        stderr of the run.  # noqa: E501

        :return: The stderr of this ModelRunCommandResult.
        :rtype: str
        """
        return self._stderr

    @stderr.setter
    def stderr(self, stderr: str):
        """Sets the stderr of this ModelRunCommandResult.

        stderr of the run.  # noqa: E501

        :param stderr: The stderr of this ModelRunCommandResult.
        :type stderr: str
        """

        self._stderr = stderr

    @property
    def stderrtruncated(self) -> bool:
        """Gets the stderrtruncated of this ModelRunCommandResult.

        bool describing if stderr was truncated  # noqa: E501

        :return: The stderrtruncated of this ModelRunCommandResult.
        :rtype: bool
        """
        return self._stderrtruncated

    @stderrtruncated.setter
    def stderrtruncated(self, stderrtruncated: bool):
        """Sets the stderrtruncated of this ModelRunCommandResult.

        bool describing if stderr was truncated  # noqa: E501

        :param stderrtruncated: The stderrtruncated of this ModelRunCommandResult.
        :type stderrtruncated: bool
        """

        self._stderrtruncated = stderrtruncated

    @property
    def stdout(self) -> str:
        """Gets the stdout of this ModelRunCommandResult.

        stdout of the run. Yaml provided for `describe` output  # noqa: E501

        :return: The stdout of this ModelRunCommandResult.
        :rtype: str
        """
        return self._stdout

    @stdout.setter
    def stdout(self, stdout: str):
        """Sets the stdout of this ModelRunCommandResult.

        stdout of the run. Yaml provided for `describe` output  # noqa: E501

        :param stdout: The stdout of this ModelRunCommandResult.
        :type stdout: str
        """

        self._stdout = stdout

    @property
    def stdouttruncated(self) -> bool:
        """Gets the stdouttruncated of this ModelRunCommandResult.

        bool describing if stdout was truncated  # noqa: E501

        :return: The stdouttruncated of this ModelRunCommandResult.
        :rtype: bool
        """
        return self._stdouttruncated

    @stdouttruncated.setter
    def stdouttruncated(self, stdouttruncated: bool):
        """Sets the stdouttruncated of this ModelRunCommandResult.

        bool describing if stdout was truncated  # noqa: E501

        :param stdouttruncated: The stdouttruncated of this ModelRunCommandResult.
        :type stdouttruncated: bool
        """

        self._stdouttruncated = stdouttruncated
