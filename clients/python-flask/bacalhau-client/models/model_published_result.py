# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from bacalhau-client.models.base_model_ import Model
from bacalhau-client.models.model_storage_spec import ModelStorageSpec  # noqa: F401,E501
from bacalhau-client import util


class ModelPublishedResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, data: ModelStorageSpec=None, node_id: str=None, shard_index: int=None):  # noqa: E501
        """ModelPublishedResult - a model defined in Swagger

        :param data: The data of this ModelPublishedResult.  # noqa: E501
        :type data: ModelStorageSpec
        :param node_id: The node_id of this ModelPublishedResult.  # noqa: E501
        :type node_id: str
        :param shard_index: The shard_index of this ModelPublishedResult.  # noqa: E501
        :type shard_index: int
        """
        self.swagger_types = {
            'data': ModelStorageSpec,
            'node_id': str,
            'shard_index': int
        }

        self.attribute_map = {
            'data': 'Data',
            'node_id': 'NodeID',
            'shard_index': 'ShardIndex'
        }
        self._data = data
        self._node_id = node_id
        self._shard_index = shard_index

    @classmethod
    def from_dict(cls, dikt) -> 'ModelPublishedResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The model.PublishedResult of this ModelPublishedResult.  # noqa: E501
        :rtype: ModelPublishedResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self) -> ModelStorageSpec:
        """Gets the data of this ModelPublishedResult.


        :return: The data of this ModelPublishedResult.
        :rtype: ModelStorageSpec
        """
        return self._data

    @data.setter
    def data(self, data: ModelStorageSpec):
        """Sets the data of this ModelPublishedResult.


        :param data: The data of this ModelPublishedResult.
        :type data: ModelStorageSpec
        """

        self._data = data

    @property
    def node_id(self) -> str:
        """Gets the node_id of this ModelPublishedResult.


        :return: The node_id of this ModelPublishedResult.
        :rtype: str
        """
        return self._node_id

    @node_id.setter
    def node_id(self, node_id: str):
        """Sets the node_id of this ModelPublishedResult.


        :param node_id: The node_id of this ModelPublishedResult.
        :type node_id: str
        """

        self._node_id = node_id

    @property
    def shard_index(self) -> int:
        """Gets the shard_index of this ModelPublishedResult.


        :return: The shard_index of this ModelPublishedResult.
        :rtype: int
        """
        return self._shard_index

    @shard_index.setter
    def shard_index(self, shard_index: int):
        """Sets the shard_index of this ModelPublishedResult.


        :param shard_index: The shard_index of this ModelPublishedResult.
        :type shard_index: int
        """

        self._shard_index = shard_index
