x-common-env-variables: &common-env-variables
  NETWORK_AUTH_TOKEN: "i_am_very_secret_token"
  BACALHAU_API_PORT: "1234"
  MINIO_ROOT_USER: "minioadmin"
  MINIO_ROOT_PASSWORD: "minioadminpass"
  AWS_ACCESS_KEY_ID: "minioadmin"
  AWS_SECRET_ACCESS_KEY: "minioadminpass"

networks:
  bacalhau-network:
    driver: bridge

volumes:
  minio-volume:
    driver: local
  registry-volume:
    driver: local

services:
  bacalhau-minio-node:
    image: quay.io/minio/minio
    container_name: bacalhau-minio-node-container
    command: server /data --console-address ":9001"
    volumes:
      - minio-volume:/data
    restart: always
    networks:
      - bacalhau-network
    environment: *common-env-variables
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 1s
      timeout: 5s
      retries: 30
      start_period: 2s

  bacalhau-container-img-registry-node:
    image: bacalhau-container-img-registry-node-image
    container_name: bacalhau-container-img-registry-container
    volumes:
      - registry-volume:/var/lib/registry
    restart: always
    networks:
      - bacalhau-network
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
      REGISTRY_HTTP_ADDR: "0.0.0.0:5000"
      REGISTRY_HTTP_TLS_CERTIFICATE: "/certs/bacalhau-container-img-registry-node.crt"
      REGISTRY_HTTP_TLS_KEY: "/certs/bacalhau-container-img-registry-node.key"
    healthcheck:
      test: [ "CMD-SHELL", "nc -zv localhost 5000" ]
      interval: 1s
      timeout: 5s
      retries: 30
      start_period: 2s

  bacalhau-requester-node:
    image: bacalhau-requester-node-image
    container_name: bacalhau-requester-node-container
    networks:
      - bacalhau-network
    environment: *common-env-variables
    depends_on:
      bacalhau-minio-node:
        condition: service_healthy
    privileged: true
    command:
      - /bin/bash
      - -c
      - |
        bacalhau config set "node.network.authsecret" "$${NETWORK_AUTH_TOKEN}" && bacalhau serve --port=$${BACALHAU_API_PORT} --node-type requester
    healthcheck:
      test: [ "CMD-SHELL", "nc -zv localhost 1234" ]
      interval: 1s
      timeout: 5s
      retries: 30
      start_period: 2s

  bacalhau-compute-node:
    image: bacalhau-compute-node-image
    container_name: bacalhau-compute-node-container
    privileged: true
    networks:
      - bacalhau-network
    depends_on:
      bacalhau-requester-node:
        condition: service_healthy
      bacalhau-container-img-registry-node:
        condition: service_healthy
    environment:
      <<: *common-env-variables
      REQUESTER_NODE_LINK: 'bacalhau-requester-node'
    healthcheck:
      test: [ "CMD-SHELL", "nc -zv localhost 1234" ]
      interval: 1s
      timeout: 5s
      retries: 30
      start_period: 2s

  bacalhau-client-node:
    image: bacalhau-client-node-image
    container_name: bacalhau-client-node-container
    privileged: true
    networks:
      - bacalhau-network
    depends_on:
      bacalhau-requester-node:
        condition: service_healthy
      bacalhau-compute-node:
        condition: service_healthy
      bacalhau-container-img-registry-node:
        condition: service_healthy
    environment:
      <<: *common-env-variables
      BACALHAU_API_HOST: 'bacalhau-requester-node'
      BACALHAU_COMPUTE_NODE_HOST: 'bacalhau-compute-node'
      BACALHAU_MINIO_NODE_HOST: 'bacalhau-minio-node'
