linters-settings:
  depguard:
    rules:
      main:
        deny:
          - pkg: github.com/sirupsen/logrus
            desc: "logging is allowed only by zerolog"
  dupl:
    threshold: 100
  funlen:
    lines: 100
    statements: 100
  goconst:
    min-len: 2
    min-occurrences: 3
  gocritic:
    enabled-tags:
    - diagnostic
    - experimental
    - opinionated
    - performance
    - style
    disabled-checks:
    - dupImport # https://github.com/go-critic/go-critic/issues/845
    - ifElseChain
    - octalLiteral
    - whyNoLint
    - wrapperFunc
    - hugeParam
    - importShadow
  gocyclo:
    min-complexity: 18
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  gomnd:
    # don't include the "operation" and "assign"
    checks:
    - argument
    - case
    - condition
    - return
    ignored-numbers:
    - "0"
    - "1"
    - "2"
    - "3"
    ignored-functions:
    - strings.SplitN

  govet:
    check-shadowing: true
    # settings:
    #   printf:
    #     funcs:
    #       - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
    #       - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
    #       - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
    #       - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  lll:
    line-length: 140
  misspell:
    locale: US
    ignore-words:
    - favour
    - cancelled
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: true # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped

# TODO #842 Check gocritic regularly to see if they support generics (finally)
linters:
  disable-all: true
  enable:
  - bodyclose
  - unused
  - depguard
  - dogsled
  - errcheck
  - exportloopref
  - funlen
  - gochecknoinits
  - goconst
#   - gocritic
  - gocyclo
  - gofmt
  - goimports
  - gomnd
  - goprintffuncname
  - gosec
  - gosimple
  - govet
  - ineffassign
  - lll
  - misspell
  - nakedret
  - noctx
  - nolintlint
  - staticcheck
  - stylecheck
  - typecheck
  - unconvert
  - unused
  - whitespace

# Options for analysis running.
run:
  # The default concurrency value is the number of available CPU.
  # concurrency: 16
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 5m
  # Exit code when at least one issue was found.
  # Default: 1
  issues-exit-code: 2
  # Include test files or not.
  # Default: true
  tests: false
  # List of build tags, all linters use it.
  # Default: [].
  # build-tags:
  #   - bacalhau-ci-build
  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path.
  # Default value is empty list,
  # but default dirs are skipped independently of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  skip-dirs:
  - experimental$
  - vendor$
  - viz$
  - ops$
  - testdata$
  # Enables skipping of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  skip-dirs-use-default: false
  # Which files to skip: they will be analyzed, but issues from them won't be reported.
  # Default value is empty list,
  # but there is no need to include all autogenerated files,
  # we confidently recognize autogenerated files.
  # If it's not please let us know.
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # skip-files:
  # - ".*\\.my\\.go$"
  # - lib/bad.go
  # If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  #
  # Allowed values: readonly|vendor|mod
  # By default, it isn't set.
  modules-download-mode: readonly
  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: false

issues:
  exclude:
  # Naming of `error` variables as `err` is standard practise for Go
  - 'shadow: declaration of "err" shadows declaration at'
