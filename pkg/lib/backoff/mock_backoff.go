// Code generated by MockGen. DO NOT EDIT.
// Source: types.go

// Package backoff is a generated GoMock package.
package backoff

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBackoff is a mock of Backoff interface.
type MockBackoff struct {
	ctrl     *gomock.Controller
	recorder *MockBackoffMockRecorder
}

// MockBackoffMockRecorder is the mock recorder for MockBackoff.
type MockBackoffMockRecorder struct {
	mock *MockBackoff
}

// NewMockBackoff creates a new mock instance.
func NewMockBackoff(ctrl *gomock.Controller) *MockBackoff {
	mock := &MockBackoff{ctrl: ctrl}
	mock.recorder = &MockBackoffMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBackoff) EXPECT() *MockBackoffMockRecorder {
	return m.recorder
}

// Backoff mocks base method.
func (m *MockBackoff) Backoff(ctx context.Context, attempts int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Backoff", ctx, attempts)
}

// Backoff indicates an expected call of Backoff.
func (mr *MockBackoffMockRecorder) Backoff(ctx, attempts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Backoff", reflect.TypeOf((*MockBackoff)(nil).Backoff), ctx, attempts)
}
