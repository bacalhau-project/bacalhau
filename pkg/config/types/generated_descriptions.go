// Code generated by go generate; DO NOT EDIT.

package types

// ConfigDescriptions maps configuration paths to their descriptions
var ConfigDescriptions = map[string]string{
	AuthAccessPolicyPath:                                        "AccessPolicyPath is the path to a file or directory that will be loaded as the policy to apply to all inbound API requests. If unspecified, a policy that permits access to all API endpoints to both authenticated and unauthenticated users (the default as of v1.2.0) will be used.",
	AuthMethods:                                                 "Methods maps \"method names\" to authenticator implementations. A method name is a human-readable string chosen by the person configuring the system that is shown to users to help them pick the authentication method they want to use. There can be multiple usages of the same Authenticator *type* but with different configs and parameters, each identified with a unique method name.  For example, if an implementation wants to allow users to log in with Github or Bitbucket, they might both use an authenticator implementation of type \"oidc\", and each would appear once on this provider with key / method name \"github\" and \"bitbucket\".  By default, only a single authentication method that accepts authentication via client keys will be enabled.",
	AuthTokensPath:                                              "TokensPath is the location where a state file of tokens will be stored. By default it will be local to the Bacalhau repo, but can be any location in the host filesystem. Tokens are sensitive and should be stored in a location that is only readable to the current user.",
	MetricsEventTracerPath:                                      "No description available",
	NodeAllowListedLocalPaths:                                   "AllowListedLocalPaths contains local paths that are allowed to be mounted into jobs",
	NodeClientAPIClientTLSCACert:                                "Used for NodeConfig.ClientAPI, specifies the location of a ca certificate file (primarily for self-signed server certs). Will use HTTPS for requests.",
	NodeClientAPIClientTLSInsecure:                              "Used for NodeConfig.ClientAPI, and when true instructs the client to use HTTPS, but not to attempt to verify the certificate.",
	NodeClientAPIClientTLSUseTLS:                                "Used for NodeConfig.ClientAPI, instructs the client to connect over TLS.  Auto enabled if Insecure or CACert are specified.",
	NodeClientAPIHost:                                           "Host is the hostname of an environment's public API servers.",
	NodeClientAPIPort:                                           "Port is the port that an environment serves the public API on.",
	NodeClientAPITLSAutoCert:                                    "AutoCert specifies a hostname for a certificate to be obtained via ACME. This is only used by the server, and only by the requester node when it has a publicly resolvable domain name.",
	NodeClientAPITLSAutoCertCachePath:                           "AutoCertCachePath specifies the directory where the autocert process will cache certificates to avoid rate limits.",
	NodeClientAPITLSSelfSigned:                                  "SelfSignedCert will auto-generate a self-signed certificate for the requester node if TLS certificates have not been provided.",
	NodeClientAPITLSServerCertificate:                           "ServerCertificate specifies the location of a TLS certificate to be used by the requester to serve TLS requests",
	NodeClientAPITLSServerKey:                                   "ServerKey is the TLS server key to match the certificate to allow the requester to server TLS.",
	NodeComputeCapacityDefaultJobResourceLimitsCPU:              "No description available",
	NodeComputeCapacityDefaultJobResourceLimitsDisk:             "No description available",
	NodeComputeCapacityDefaultJobResourceLimitsGPU:              "No description available",
	NodeComputeCapacityDefaultJobResourceLimitsMemory:           "No description available",
	NodeComputeCapacityIgnorePhysicalResourceLimits:             "No description available",
	NodeComputeCapacityJobResourceLimitsCPU:                     "No description available",
	NodeComputeCapacityJobResourceLimitsDisk:                    "No description available",
	NodeComputeCapacityJobResourceLimitsGPU:                     "No description available",
	NodeComputeCapacityJobResourceLimitsMemory:                  "No description available",
	NodeComputeCapacityTotalResourceLimitsCPU:                   "No description available",
	NodeComputeCapacityTotalResourceLimitsDisk:                  "No description available",
	NodeComputeCapacityTotalResourceLimitsGPU:                   "No description available",
	NodeComputeCapacityTotalResourceLimitsMemory:                "No description available",
	NodeComputeControlPlaneSettingsHeartbeatFrequency:           "How often the compute node will send a heartbeat to the requester node to let it know that the compute node is still alive. This should be less than the requester's configured heartbeat timeout to avoid flapping.",
	NodeComputeControlPlaneSettingsHeartbeatTopic:               "This is the pubsub topic that the compute node will use to send heartbeats to the requester node.",
	NodeComputeControlPlaneSettingsInfoUpdateFrequency:          "The frequency with which the compute node will send node info (inc current labels) to the controlling requester node.",
	NodeComputeControlPlaneSettingsResourceUpdateFrequency:      "How often the compute node will send current resource availability to the requester node.",
	NodeComputeExecutionStorePath:                               "No description available",
	NodeComputeExecutionStoreType:                               "Type is \"compute\", \"requester\" or both",
	NodeComputeJobSelectionAcceptNetworkedJobs:                  "No description available",
	NodeComputeJobSelectionLocality:                             "No description available",
	NodeComputeJobSelectionProbeExec:                            "No description available",
	NodeComputeJobSelectionProbeHTTP:                            "No description available",
	NodeComputeJobSelectionRejectStatelessJobs:                  "No description available",
	NodeComputeJobTimeoutsDefaultJobExecutionTimeout:            "DefaultJobExecutionTimeout default value for the execution timeout this compute node will assign to jobs with no timeout requirement defined.",
	NodeComputeJobTimeoutsJobExecutionTimeoutClientIDBypassList: "JobExecutionTimeoutClientIDBypassList is the list of clients that are allowed to bypass the job execution timeout check.",
	NodeComputeJobTimeoutsJobNegotiationTimeout:                 "JobNegotiationTimeout default timeout value to hold a bid for a job",
	NodeComputeJobTimeoutsMaxJobExecutionTimeout:                "MaxJobExecutionTimeout default value for the maximum execution timeout this compute node supports. Jobs with higher timeout requirements will not be bid on.",
	NodeComputeJobTimeoutsMinJobExecutionTimeout:                "MinJobExecutionTimeout default value for the minimum execution timeout this compute node supports. Jobs with lower timeout requirements will not be bid on.",
	NodeComputeLocalPublisherAddress:                            "No description available",
	NodeComputeLocalPublisherDirectory:                          "No description available",
	NodeComputeLocalPublisherPort:                               "Port is the port that an environment serves the public API on.",
	NodeComputeLogStreamConfigChannelBufferSize:                 "How many messages to buffer in the log stream channel, per stream",
	NodeComputeLoggingLogRunningExecutionsInterval:              "logging running executions",
	NodeComputeManifestCacheDuration:                            "No description available",
	NodeComputeManifestCacheFrequency:                           "No description available",
	NodeComputeManifestCacheSize:                                "No description available",
	NodeComputeStoragePath:                                      "TODO(forrest) [refactor]: rename this to ExecutorStoragePath",
	NodeDisabledFeaturesEngines:                                 "No description available",
	NodeDisabledFeaturesPublishers:                              "No description available",
	NodeDisabledFeaturesStorages:                                "No description available",
	NodeDownloadURLRequestRetries:                               "No description available",
	NodeDownloadURLRequestTimeout:                               "No description available",
	NodeExecutorPluginPath:                                      "No description available",
	NodeIPFSConnect:                                             "Connect is the multiaddress to connect to for IPFS.",
	NodeLabels:                                                  "Labels to apply to the node that can be used for node selection and filtering",
	NodeLoggingMode:                                             "No description available",
	NodeName:                                                    "No description available",
	NodeNameProvider:                                            "No description available",
	NodeNetworkAdvertisedAddress:                                "No description available",
	NodeNetworkAuthSecret:                                       "No description available",
	NodeNetworkClusterAdvertisedAddress:                         "No description available",
	NodeNetworkClusterName:                                      "No description available",
	NodeNetworkClusterPeers:                                     "No description available",
	NodeNetworkClusterPort:                                      "Port is the port that an environment serves the public API on.",
	NodeNetworkOrchestrators:                                    "No description available",
	NodeNetworkPort:                                             "Port is the port that an environment serves the public API on.",
	NodeNetworkStoreDir:                                         "No description available",
	NodeRequesterControlPlaneSettingsHeartbeatCheckFrequency:    "This setting is the time period after which a compute node is considered to be unresponsive. If the compute node misses two of these frequencies, it will be marked as unknown.  The compute node should have a frequency setting less than this one to ensure that it does not keep switching between unknown and active too frequently.",
	NodeRequesterControlPlaneSettingsHeartbeatTopic:             "This is the pubsub topic that the compute node will use to send heartbeats to the requester node.",
	NodeRequesterControlPlaneSettingsNodeDisconnectedAfter:      "This is the time period after which a compute node is considered to be disconnected. If the compute node does not deliver a heartbeat every `NodeDisconnectedAfter` then it is considered disconnected.",
	NodeRequesterDefaultPublisher:                               "No description available",
	NodeRequesterEvaluationBrokerEvalBrokerInitialRetryDelay:    "No description available",
	NodeRequesterEvaluationBrokerEvalBrokerMaxRetryCount:        "No description available",
	NodeRequesterEvaluationBrokerEvalBrokerSubsequentRetryDelay: "No description available",
	NodeRequesterEvaluationBrokerEvalBrokerVisibilityTimeout:    "No description available",
	NodeRequesterExternalVerifierHook:                           "URL where to send external verification requests to.",
	NodeRequesterFailureInjectionConfigIsBadActor:               "No description available",
	NodeRequesterHousekeepingBackgroundTaskInterval:             "No description available",
	NodeRequesterJobDefaultsExecutionTimeout:                    "No description available",
	NodeRequesterJobDefaultsQueueTimeout:                        "No description available",
	NodeRequesterJobDefaultsTotalTimeout:                        "No description available",
	NodeRequesterJobSelectionPolicyAcceptNetworkedJobs:          "No description available",
	NodeRequesterJobSelectionPolicyLocality:                     "No description available",
	NodeRequesterJobSelectionPolicyProbeExec:                    "No description available",
	NodeRequesterJobSelectionPolicyProbeHTTP:                    "No description available",
	NodeRequesterJobSelectionPolicyRejectStatelessJobs:          "No description available",
	NodeRequesterJobStorePath:                                   "No description available",
	NodeRequesterJobStoreType:                                   "Type is \"compute\", \"requester\" or both",
	NodeRequesterManualNodeApproval:                             "ManualNodeApproval is a flag that determines if nodes should be manually approved or not. By default, nodes are auto-approved to simplify upgrades, by setting this property to true, nodes will need to be manually approved before they are included in node selection.",
	NodeRequesterNodeInfoStoreTTL:                               "No description available",
	NodeRequesterNodeRankRandomnessRange:                        "No description available",
	NodeRequesterOverAskForBidsFactor:                           "No description available",
	NodeRequesterSchedulerNodeOverSubscriptionFactor:            "No description available",
	NodeRequesterSchedulerQueueBackoff:                          "No description available",
	NodeRequesterStorageProviderS3PreSignedURLDisabled:          "No description available",
	NodeRequesterStorageProviderS3PreSignedURLExpiration:        "No description available",
	NodeRequesterTagCacheDuration:                               "No description available",
	NodeRequesterTagCacheFrequency:                              "No description available",
	NodeRequesterTagCacheSize:                                   "No description available",
	NodeRequesterTranslationEnabled:                             "No description available",
	NodeRequesterWorkerWorkerCount:                              "No description available",
	NodeRequesterWorkerWorkerEvalDequeueBaseBackoff:             "No description available",
	NodeRequesterWorkerWorkerEvalDequeueMaxBackoff:              "No description available",
	NodeRequesterWorkerWorkerEvalDequeueTimeout:                 "No description available",
	NodeServerAPIClientTLSCACert:                                "Used for NodeConfig.ClientAPI, specifies the location of a ca certificate file (primarily for self-signed server certs). Will use HTTPS for requests.",
	NodeServerAPIClientTLSInsecure:                              "Used for NodeConfig.ClientAPI, and when true instructs the client to use HTTPS, but not to attempt to verify the certificate.",
	NodeServerAPIClientTLSUseTLS:                                "Used for NodeConfig.ClientAPI, instructs the client to connect over TLS.  Auto enabled if Insecure or CACert are specified.",
	NodeServerAPIHost:                                           "Host is the hostname of an environment's public API servers.",
	NodeServerAPIPort:                                           "Port is the port that an environment serves the public API on.",
	NodeServerAPITLSAutoCert:                                    "AutoCert specifies a hostname for a certificate to be obtained via ACME. This is only used by the server, and only by the requester node when it has a publicly resolvable domain name.",
	NodeServerAPITLSAutoCertCachePath:                           "AutoCertCachePath specifies the directory where the autocert process will cache certificates to avoid rate limits.",
	NodeServerAPITLSSelfSigned:                                  "SelfSignedCert will auto-generate a self-signed certificate for the requester node if TLS certificates have not been provided.",
	NodeServerAPITLSServerCertificate:                           "ServerCertificate specifies the location of a TLS certificate to be used by the requester to serve TLS requests",
	NodeServerAPITLSServerKey:                                   "ServerKey is the TLS server key to match the certificate to allow the requester to server TLS.",
	NodeStrictVersionMatch:                                      "No description available",
	NodeType:                                                    "Type is \"compute\", \"requester\" or both",
	NodeVolumeSizeRequestTimeout:                                "No description available",
	NodeWebUIEnabled:                                            "No description available",
	NodeWebUIPort:                                               "Port is the port that an environment serves the public API on.",
	UpdateCheckFrequency:                                        "No description available",
	UpdateCheckStatePath:                                        "No description available",
	UpdateSkipChecks:                                            "No description available",
	UserInstallationID:                                          "No description available",
	UserKeyPath:                                                 "No description available",
}
