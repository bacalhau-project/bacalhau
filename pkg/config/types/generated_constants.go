// CODE GENERATED BY pkg/config/types/gen/generate.go DO NOT EDIT

package types

const ApiAuthAccesspolicypathKey = "api.auth.accesspolicypath"
const ApiAuthMethodsKey = "api.auth.methods"
const ApiHostKey = "api.host"
const ApiPortKey = "api.port"
const ApiTlsAutocertKey = "api.tls.autocert"
const ApiTlsAutocertcachepathKey = "api.tls.autocertcachepath"
const ApiTlsCafileKey = "api.tls.cafile"
const ApiTlsCertfileKey = "api.tls.certfile"
const ApiTlsInsecureKey = "api.tls.insecure"
const ApiTlsKeyfileKey = "api.tls.keyfile"
const ApiTlsSelfsignedKey = "api.tls.selfsigned"
const ApiTlsUsetlsKey = "api.tls.usetls"
const ComputeAllocatedcapacityCpuKey = "compute.allocatedcapacity.cpu"
const ComputeAllocatedcapacityDiskKey = "compute.allocatedcapacity.disk"
const ComputeAllocatedcapacityGpuKey = "compute.allocatedcapacity.gpu"
const ComputeAllocatedcapacityMemoryKey = "compute.allocatedcapacity.memory"
const ComputeAllowlistedlocalpathsKey = "compute.allowlistedlocalpaths"
const ComputeEnabledKey = "compute.enabled"
const ComputeHeartbeatInfoupdateintervalKey = "compute.heartbeat.infoupdateinterval"
const ComputeHeartbeatIntervalKey = "compute.heartbeat.interval"
const ComputeHeartbeatResourceupdateintervalKey = "compute.heartbeat.resourceupdateinterval"
const ComputeLabelsKey = "compute.labels"
const ComputeOrchestratorsKey = "compute.orchestrators"
const ComputeTlsAutocertKey = "compute.tls.autocert"
const ComputeTlsAutocertcachepathKey = "compute.tls.autocertcachepath"
const ComputeTlsCafileKey = "compute.tls.cafile"
const ComputeTlsCertfileKey = "compute.tls.certfile"
const ComputeTlsInsecureKey = "compute.tls.insecure"
const ComputeTlsKeyfileKey = "compute.tls.keyfile"
const ComputeTlsSelfsignedKey = "compute.tls.selfsigned"
const ComputeTlsUsetlsKey = "compute.tls.usetls"
const DatadirKey = "datadir"
const DisableanalyticsKey = "disableanalytics"
const EnginesDisabledKey = "engines.disabled"
const EnginesTypesDockerManifestcacheRefreshKey = "engines.types.docker.manifestcache.refresh"
const EnginesTypesDockerManifestcacheSizeKey = "engines.types.docker.manifestcache.size"
const EnginesTypesDockerManifestcacheTtlKey = "engines.types.docker.manifestcache.ttl"
const FeatureflagsExectranslationKey = "featureflags.exectranslation"
const InputSourcesDisabledKey = "inputsources.disabled"
const InputSourcesMaxretrycountKey = "inputsources.maxretrycount"
const InputSourcesReadtimeoutKey = "inputsources.readtimeout"
const InputSourcesTypesIpfsEndpointKey = "inputsources.types.ipfs.endpoint"
const InputsourcesTypesS3AccesskeyKey = "inputsources.types.s3.accesskey"
const InputsourcesTypesS3EndpointKey = "inputsources.types.s3.endpoint"
const InputsourcesTypesS3SecretkeyKey = "inputsources.types.s3.secretkey"
const JobadmissioncontrolAcceptnetworkedjobsKey = "jobadmissioncontrol.acceptnetworkedjobs"
const JobadmissioncontrolProbeexecKey = "jobadmissioncontrol.probeexec"
const JobadmissioncontrolProbehttpKey = "jobadmissioncontrol.probehttp"
const JobadmissioncontrolRejectstatelessjobsKey = "jobadmissioncontrol.rejectstatelessjobs"
const JobdefaultsBatchPriorityKey = "jobdefaults.batch.priority"
const JobdefaultsBatchTaskPublisherParamsKey = "jobdefaults.batch.task.publisher.params"
const JobdefaultsBatchTaskPublisherTypeKey = "jobdefaults.batch.task.publisher.type"
const JobdefaultsBatchTaskResourcesCpuKey = "jobdefaults.batch.task.resources.cpu"
const JobdefaultsBatchTaskResourcesDiskKey = "jobdefaults.batch.task.resources.disk"
const JobdefaultsBatchTaskResourcesGpuKey = "jobdefaults.batch.task.resources.gpu"
const JobdefaultsBatchTaskResourcesMemoryKey = "jobdefaults.batch.task.resources.memory"
const JobdefaultsBatchTaskTimeoutsExecutiontimeoutKey = "jobdefaults.batch.task.timeouts.executiontimeout"
const JobdefaultsBatchTaskTimeoutsTotaltimeoutKey = "jobdefaults.batch.task.timeouts.totaltimeout"
const JobdefaultsDaemonPriorityKey = "jobdefaults.daemon.priority"
const JobdefaultsDaemonTaskResourcesCpuKey = "jobdefaults.daemon.task.resources.cpu"
const JobdefaultsDaemonTaskResourcesDiskKey = "jobdefaults.daemon.task.resources.disk"
const JobdefaultsDaemonTaskResourcesGpuKey = "jobdefaults.daemon.task.resources.gpu"
const JobdefaultsDaemonTaskResourcesMemoryKey = "jobdefaults.daemon.task.resources.memory"
const JobdefaultsOpsPriorityKey = "jobdefaults.ops.priority"
const JobdefaultsOpsTaskPublisherParamsKey = "jobdefaults.ops.task.publisher.params"
const JobdefaultsOpsTaskPublisherTypeKey = "jobdefaults.ops.task.publisher.type"
const JobdefaultsOpsTaskResourcesCpuKey = "jobdefaults.ops.task.resources.cpu"
const JobdefaultsOpsTaskResourcesDiskKey = "jobdefaults.ops.task.resources.disk"
const JobdefaultsOpsTaskResourcesGpuKey = "jobdefaults.ops.task.resources.gpu"
const JobdefaultsOpsTaskResourcesMemoryKey = "jobdefaults.ops.task.resources.memory"
const JobdefaultsOpsTaskTimeoutsExecutiontimeoutKey = "jobdefaults.ops.task.timeouts.executiontimeout"
const JobdefaultsOpsTaskTimeoutsTotaltimeoutKey = "jobdefaults.ops.task.timeouts.totaltimeout"
const JobdefaultsServicePriorityKey = "jobdefaults.service.priority"
const JobdefaultsServiceTaskResourcesCpuKey = "jobdefaults.service.task.resources.cpu"
const JobdefaultsServiceTaskResourcesDiskKey = "jobdefaults.service.task.resources.disk"
const JobdefaultsServiceTaskResourcesGpuKey = "jobdefaults.service.task.resources.gpu"
const JobdefaultsServiceTaskResourcesMemoryKey = "jobdefaults.service.task.resources.memory"
const LoggingLevelKey = "logging.level"
const LoggingLogdebuginfointervalKey = "logging.logdebuginfointerval"
const LoggingModeKey = "logging.mode"
const NameproviderKey = "nameprovider"
const OrchestratorAdvertiseKey = "orchestrator.advertise"
const OrchestratorAuthsecretKey = "orchestrator.authsecret"
const OrchestratorClusterAdvertiseKey = "orchestrator.cluster.advertise"
const OrchestratorClusterHostKey = "orchestrator.cluster.host"
const OrchestratorClusterNameKey = "orchestrator.cluster.name"
const OrchestratorClusterPeersKey = "orchestrator.cluster.peers"
const OrchestratorClusterPortKey = "orchestrator.cluster.port"
const OrchestratorEnabledKey = "orchestrator.enabled"
const OrchestratorEvaluationbrokerMaxretrycountKey = "orchestrator.evaluationbroker.maxretrycount"
const OrchestratorEvaluationbrokerVisibilitytimeoutKey = "orchestrator.evaluationbroker.visibilitytimeout"
const OrchestratorHostKey = "orchestrator.host"
const OrchestratorNodemanagerDisconnecttimeoutKey = "orchestrator.nodemanager.disconnecttimeout"
const OrchestratorNodemanagerManualapprovalKey = "orchestrator.nodemanager.manualapproval"
const OrchestratorPortKey = "orchestrator.port"
const OrchestratorSchedulerHousekeepingintervalKey = "orchestrator.scheduler.housekeepinginterval"
const OrchestratorSchedulerHousekeepingtimeoutKey = "orchestrator.scheduler.housekeepingtimeout"
const OrchestratorSchedulerWorkercountKey = "orchestrator.scheduler.workercount"
const OrchestratorTlsAutocertKey = "orchestrator.tls.autocert"
const OrchestratorTlsAutocertcachepathKey = "orchestrator.tls.autocertcachepath"
const OrchestratorTlsCafileKey = "orchestrator.tls.cafile"
const OrchestratorTlsCertfileKey = "orchestrator.tls.certfile"
const OrchestratorTlsInsecureKey = "orchestrator.tls.insecure"
const OrchestratorTlsKeyfileKey = "orchestrator.tls.keyfile"
const OrchestratorTlsSelfsignedKey = "orchestrator.tls.selfsigned"
const OrchestratorTlsUsetlsKey = "orchestrator.tls.usetls"
const PublishersDisabledKey = "publishers.disabled"
const PublishersTypesIpfsEndpointKey = "publishers.types.ipfs.endpoint"
const PublishersTypesLocalAddressKey = "publishers.types.local.address"
const PublishersTypesLocalDirectoryKey = "publishers.types.local.directory"
const PublishersTypesLocalPortKey = "publishers.types.local.port"
const PublishersTypesS3PresignedurldisabledKey = "publishers.types.s3.presignedurldisabled"
const PublishersTypesS3PresignedurlexpirationKey = "publishers.types.s3.presignedurlexpiration"
const ResultdownloadersDisabledKey = "resultdownloaders.disabled"
const ResultdownloadersTimeoutKey = "resultdownloaders.timeout"
const ResultdownloadersTypesIpfsEndpointKey = "resultdownloaders.types.ipfs.endpoint"
const StrictversionmatchKey = "strictversionmatch"
const UpdateconfigIntervalKey = "updateconfig.interval"
const WebuiEnabledKey = "webui.enabled"
const WebuiListenKey = "webui.listen"
