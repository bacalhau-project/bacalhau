// CODE GENERATED BY pkg/config/types/gen_paths DO NOT EDIT

package types

const Node = "Node"
const NodeClientAPI = "Node.ClientAPI"
const NodeClientAPIHost = "Node.ClientAPI.Host"
const NodeClientAPIPort = "Node.ClientAPI.Port"
const NodeClientAPITLS = "Node.ClientAPI.TLS"
const NodeClientAPITLSAutoCert = "Node.ClientAPI.TLS.AutoCert"
const NodeClientAPITLSAutoCertCachePath = "Node.ClientAPI.TLS.AutoCertCachePath"
const NodeServerAPI = "Node.ServerAPI"
const NodeServerAPIHost = "Node.ServerAPI.Host"
const NodeServerAPIPort = "Node.ServerAPI.Port"
const NodeServerAPITLS = "Node.ServerAPI.TLS"
const NodeServerAPITLSAutoCert = "Node.ServerAPI.TLS.AutoCert"
const NodeServerAPITLSAutoCertCachePath = "Node.ServerAPI.TLS.AutoCertCachePath"
const NodeLibp2p = "Node.Libp2p"
const NodeLibp2pSwarmPort = "Node.Libp2p.SwarmPort"
const NodeLibp2pPeerConnect = "Node.Libp2p.PeerConnect"
const NodeIPFS = "Node.IPFS"
const NodeIPFSConnect = "Node.IPFS.Connect"
const NodeIPFSPrivateInternal = "Node.IPFS.PrivateInternal"
const NodeIPFSSwarmAddresses = "Node.IPFS.SwarmAddresses"
const NodeIPFSServePath = "Node.IPFS.ServePath"
const NodeCompute = "Node.Compute"
const NodeComputeCapacity = "Node.Compute.Capacity"
const NodeComputeCapacityIgnorePhysicalResourceLimits = "Node.Compute.Capacity.IgnorePhysicalResourceLimits"
const NodeComputeCapacityTotalResourceLimits = "Node.Compute.Capacity.TotalResourceLimits"
const NodeComputeCapacityTotalResourceLimitsCPU = "Node.Compute.Capacity.TotalResourceLimits.CPU"
const NodeComputeCapacityTotalResourceLimitsMemory = "Node.Compute.Capacity.TotalResourceLimits.Memory"
const NodeComputeCapacityTotalResourceLimitsDisk = "Node.Compute.Capacity.TotalResourceLimits.Disk"
const NodeComputeCapacityTotalResourceLimitsGPU = "Node.Compute.Capacity.TotalResourceLimits.GPU"
const NodeComputeCapacityJobResourceLimits = "Node.Compute.Capacity.JobResourceLimits"
const NodeComputeCapacityJobResourceLimitsCPU = "Node.Compute.Capacity.JobResourceLimits.CPU"
const NodeComputeCapacityJobResourceLimitsMemory = "Node.Compute.Capacity.JobResourceLimits.Memory"
const NodeComputeCapacityJobResourceLimitsDisk = "Node.Compute.Capacity.JobResourceLimits.Disk"
const NodeComputeCapacityJobResourceLimitsGPU = "Node.Compute.Capacity.JobResourceLimits.GPU"
const NodeComputeCapacityDefaultJobResourceLimits = "Node.Compute.Capacity.DefaultJobResourceLimits"
const NodeComputeCapacityDefaultJobResourceLimitsCPU = "Node.Compute.Capacity.DefaultJobResourceLimits.CPU"
const NodeComputeCapacityDefaultJobResourceLimitsMemory = "Node.Compute.Capacity.DefaultJobResourceLimits.Memory"
const NodeComputeCapacityDefaultJobResourceLimitsDisk = "Node.Compute.Capacity.DefaultJobResourceLimits.Disk"
const NodeComputeCapacityDefaultJobResourceLimitsGPU = "Node.Compute.Capacity.DefaultJobResourceLimits.GPU"
const NodeComputeCapacityQueueResourceLimits = "Node.Compute.Capacity.QueueResourceLimits"
const NodeComputeCapacityQueueResourceLimitsCPU = "Node.Compute.Capacity.QueueResourceLimits.CPU"
const NodeComputeCapacityQueueResourceLimitsMemory = "Node.Compute.Capacity.QueueResourceLimits.Memory"
const NodeComputeCapacityQueueResourceLimitsDisk = "Node.Compute.Capacity.QueueResourceLimits.Disk"
const NodeComputeCapacityQueueResourceLimitsGPU = "Node.Compute.Capacity.QueueResourceLimits.GPU"
const NodeComputeCapacityMaxJobExecutionTimeout = "Node.Compute.Capacity.MaxJobExecutionTimeout"
const NodeComputeExecutionStore = "Node.Compute.ExecutionStore"
const NodeComputeExecutionStoreType = "Node.Compute.ExecutionStore.Type"
const NodeComputeExecutionStorePath = "Node.Compute.ExecutionStore.Path"
const NodeComputeJobTimeouts = "Node.Compute.JobTimeouts"
const NodeComputeJobTimeoutsJobExecutionTimeoutClientIDBypassList = "Node.Compute.JobTimeouts.JobExecutionTimeoutClientIDBypassList"
const NodeComputeJobTimeoutsJobNegotiationTimeout = "Node.Compute.JobTimeouts.JobNegotiationTimeout"
const NodeComputeJobTimeoutsMinJobExecutionTimeout = "Node.Compute.JobTimeouts.MinJobExecutionTimeout"
const NodeComputeJobTimeoutsMaxJobExecutionTimeout = "Node.Compute.JobTimeouts.MaxJobExecutionTimeout"
const NodeComputeJobTimeoutsDefaultJobExecutionTimeout = "Node.Compute.JobTimeouts.DefaultJobExecutionTimeout"
const NodeComputeJobSelection = "Node.Compute.JobSelection"
const NodeComputeJobSelectionLocality = "Node.Compute.JobSelection.Locality"
const NodeComputeJobSelectionRejectStatelessJobs = "Node.Compute.JobSelection.RejectStatelessJobs"
const NodeComputeJobSelectionAcceptNetworkedJobs = "Node.Compute.JobSelection.AcceptNetworkedJobs"
const NodeComputeJobSelectionProbeHTTP = "Node.Compute.JobSelection.ProbeHTTP"
const NodeComputeJobSelectionProbeExec = "Node.Compute.JobSelection.ProbeExec"
const NodeComputeQueue = "Node.Compute.Queue"
const NodeComputeQueueExecutorBufferBackoffDuration = "Node.Compute.Queue.ExecutorBufferBackoffDuration"
const NodeComputeLogging = "Node.Compute.Logging"
const NodeComputeLoggingLogRunningExecutionsInterval = "Node.Compute.Logging.LogRunningExecutionsInterval"
const NodeRequester = "Node.Requester"
const NodeRequesterExternalVerifierHook = "Node.Requester.ExternalVerifierHook"
const NodeRequesterJobSelectionPolicy = "Node.Requester.JobSelectionPolicy"
const NodeRequesterJobSelectionPolicyLocality = "Node.Requester.JobSelectionPolicy.Locality"
const NodeRequesterJobSelectionPolicyRejectStatelessJobs = "Node.Requester.JobSelectionPolicy.RejectStatelessJobs"
const NodeRequesterJobSelectionPolicyAcceptNetworkedJobs = "Node.Requester.JobSelectionPolicy.AcceptNetworkedJobs"
const NodeRequesterJobSelectionPolicyProbeHTTP = "Node.Requester.JobSelectionPolicy.ProbeHTTP"
const NodeRequesterJobSelectionPolicyProbeExec = "Node.Requester.JobSelectionPolicy.ProbeExec"
const NodeRequesterJobStore = "Node.Requester.JobStore"
const NodeRequesterJobStoreType = "Node.Requester.JobStore.Type"
const NodeRequesterJobStorePath = "Node.Requester.JobStore.Path"
const NodeRequesterHousekeepingBackgroundTaskInterval = "Node.Requester.HousekeepingBackgroundTaskInterval"
const NodeRequesterNodeRankRandomnessRange = "Node.Requester.NodeRankRandomnessRange"
const NodeRequesterOverAskForBidsFactor = "Node.Requester.OverAskForBidsFactor"
const NodeRequesterFailureInjectionConfig = "Node.Requester.FailureInjectionConfig"
const NodeRequesterFailureInjectionConfigIsBadActor = "Node.Requester.FailureInjectionConfig.IsBadActor"
const NodeRequesterEvaluationBroker = "Node.Requester.EvaluationBroker"
const NodeRequesterEvaluationBrokerEvalBrokerVisibilityTimeout = "Node.Requester.EvaluationBroker.EvalBrokerVisibilityTimeout"
const NodeRequesterEvaluationBrokerEvalBrokerInitialRetryDelay = "Node.Requester.EvaluationBroker.EvalBrokerInitialRetryDelay"
const NodeRequesterEvaluationBrokerEvalBrokerSubsequentRetryDelay = "Node.Requester.EvaluationBroker.EvalBrokerSubsequentRetryDelay"
const NodeRequesterEvaluationBrokerEvalBrokerMaxRetryCount = "Node.Requester.EvaluationBroker.EvalBrokerMaxRetryCount"
const NodeRequesterWorker = "Node.Requester.Worker"
const NodeRequesterWorkerWorkerCount = "Node.Requester.Worker.WorkerCount"
const NodeRequesterWorkerWorkerEvalDequeueTimeout = "Node.Requester.Worker.WorkerEvalDequeueTimeout"
const NodeRequesterWorkerWorkerEvalDequeueBaseBackoff = "Node.Requester.Worker.WorkerEvalDequeueBaseBackoff"
const NodeRequesterWorkerWorkerEvalDequeueMaxBackoff = "Node.Requester.Worker.WorkerEvalDequeueMaxBackoff"
const NodeRequesterTimeouts = "Node.Requester.Timeouts"
const NodeRequesterTimeoutsMinJobExecutionTimeout = "Node.Requester.Timeouts.MinJobExecutionTimeout"
const NodeRequesterTimeoutsDefaultJobExecutionTimeout = "Node.Requester.Timeouts.DefaultJobExecutionTimeout"
const NodeBootstrapAddresses = "Node.BootstrapAddresses"
const NodeDownloadURLRequestRetries = "Node.DownloadURLRequestRetries"
const NodeDownloadURLRequestTimeout = "Node.DownloadURLRequestTimeout"
const NodeVolumeSizeRequestTimeout = "Node.VolumeSizeRequestTimeout"
const NodeExecutorPluginPath = "Node.ExecutorPluginPath"
const NodeComputeStoragePath = "Node.ComputeStoragePath"
const NodeLoggingMode = "Node.LoggingMode"
const NodeType = "Node.Type"
const NodeEstuaryAPIKey = "Node.EstuaryAPIKey"
const NodeAllowListedLocalPaths = "Node.AllowListedLocalPaths"
const NodeDisabledFeatures = "Node.DisabledFeatures"
const NodeDisabledFeaturesEngines = "Node.DisabledFeatures.Engines"
const NodeDisabledFeaturesPublishers = "Node.DisabledFeatures.Publishers"
const NodeDisabledFeaturesStorages = "Node.DisabledFeatures.Storages"
const NodeLabels = "Node.Labels"
const User = "User"
const UserKeyPath = "User.KeyPath"
const UserLibp2pKeyPath = "User.Libp2pKeyPath"
const Metrics = "Metrics"
const MetricsLibp2pTracerPath = "Metrics.Libp2pTracerPath"
const MetricsEventTracerPath = "Metrics.EventTracerPath"
