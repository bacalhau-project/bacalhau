// CODE GENERATED BY pkg/config/types/gen/generate.go DO NOT EDIT

package types

const APIAuthAccessPolicyPathKey = "api.auth.accesspolicypath"
const APIAuthMethodsKey = "api.auth.methods"
const APIHostKey = "api.host"
const APIPortKey = "api.port"
const APITLSAutoCertKey = "api.tls.autocert"
const APITLSAutoCertCachePathKey = "api.tls.autocertcachepath"
const APITLSCAFileKey = "api.tls.cafile"
const APITLSCertFileKey = "api.tls.certfile"
const APITLSInsecureKey = "api.tls.insecure"
const APITLSKeyFileKey = "api.tls.keyfile"
const APITLSSelfSignedKey = "api.tls.selfsigned"
const APITLSUseTLSKey = "api.tls.usetls"
const ComputeAllocatedCapacityCPUKey = "compute.allocatedcapacity.cpu"
const ComputeAllocatedCapacityDiskKey = "compute.allocatedcapacity.disk"
const ComputeAllocatedCapacityGPUKey = "compute.allocatedcapacity.gpu"
const ComputeAllocatedCapacityMemoryKey = "compute.allocatedcapacity.memory"
const ComputeAllowListedLocalPathsKey = "compute.allowlistedlocalpaths"
const ComputeEnabledKey = "compute.enabled"
const ComputeHeartbeatInfoUpdateIntervalKey = "compute.heartbeat.infoupdateinterval"
const ComputeHeartbeatIntervalKey = "compute.heartbeat.interval"
const ComputeHeartbeatResourceUpdateIntervalKey = "compute.heartbeat.resourceupdateinterval"
const ComputeLabelsKey = "compute.labels"
const ComputeOrchestratorsKey = "compute.orchestrators"
const DataDirKey = "datadir"
const DisableAnalyticsKey = "disableanalytics"
const EnginesDisabledKey = "engines.disabled"
const EnginesTypesDockerManifestCacheRefreshKey = "engines.types.docker.manifestcache.refresh"
const EnginesTypesDockerManifestCacheSizeKey = "engines.types.docker.manifestcache.size"
const EnginesTypesDockerManifestCacheTTLKey = "engines.types.docker.manifestcache.ttl"
const FeatureFlagsExecTranslationKey = "featureflags.exectranslation"
const InputSourcesDisabledKey = "inputsources.disabled"
const InputSourcesMaxRetryCountKey = "inputsources.maxretrycount"
const InputSourcesReadTimeoutKey = "inputsources.readtimeout"
const InputSourcesTypesIPFSEndpointKey = "inputsources.types.ipfs.endpoint"
const JobAdmissionControlAcceptNetworkedJobsKey = "jobadmissioncontrol.acceptnetworkedjobs"
const JobAdmissionControlProbeExecKey = "jobadmissioncontrol.probeexec"
const JobAdmissionControlProbeHTTPKey = "jobadmissioncontrol.probehttp"
const JobAdmissionControlRejectStatelessJobsKey = "jobadmissioncontrol.rejectstatelessjobs"
const JobDefaultsBatchPriorityKey = "jobdefaults.batch.priority"
const JobDefaultsBatchTaskPublisherParamsKey = "jobdefaults.batch.task.publisher.params"
const JobDefaultsBatchTaskPublisherTypeKey = "jobdefaults.batch.task.publisher.type"
const JobDefaultsBatchTaskResourcesCPUKey = "jobdefaults.batch.task.resources.cpu"
const JobDefaultsBatchTaskResourcesDiskKey = "jobdefaults.batch.task.resources.disk"
const JobDefaultsBatchTaskResourcesGPUKey = "jobdefaults.batch.task.resources.gpu"
const JobDefaultsBatchTaskResourcesMemoryKey = "jobdefaults.batch.task.resources.memory"
const JobDefaultsBatchTaskTimeoutsExecutionTimeoutKey = "jobdefaults.batch.task.timeouts.executiontimeout"
const JobDefaultsBatchTaskTimeoutsTotalTimeoutKey = "jobdefaults.batch.task.timeouts.totaltimeout"
const JobDefaultsDaemonPriorityKey = "jobdefaults.daemon.priority"
const JobDefaultsDaemonTaskResourcesCPUKey = "jobdefaults.daemon.task.resources.cpu"
const JobDefaultsDaemonTaskResourcesDiskKey = "jobdefaults.daemon.task.resources.disk"
const JobDefaultsDaemonTaskResourcesGPUKey = "jobdefaults.daemon.task.resources.gpu"
const JobDefaultsDaemonTaskResourcesMemoryKey = "jobdefaults.daemon.task.resources.memory"
const JobDefaultsOpsPriorityKey = "jobdefaults.ops.priority"
const JobDefaultsOpsTaskPublisherParamsKey = "jobdefaults.ops.task.publisher.params"
const JobDefaultsOpsTaskPublisherTypeKey = "jobdefaults.ops.task.publisher.type"
const JobDefaultsOpsTaskResourcesCPUKey = "jobdefaults.ops.task.resources.cpu"
const JobDefaultsOpsTaskResourcesDiskKey = "jobdefaults.ops.task.resources.disk"
const JobDefaultsOpsTaskResourcesGPUKey = "jobdefaults.ops.task.resources.gpu"
const JobDefaultsOpsTaskResourcesMemoryKey = "jobdefaults.ops.task.resources.memory"
const JobDefaultsOpsTaskTimeoutsExecutionTimeoutKey = "jobdefaults.ops.task.timeouts.executiontimeout"
const JobDefaultsOpsTaskTimeoutsTotalTimeoutKey = "jobdefaults.ops.task.timeouts.totaltimeout"
const JobDefaultsServicePriorityKey = "jobdefaults.service.priority"
const JobDefaultsServiceTaskResourcesCPUKey = "jobdefaults.service.task.resources.cpu"
const JobDefaultsServiceTaskResourcesDiskKey = "jobdefaults.service.task.resources.disk"
const JobDefaultsServiceTaskResourcesGPUKey = "jobdefaults.service.task.resources.gpu"
const JobDefaultsServiceTaskResourcesMemoryKey = "jobdefaults.service.task.resources.memory"
const LoggingLevelKey = "logging.level"
const LoggingLogDebugInfoIntervalKey = "logging.logdebuginfointerval"
const LoggingModeKey = "logging.mode"
const NameProviderKey = "nameprovider"
const OrchestratorAdvertiseKey = "orchestrator.advertise"
const OrchestratorAuthSecretKey = "orchestrator.authsecret"
const OrchestratorClusterAdvertiseKey = "orchestrator.cluster.advertise"
const OrchestratorClusterHostKey = "orchestrator.cluster.host"
const OrchestratorClusterNameKey = "orchestrator.cluster.name"
const OrchestratorClusterPeersKey = "orchestrator.cluster.peers"
const OrchestratorClusterPortKey = "orchestrator.cluster.port"
const OrchestratorEnabledKey = "orchestrator.enabled"
const OrchestratorEvaluationBrokerMaxRetryCountKey = "orchestrator.evaluationbroker.maxretrycount"
const OrchestratorEvaluationBrokerVisibilityTimeoutKey = "orchestrator.evaluationbroker.visibilitytimeout"
const OrchestratorHostKey = "orchestrator.host"
const OrchestratorNodeManagerDisconnectTimeoutKey = "orchestrator.nodemanager.disconnecttimeout"
const OrchestratorNodeManagerManualApprovalKey = "orchestrator.nodemanager.manualapproval"
const OrchestratorPortKey = "orchestrator.port"
const OrchestratorSchedulerHousekeepingIntervalKey = "orchestrator.scheduler.housekeepinginterval"
const OrchestratorSchedulerHousekeepingTimeoutKey = "orchestrator.scheduler.housekeepingtimeout"
const OrchestratorSchedulerWorkerCountKey = "orchestrator.scheduler.workercount"
const PublishersDisabledKey = "publishers.disabled"
const PublishersTypesIPFSEndpointKey = "publishers.types.ipfs.endpoint"
const PublishersTypesLocalAddressKey = "publishers.types.local.address"
const PublishersTypesLocalDirectoryKey = "publishers.types.local.directory"
const PublishersTypesLocalPortKey = "publishers.types.local.port"
const PublishersTypesS3PreSignedURLDisabledKey = "publishers.types.s3.presignedurldisabled"
const PublishersTypesS3PreSignedURLExpirationKey = "publishers.types.s3.presignedurlexpiration"
const ResultDownloadersDisabledKey = "resultdownloaders.disabled"
const ResultDownloadersTimeoutKey = "resultdownloaders.timeout"
const ResultDownloadersTypesIPFSEndpointKey = "resultdownloaders.types.ipfs.endpoint"
const StrictVersionMatchKey = "strictversionmatch"
const UpdateConfigIntervalKey = "updateconfig.interval"
const WebUIBackendKey = "webui.backend"
const WebUIEnabledKey = "webui.enabled"
const WebUIListenKey = "webui.listen"
