// CODE GENERATED BY pkg/config/types/gen_paths DO NOT EDIT

package cfgtypes

const APIHostKey = "api.host"
const APIPortKey = "api.port"
const APITLSCertFileKey = "api.tls.certfile"
const APITLSKeyFileKey = "api.tls.keyfile"
const APITLSCAFileKey = "api.tls.cafile"
const APITLSUseTLSKey = "api.tls.usetls"
const APITLSInsecureKey = "api.tls.insecure"
const APITLSSelfSignedKey = "api.tls.selfsigned"
const APITLSAutoCertKey = "api.tls.autocert"
const APITLSAutoCertCachePathKey = "api.tls.autocertcachepath"
const APIAuthTokensPathKey = "api.auth.tokenspath"
const APIAuthMethodsKey = "api.auth.methods"
const APIAuthAccessPolicyPathKey = "api.auth.accesspolicypath"
const NameProviderKey = "nameprovider"
const DataDirKey = "datadir"
const StrictVersionMatchKey = "strictversionmatch"
const OrchestratorEnabledKey = "orchestrator.enabled"
const OrchestratorHostKey = "orchestrator.host"
const OrchestratorPortKey = "orchestrator.port"
const OrchestratorAdvertiseKey = "orchestrator.advertise"
const OrchestratorAuthSecretKey = "orchestrator.authsecret"
const OrchestratorTLSCertFileKey = "orchestrator.tls.certfile"
const OrchestratorTLSKeyFileKey = "orchestrator.tls.keyfile"
const OrchestratorTLSCAFileKey = "orchestrator.tls.cafile"
const OrchestratorTLSUseTLSKey = "orchestrator.tls.usetls"
const OrchestratorTLSInsecureKey = "orchestrator.tls.insecure"
const OrchestratorTLSSelfSignedKey = "orchestrator.tls.selfsigned"
const OrchestratorTLSAutoCertKey = "orchestrator.tls.autocert"
const OrchestratorTLSAutoCertCachePathKey = "orchestrator.tls.autocertcachepath"
const OrchestratorClusterNameKey = "orchestrator.cluster.name"
const OrchestratorClusterHostKey = "orchestrator.cluster.host"
const OrchestratorClusterPortKey = "orchestrator.cluster.port"
const OrchestratorClusterAdvertiseKey = "orchestrator.cluster.advertise"
const OrchestratorClusterPeersKey = "orchestrator.cluster.peers"
const OrchestratorNodeManagerDisconnectTimeoutKey = "orchestrator.nodemanager.disconnecttimeout"
const OrchestratorNodeManagerManualApprovalKey = "orchestrator.nodemanager.manualapproval"
const OrchestratorSchedulerWorkerCountKey = "orchestrator.scheduler.workercount"
const OrchestratorSchedulerHousekeepingIntervalKey = "orchestrator.scheduler.housekeepinginterval"
const OrchestratorSchedulerHousekeepingTimeoutKey = "orchestrator.scheduler.housekeepingtimeout"
const OrchestratorEvaluationBrokerVisibilityTimeoutKey = "orchestrator.evaluationbroker.visibilitytimeout"
const OrchestratorEvaluationBrokerMaxRetryCountKey = "orchestrator.evaluationbroker.maxretrycount"
const ComputeEnabledKey = "compute.enabled"
const ComputeOrchestratorsKey = "compute.orchestrators"
const ComputeTLSCertFileKey = "compute.tls.certfile"
const ComputeTLSKeyFileKey = "compute.tls.keyfile"
const ComputeTLSCAFileKey = "compute.tls.cafile"
const ComputeTLSUseTLSKey = "compute.tls.usetls"
const ComputeTLSInsecureKey = "compute.tls.insecure"
const ComputeTLSSelfSignedKey = "compute.tls.selfsigned"
const ComputeTLSAutoCertKey = "compute.tls.autocert"
const ComputeTLSAutoCertCachePathKey = "compute.tls.autocertcachepath"
const ComputeHeartbeatInfoUpdateIntervalKey = "compute.heartbeat.infoupdateinterval"
const ComputeHeartbeatResourceUpdateIntervalKey = "compute.heartbeat.resourceupdateinterval"
const ComputeHeartbeatIntervalKey = "compute.heartbeat.interval"
const ComputeLabelsKey = "compute.labels"
const ComputeAllocatedCapacityCPUKey = "compute.allocatedcapacity.cpu"
const ComputeAllocatedCapacityMemoryKey = "compute.allocatedcapacity.memory"
const ComputeAllocatedCapacityDiskKey = "compute.allocatedcapacity.disk"
const ComputeAllocatedCapacityGPUKey = "compute.allocatedcapacity.gpu"
const ComputeAllowListedLocalPathsKey = "compute.allowlistedlocalpaths"
const WebUIEnabledKey = "webui.enabled"
const WebUIListenKey = "webui.listen"
const InputSourcesDisabledKey = "inputsources.disabled"
const InputSourcesIPFSEndpointKey = "inputsources.ipfs.endpoint"
const InputSourcesS3EndpointKey = "inputsources.s3.endpoint"
const InputSourcesS3AccessKeyKey = "inputsources.s3.accesskey"
const InputSourcesS3SecretKeyKey = "inputsources.s3.secretkey"
const PublishersDisabledKey = "publishers.disabled"
const PublishersIPFSEndpointKey = "publishers.ipfs.endpoint"
const PublishersS3PreSignedURLDisabledKey = "publishers.s3.presignedurldisabled"
const PublishersS3PreSignedURLExpirationKey = "publishers.s3.presignedurlexpiration"
const PublishersLocalAddressKey = "publishers.local.address"
const PublishersLocalPortKey = "publishers.local.port"
const PublishersLocalDirectoryKey = "publishers.local.directory"
const EnginesDisabledKey = "engines.disabled"
const EnginesDockerManifestCacheSizeKey = "engines.docker.manifestcache.size"
const EnginesDockerManifestCacheTTLKey = "engines.docker.manifestcache.ttl"
const EnginesDockerManifestCacheRefreshKey = "engines.docker.manifestcache.refresh"
const ResultDownloadersDisabledKey = "resultdownloaders.disabled"
const ResultDownloadersTimeoutKey = "resultdownloaders.timeout"
const ResultDownloadersIPFSEndpointKey = "resultdownloaders.ipfs.endpoint"
const JobDefaultsBatchPriorityKey = "jobdefaults.batch.priority"
const JobDefaultsBatchTaskResourcesCPUKey = "jobdefaults.batch.task.resources.cpu"
const JobDefaultsBatchTaskResourcesMemoryKey = "jobdefaults.batch.task.resources.memory"
const JobDefaultsBatchTaskResourcesDiskKey = "jobdefaults.batch.task.resources.disk"
const JobDefaultsBatchTaskResourcesGPUKey = "jobdefaults.batch.task.resources.gpu"
const JobDefaultsBatchTaskPublisherTypeKey = "jobdefaults.batch.task.publisher.type"
const JobDefaultsBatchTaskTimeoutsTotalTimeoutKey = "jobdefaults.batch.task.timeouts.totaltimeout"
const JobDefaultsBatchTaskTimeoutsExecutionTimeoutKey = "jobdefaults.batch.task.timeouts.executiontimeout"
const JobDefaultsOpsPriorityKey = "jobdefaults.ops.priority"
const JobDefaultsOpsTaskResourcesCPUKey = "jobdefaults.ops.task.resources.cpu"
const JobDefaultsOpsTaskResourcesMemoryKey = "jobdefaults.ops.task.resources.memory"
const JobDefaultsOpsTaskResourcesDiskKey = "jobdefaults.ops.task.resources.disk"
const JobDefaultsOpsTaskResourcesGPUKey = "jobdefaults.ops.task.resources.gpu"
const JobDefaultsOpsTaskPublisherTypeKey = "jobdefaults.ops.task.publisher.type"
const JobDefaultsOpsTaskTimeoutsTotalTimeoutKey = "jobdefaults.ops.task.timeouts.totaltimeout"
const JobDefaultsOpsTaskTimeoutsExecutionTimeoutKey = "jobdefaults.ops.task.timeouts.executiontimeout"
const JobDefaultsDaemonPriorityKey = "jobdefaults.daemon.priority"
const JobDefaultsDaemonTaskResourcesCPUKey = "jobdefaults.daemon.task.resources.cpu"
const JobDefaultsDaemonTaskResourcesMemoryKey = "jobdefaults.daemon.task.resources.memory"
const JobDefaultsDaemonTaskResourcesDiskKey = "jobdefaults.daemon.task.resources.disk"
const JobDefaultsDaemonTaskResourcesGPUKey = "jobdefaults.daemon.task.resources.gpu"
const JobDefaultsDaemonTaskPublisherTypeKey = "jobdefaults.daemon.task.publisher.type"
const JobDefaultsServicePriorityKey = "jobdefaults.service.priority"
const JobDefaultsServiceTaskResourcesCPUKey = "jobdefaults.service.task.resources.cpu"
const JobDefaultsServiceTaskResourcesMemoryKey = "jobdefaults.service.task.resources.memory"
const JobDefaultsServiceTaskResourcesDiskKey = "jobdefaults.service.task.resources.disk"
const JobDefaultsServiceTaskResourcesGPUKey = "jobdefaults.service.task.resources.gpu"
const JobDefaultsServiceTaskPublisherTypeKey = "jobdefaults.service.task.publisher.type"
const JobAdmissionControlRejectStatelessJobsKey = "jobadmissioncontrol.rejectstatelessjobs"
const JobAdmissionControlAcceptNetworkedJobsKey = "jobadmissioncontrol.acceptnetworkedjobs"
const JobAdmissionControlProbeHTTPKey = "jobadmissioncontrol.probehttp"
const JobAdmissionControlProbeExecKey = "jobadmissioncontrol.probeexec"
const LoggingLevelKey = "logging.level"
const LoggingModeKey = "logging.mode"
const LoggingLogDebugInfoIntervalKey = "logging.logdebuginfointerval"
const UpdateConfigIntervalKey = "updateconfig.interval"
const FeatureFlagsExecTranslationKey = "featureflags.exectranslation"
const DefaultPublisherTypeKey = "defaultpublisher.type"
