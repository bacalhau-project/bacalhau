// Code generated by MockGen. DO NOT EDIT.
// Source: types.go
//
// Generated by this command:
//
//	mockgen --source types.go --destination mocks.go --package requester
//

// Package requester is a generated GoMock package.
package requester

import (
	context "context"
	reflect "reflect"

	model "github.com/bacalhau-project/bacalhau/pkg/model"
	gomock "go.uber.org/mock/gomock"
)

// MockEndpoint is a mock of Endpoint interface.
type MockEndpoint struct {
	ctrl     *gomock.Controller
	recorder *MockEndpointMockRecorder
}

// MockEndpointMockRecorder is the mock recorder for MockEndpoint.
type MockEndpointMockRecorder struct {
	mock *MockEndpoint
}

// NewMockEndpoint creates a new mock instance.
func NewMockEndpoint(ctrl *gomock.Controller) *MockEndpoint {
	mock := &MockEndpoint{ctrl: ctrl}
	mock.recorder = &MockEndpointMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEndpoint) EXPECT() *MockEndpointMockRecorder {
	return m.recorder
}

// CancelJob mocks base method.
func (m *MockEndpoint) CancelJob(arg0 context.Context, arg1 CancelJobRequest) (CancelJobResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CancelJob", arg0, arg1)
	ret0, _ := ret[0].(CancelJobResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CancelJob indicates an expected call of CancelJob.
func (mr *MockEndpointMockRecorder) CancelJob(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CancelJob", reflect.TypeOf((*MockEndpoint)(nil).CancelJob), arg0, arg1)
}

// SubmitJob mocks base method.
func (m *MockEndpoint) SubmitJob(arg0 context.Context, arg1 model.JobCreatePayload) (*model.Job, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubmitJob", arg0, arg1)
	ret0, _ := ret[0].(*model.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SubmitJob indicates an expected call of SubmitJob.
func (mr *MockEndpointMockRecorder) SubmitJob(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubmitJob", reflect.TypeOf((*MockEndpoint)(nil).SubmitJob), arg0, arg1)
}
