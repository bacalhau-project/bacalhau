// Code generated by protoc-gen-go. DO NOT EDIT.
// source: executor.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RunCommandRequest struct {
	Params               []byte   `protobuf:"bytes,1,opt,name=Params,proto3" json:"Params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunCommandRequest) Reset()         { *m = RunCommandRequest{} }
func (m *RunCommandRequest) String() string { return proto.CompactTextString(m) }
func (*RunCommandRequest) ProtoMessage()    {}
func (*RunCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{0}
}

func (m *RunCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunCommandRequest.Unmarshal(m, b)
}
func (m *RunCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunCommandRequest.Marshal(b, m, deterministic)
}
func (m *RunCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunCommandRequest.Merge(m, src)
}
func (m *RunCommandRequest) XXX_Size() int {
	return xxx_messageInfo_RunCommandRequest.Size(m)
}
func (m *RunCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunCommandRequest proto.InternalMessageInfo

func (m *RunCommandRequest) GetParams() []byte {
	if m != nil {
		return m.Params
	}
	return nil
}

type RunCommandResponse struct {
	Params               []byte   `protobuf:"bytes,1,opt,name=Params,proto3" json:"Params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunCommandResponse) Reset()         { *m = RunCommandResponse{} }
func (m *RunCommandResponse) String() string { return proto.CompactTextString(m) }
func (*RunCommandResponse) ProtoMessage()    {}
func (*RunCommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{1}
}

func (m *RunCommandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunCommandResponse.Unmarshal(m, b)
}
func (m *RunCommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunCommandResponse.Marshal(b, m, deterministic)
}
func (m *RunCommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunCommandResponse.Merge(m, src)
}
func (m *RunCommandResponse) XXX_Size() int {
	return xxx_messageInfo_RunCommandResponse.Size(m)
}
func (m *RunCommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunCommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunCommandResponse proto.InternalMessageInfo

func (m *RunCommandResponse) GetParams() []byte {
	if m != nil {
		return m.Params
	}
	return nil
}

type CancelCommandRequest struct {
	ExecutionID          string   `protobuf:"bytes,1,opt,name=ExecutionID,proto3" json:"ExecutionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelCommandRequest) Reset()         { *m = CancelCommandRequest{} }
func (m *CancelCommandRequest) String() string { return proto.CompactTextString(m) }
func (*CancelCommandRequest) ProtoMessage()    {}
func (*CancelCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{2}
}

func (m *CancelCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelCommandRequest.Unmarshal(m, b)
}
func (m *CancelCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelCommandRequest.Marshal(b, m, deterministic)
}
func (m *CancelCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelCommandRequest.Merge(m, src)
}
func (m *CancelCommandRequest) XXX_Size() int {
	return xxx_messageInfo_CancelCommandRequest.Size(m)
}
func (m *CancelCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelCommandRequest proto.InternalMessageInfo

func (m *CancelCommandRequest) GetExecutionID() string {
	if m != nil {
		return m.ExecutionID
	}
	return ""
}

type CancelCommandResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelCommandResponse) Reset()         { *m = CancelCommandResponse{} }
func (m *CancelCommandResponse) String() string { return proto.CompactTextString(m) }
func (*CancelCommandResponse) ProtoMessage()    {}
func (*CancelCommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{3}
}

func (m *CancelCommandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelCommandResponse.Unmarshal(m, b)
}
func (m *CancelCommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelCommandResponse.Marshal(b, m, deterministic)
}
func (m *CancelCommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelCommandResponse.Merge(m, src)
}
func (m *CancelCommandResponse) XXX_Size() int {
	return xxx_messageInfo_CancelCommandResponse.Size(m)
}
func (m *CancelCommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelCommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelCommandResponse proto.InternalMessageInfo

type IsInstalledRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsInstalledRequest) Reset()         { *m = IsInstalledRequest{} }
func (m *IsInstalledRequest) String() string { return proto.CompactTextString(m) }
func (*IsInstalledRequest) ProtoMessage()    {}
func (*IsInstalledRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{4}
}

func (m *IsInstalledRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsInstalledRequest.Unmarshal(m, b)
}
func (m *IsInstalledRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsInstalledRequest.Marshal(b, m, deterministic)
}
func (m *IsInstalledRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsInstalledRequest.Merge(m, src)
}
func (m *IsInstalledRequest) XXX_Size() int {
	return xxx_messageInfo_IsInstalledRequest.Size(m)
}
func (m *IsInstalledRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsInstalledRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsInstalledRequest proto.InternalMessageInfo

type IsInstalledResponse struct {
	Installed            bool     `protobuf:"varint,1,opt,name=Installed,proto3" json:"Installed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsInstalledResponse) Reset()         { *m = IsInstalledResponse{} }
func (m *IsInstalledResponse) String() string { return proto.CompactTextString(m) }
func (*IsInstalledResponse) ProtoMessage()    {}
func (*IsInstalledResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{5}
}

func (m *IsInstalledResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsInstalledResponse.Unmarshal(m, b)
}
func (m *IsInstalledResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsInstalledResponse.Marshal(b, m, deterministic)
}
func (m *IsInstalledResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsInstalledResponse.Merge(m, src)
}
func (m *IsInstalledResponse) XXX_Size() int {
	return xxx_messageInfo_IsInstalledResponse.Size(m)
}
func (m *IsInstalledResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsInstalledResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsInstalledResponse proto.InternalMessageInfo

func (m *IsInstalledResponse) GetInstalled() bool {
	if m != nil {
		return m.Installed
	}
	return false
}

type ShouldBidRequest struct {
	BidRequest           []byte   `protobuf:"bytes,1,opt,name=BidRequest,proto3" json:"BidRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShouldBidRequest) Reset()         { *m = ShouldBidRequest{} }
func (m *ShouldBidRequest) String() string { return proto.CompactTextString(m) }
func (*ShouldBidRequest) ProtoMessage()    {}
func (*ShouldBidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{6}
}

func (m *ShouldBidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShouldBidRequest.Unmarshal(m, b)
}
func (m *ShouldBidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShouldBidRequest.Marshal(b, m, deterministic)
}
func (m *ShouldBidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShouldBidRequest.Merge(m, src)
}
func (m *ShouldBidRequest) XXX_Size() int {
	return xxx_messageInfo_ShouldBidRequest.Size(m)
}
func (m *ShouldBidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShouldBidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShouldBidRequest proto.InternalMessageInfo

func (m *ShouldBidRequest) GetBidRequest() []byte {
	if m != nil {
		return m.BidRequest
	}
	return nil
}

type ShouldBidBasedOnUsageRequest struct {
	BidRequest           []byte   `protobuf:"bytes,1,opt,name=BidRequest,proto3" json:"BidRequest,omitempty"`
	Usage                []byte   `protobuf:"bytes,2,opt,name=Usage,proto3" json:"Usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShouldBidBasedOnUsageRequest) Reset()         { *m = ShouldBidBasedOnUsageRequest{} }
func (m *ShouldBidBasedOnUsageRequest) String() string { return proto.CompactTextString(m) }
func (*ShouldBidBasedOnUsageRequest) ProtoMessage()    {}
func (*ShouldBidBasedOnUsageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{7}
}

func (m *ShouldBidBasedOnUsageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShouldBidBasedOnUsageRequest.Unmarshal(m, b)
}
func (m *ShouldBidBasedOnUsageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShouldBidBasedOnUsageRequest.Marshal(b, m, deterministic)
}
func (m *ShouldBidBasedOnUsageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShouldBidBasedOnUsageRequest.Merge(m, src)
}
func (m *ShouldBidBasedOnUsageRequest) XXX_Size() int {
	return xxx_messageInfo_ShouldBidBasedOnUsageRequest.Size(m)
}
func (m *ShouldBidBasedOnUsageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShouldBidBasedOnUsageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShouldBidBasedOnUsageRequest proto.InternalMessageInfo

func (m *ShouldBidBasedOnUsageRequest) GetBidRequest() []byte {
	if m != nil {
		return m.BidRequest
	}
	return nil
}

func (m *ShouldBidBasedOnUsageRequest) GetUsage() []byte {
	if m != nil {
		return m.Usage
	}
	return nil
}

// shared by both semantic and resource bid
type ShouldBidResponse struct {
	BidResponse          []byte   `protobuf:"bytes,1,opt,name=BidResponse,proto3" json:"BidResponse,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShouldBidResponse) Reset()         { *m = ShouldBidResponse{} }
func (m *ShouldBidResponse) String() string { return proto.CompactTextString(m) }
func (*ShouldBidResponse) ProtoMessage()    {}
func (*ShouldBidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{8}
}

func (m *ShouldBidResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShouldBidResponse.Unmarshal(m, b)
}
func (m *ShouldBidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShouldBidResponse.Marshal(b, m, deterministic)
}
func (m *ShouldBidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShouldBidResponse.Merge(m, src)
}
func (m *ShouldBidResponse) XXX_Size() int {
	return xxx_messageInfo_ShouldBidResponse.Size(m)
}
func (m *ShouldBidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShouldBidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShouldBidResponse proto.InternalMessageInfo

func (m *ShouldBidResponse) GetBidResponse() []byte {
	if m != nil {
		return m.BidResponse
	}
	return nil
}

type OutputStreamRequest struct {
	ExecutionID          string   `protobuf:"bytes,1,opt,name=ExecutionID,proto3" json:"ExecutionID,omitempty"`
	History              bool     `protobuf:"varint,2,opt,name=History,proto3" json:"History,omitempty"`
	Follow               bool     `protobuf:"varint,3,opt,name=Follow,proto3" json:"Follow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutputStreamRequest) Reset()         { *m = OutputStreamRequest{} }
func (m *OutputStreamRequest) String() string { return proto.CompactTextString(m) }
func (*OutputStreamRequest) ProtoMessage()    {}
func (*OutputStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{9}
}

func (m *OutputStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputStreamRequest.Unmarshal(m, b)
}
func (m *OutputStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputStreamRequest.Marshal(b, m, deterministic)
}
func (m *OutputStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputStreamRequest.Merge(m, src)
}
func (m *OutputStreamRequest) XXX_Size() int {
	return xxx_messageInfo_OutputStreamRequest.Size(m)
}
func (m *OutputStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OutputStreamRequest proto.InternalMessageInfo

func (m *OutputStreamRequest) GetExecutionID() string {
	if m != nil {
		return m.ExecutionID
	}
	return ""
}

func (m *OutputStreamRequest) GetHistory() bool {
	if m != nil {
		return m.History
	}
	return false
}

func (m *OutputStreamRequest) GetFollow() bool {
	if m != nil {
		return m.Follow
	}
	return false
}

type OutputStreamResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutputStreamResponse) Reset()         { *m = OutputStreamResponse{} }
func (m *OutputStreamResponse) String() string { return proto.CompactTextString(m) }
func (*OutputStreamResponse) ProtoMessage()    {}
func (*OutputStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{10}
}

func (m *OutputStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputStreamResponse.Unmarshal(m, b)
}
func (m *OutputStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputStreamResponse.Marshal(b, m, deterministic)
}
func (m *OutputStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputStreamResponse.Merge(m, src)
}
func (m *OutputStreamResponse) XXX_Size() int {
	return xxx_messageInfo_OutputStreamResponse.Size(m)
}
func (m *OutputStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OutputStreamResponse proto.InternalMessageInfo

func (m *OutputStreamResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*RunCommandRequest)(nil), "proto.RunCommandRequest")
	proto.RegisterType((*RunCommandResponse)(nil), "proto.RunCommandResponse")
	proto.RegisterType((*CancelCommandRequest)(nil), "proto.CancelCommandRequest")
	proto.RegisterType((*CancelCommandResponse)(nil), "proto.CancelCommandResponse")
	proto.RegisterType((*IsInstalledRequest)(nil), "proto.IsInstalledRequest")
	proto.RegisterType((*IsInstalledResponse)(nil), "proto.IsInstalledResponse")
	proto.RegisterType((*ShouldBidRequest)(nil), "proto.ShouldBidRequest")
	proto.RegisterType((*ShouldBidBasedOnUsageRequest)(nil), "proto.ShouldBidBasedOnUsageRequest")
	proto.RegisterType((*ShouldBidResponse)(nil), "proto.ShouldBidResponse")
	proto.RegisterType((*OutputStreamRequest)(nil), "proto.OutputStreamRequest")
	proto.RegisterType((*OutputStreamResponse)(nil), "proto.OutputStreamResponse")
}

func init() {
	proto.RegisterFile("executor.proto", fileDescriptor_12d1cdcda51e000f)
}

var fileDescriptor_12d1cdcda51e000f = []byte{
	// 416 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x5d, 0x6f, 0xda, 0x30,
	0x14, 0x15, 0x63, 0x30, 0xb8, 0x4c, 0xdb, 0x30, 0x61, 0x64, 0x01, 0x4d, 0xc8, 0x7b, 0x99, 0xb6,
	0x09, 0x4d, 0xa0, 0x49, 0xd3, 0x1e, 0xf6, 0xc0, 0x47, 0x5b, 0xa4, 0x4a, 0x54, 0xa1, 0xed, 0xbb,
	0x0b, 0x56, 0x1b, 0x29, 0xb1, 0x69, 0xec, 0xa8, 0xed, 0x2f, 0xeb, 0xdf, 0xab, 0xea, 0x38, 0xc1,
	0x04, 0xb7, 0xe2, 0x09, 0xee, 0x3d, 0xf7, 0x9c, 0x7b, 0x9c, 0x7b, 0xe0, 0x03, 0xbd, 0xa7, 0xab,
	0x44, 0xf2, 0x78, 0xb0, 0x89, 0xb9, 0xe4, 0xa8, 0xa2, 0x7e, 0xf0, 0x4f, 0x68, 0xfa, 0x09, 0x9b,
	0xf0, 0x28, 0x22, 0x6c, 0xed, 0xd3, 0xdb, 0x84, 0x0a, 0x89, 0x3e, 0x43, 0xf5, 0x8c, 0xc4, 0x24,
	0x12, 0x6e, 0xa9, 0x5f, 0xfa, 0xfe, 0xde, 0xd7, 0x15, 0xfe, 0x05, 0xc8, 0x1c, 0x16, 0x1b, 0xce,
	0x04, 0x7d, 0x71, 0xfa, 0x2f, 0x38, 0x13, 0xc2, 0x56, 0x34, 0x2c, 0xa8, 0xf7, 0xa1, 0x31, 0x53,
	0x5e, 0x02, 0xce, 0xe6, 0x53, 0x45, 0xaa, 0xfb, 0x66, 0x0b, 0x77, 0xa0, 0x5d, 0x60, 0xa6, 0xab,
	0xb0, 0x03, 0x68, 0x2e, 0xe6, 0x4c, 0x48, 0x12, 0x86, 0x34, 0x13, 0xc4, 0x23, 0x68, 0xed, 0x74,
	0xb5, 0xaf, 0x1e, 0xd4, 0xf3, 0xa6, 0xda, 0x52, 0xf3, 0xb7, 0x0d, 0x3c, 0x84, 0x4f, 0xcb, 0x1b,
	0x9e, 0x84, 0xeb, 0x71, 0x90, 0x3b, 0xfb, 0x0a, 0xb0, 0xad, 0xf4, 0x6b, 0x8c, 0x0e, 0x3e, 0x87,
	0x5e, 0xce, 0x19, 0x13, 0x41, 0xd7, 0x0b, 0x76, 0x21, 0xc8, 0x35, 0x3d, 0x90, 0x8f, 0x1c, 0xa8,
	0xa8, 0x79, 0xf7, 0x8d, 0x82, 0xd2, 0x02, 0xff, 0x81, 0xa6, 0xe1, 0x44, 0x9b, 0xef, 0x43, 0xc3,
	0x28, 0xb5, 0x96, 0xd9, 0xc2, 0x01, 0xb4, 0x16, 0x89, 0xdc, 0x24, 0x72, 0x29, 0x63, 0x4a, 0xa2,
	0x83, 0xbf, 0x2e, 0x72, 0xe1, 0xdd, 0x49, 0x20, 0x24, 0x8f, 0x1f, 0x94, 0x8f, 0x9a, 0x9f, 0x95,
	0xcf, 0x97, 0x3c, 0xe2, 0x61, 0xc8, 0xef, 0xdc, 0xb2, 0x02, 0x74, 0x85, 0x7f, 0x80, 0xb3, 0xbb,
	0x4a, 0x9b, 0x44, 0xf0, 0x76, 0x4a, 0x24, 0xd1, 0xee, 0xd4, 0xff, 0xe1, 0x63, 0x19, 0x6a, 0x33,
	0x1d, 0x35, 0xf4, 0x0f, 0xca, 0x7e, 0xc2, 0x90, 0x9b, 0x66, 0x6e, 0xb0, 0x97, 0x34, 0xef, 0x8b,
	0x05, 0xd1, 0xe2, 0x13, 0xa8, 0xa6, 0x21, 0x40, 0x5d, 0x3d, 0x64, 0x4b, 0x93, 0xd7, 0xb3, 0x83,
	0x5a, 0x64, 0x0a, 0x0d, 0x23, 0x1a, 0x28, 0x5b, 0xb7, 0x1f, 0x22, 0xcf, 0xb3, 0x41, 0x5a, 0xe5,
	0x3f, 0xd4, 0xf3, 0x0b, 0xa1, 0x8e, 0x1e, 0x2c, 0xa6, 0xc7, 0x73, 0xf7, 0x01, 0xcd, 0xbf, 0x84,
	0xb6, 0x35, 0x37, 0xe8, 0x5b, 0x91, 0x62, 0x49, 0xd5, 0x2b, 0xba, 0xa7, 0xf0, 0xf1, 0x98, 0x4a,
	0xf3, 0x34, 0x28, 0x7b, 0x86, 0x25, 0x1a, 0x5e, 0xd7, 0x8a, 0xa5, 0x5a, 0xbf, 0x4b, 0x57, 0x55,
	0x85, 0x8e, 0x9e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x36, 0xf8, 0xf0, 0x3c, 0x2a, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ExecutorClient is the client API for Executor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExecutorClient interface {
	Run(ctx context.Context, in *RunCommandRequest, opts ...grpc.CallOption) (*RunCommandResponse, error)
	Cancel(ctx context.Context, in *CancelCommandRequest, opts ...grpc.CallOption) (*CancelCommandResponse, error)
	IsInstalled(ctx context.Context, in *IsInstalledRequest, opts ...grpc.CallOption) (*IsInstalledResponse, error)
	ShouldBid(ctx context.Context, in *ShouldBidRequest, opts ...grpc.CallOption) (*ShouldBidResponse, error)
	ShouldBidBasedOnUsage(ctx context.Context, in *ShouldBidBasedOnUsageRequest, opts ...grpc.CallOption) (*ShouldBidResponse, error)
	GetOutputStream(ctx context.Context, in *OutputStreamRequest, opts ...grpc.CallOption) (Executor_GetOutputStreamClient, error)
}

type executorClient struct {
	cc grpc.ClientConnInterface
}

func NewExecutorClient(cc grpc.ClientConnInterface) ExecutorClient {
	return &executorClient{cc}
}

func (c *executorClient) Run(ctx context.Context, in *RunCommandRequest, opts ...grpc.CallOption) (*RunCommandResponse, error) {
	out := new(RunCommandResponse)
	err := c.cc.Invoke(ctx, "/proto.Executor/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *executorClient) Cancel(ctx context.Context, in *CancelCommandRequest, opts ...grpc.CallOption) (*CancelCommandResponse, error) {
	out := new(CancelCommandResponse)
	err := c.cc.Invoke(ctx, "/proto.Executor/Cancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *executorClient) IsInstalled(ctx context.Context, in *IsInstalledRequest, opts ...grpc.CallOption) (*IsInstalledResponse, error) {
	out := new(IsInstalledResponse)
	err := c.cc.Invoke(ctx, "/proto.Executor/IsInstalled", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *executorClient) ShouldBid(ctx context.Context, in *ShouldBidRequest, opts ...grpc.CallOption) (*ShouldBidResponse, error) {
	out := new(ShouldBidResponse)
	err := c.cc.Invoke(ctx, "/proto.Executor/ShouldBid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *executorClient) ShouldBidBasedOnUsage(ctx context.Context, in *ShouldBidBasedOnUsageRequest, opts ...grpc.CallOption) (*ShouldBidResponse, error) {
	out := new(ShouldBidResponse)
	err := c.cc.Invoke(ctx, "/proto.Executor/ShouldBidBasedOnUsage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *executorClient) GetOutputStream(ctx context.Context, in *OutputStreamRequest, opts ...grpc.CallOption) (Executor_GetOutputStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Executor_serviceDesc.Streams[0], "/proto.Executor/GetOutputStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &executorGetOutputStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Executor_GetOutputStreamClient interface {
	Recv() (*OutputStreamResponse, error)
	grpc.ClientStream
}

type executorGetOutputStreamClient struct {
	grpc.ClientStream
}

func (x *executorGetOutputStreamClient) Recv() (*OutputStreamResponse, error) {
	m := new(OutputStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExecutorServer is the server API for Executor service.
type ExecutorServer interface {
	Run(context.Context, *RunCommandRequest) (*RunCommandResponse, error)
	Cancel(context.Context, *CancelCommandRequest) (*CancelCommandResponse, error)
	IsInstalled(context.Context, *IsInstalledRequest) (*IsInstalledResponse, error)
	ShouldBid(context.Context, *ShouldBidRequest) (*ShouldBidResponse, error)
	ShouldBidBasedOnUsage(context.Context, *ShouldBidBasedOnUsageRequest) (*ShouldBidResponse, error)
	GetOutputStream(*OutputStreamRequest, Executor_GetOutputStreamServer) error
}

// UnimplementedExecutorServer can be embedded to have forward compatible implementations.
type UnimplementedExecutorServer struct {
}

func (*UnimplementedExecutorServer) Run(ctx context.Context, req *RunCommandRequest) (*RunCommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}
func (*UnimplementedExecutorServer) Cancel(ctx context.Context, req *CancelCommandRequest) (*CancelCommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cancel not implemented")
}
func (*UnimplementedExecutorServer) IsInstalled(ctx context.Context, req *IsInstalledRequest) (*IsInstalledResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsInstalled not implemented")
}
func (*UnimplementedExecutorServer) ShouldBid(ctx context.Context, req *ShouldBidRequest) (*ShouldBidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShouldBid not implemented")
}
func (*UnimplementedExecutorServer) ShouldBidBasedOnUsage(ctx context.Context, req *ShouldBidBasedOnUsageRequest) (*ShouldBidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShouldBidBasedOnUsage not implemented")
}
func (*UnimplementedExecutorServer) GetOutputStream(req *OutputStreamRequest, srv Executor_GetOutputStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetOutputStream not implemented")
}

func RegisterExecutorServer(s *grpc.Server, srv ExecutorServer) {
	s.RegisterService(&_Executor_serviceDesc, srv)
}

func _Executor_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutorServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Executor/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutorServer).Run(ctx, req.(*RunCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Executor_Cancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutorServer).Cancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Executor/Cancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutorServer).Cancel(ctx, req.(*CancelCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Executor_IsInstalled_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsInstalledRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutorServer).IsInstalled(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Executor/IsInstalled",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutorServer).IsInstalled(ctx, req.(*IsInstalledRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Executor_ShouldBid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShouldBidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutorServer).ShouldBid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Executor/ShouldBid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutorServer).ShouldBid(ctx, req.(*ShouldBidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Executor_ShouldBidBasedOnUsage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShouldBidBasedOnUsageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutorServer).ShouldBidBasedOnUsage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Executor/ShouldBidBasedOnUsage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutorServer).ShouldBidBasedOnUsage(ctx, req.(*ShouldBidBasedOnUsageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Executor_GetOutputStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OutputStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ExecutorServer).GetOutputStream(m, &executorGetOutputStreamServer{stream})
}

type Executor_GetOutputStreamServer interface {
	Send(*OutputStreamResponse) error
	grpc.ServerStream
}

type executorGetOutputStreamServer struct {
	grpc.ServerStream
}

func (x *executorGetOutputStreamServer) Send(m *OutputStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Executor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Executor",
	HandlerType: (*ExecutorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _Executor_Run_Handler,
		},
		{
			MethodName: "Cancel",
			Handler:    _Executor_Cancel_Handler,
		},
		{
			MethodName: "IsInstalled",
			Handler:    _Executor_IsInstalled_Handler,
		},
		{
			MethodName: "ShouldBid",
			Handler:    _Executor_ShouldBid_Handler,
		},
		{
			MethodName: "ShouldBidBasedOnUsage",
			Handler:    _Executor_ShouldBidBasedOnUsage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetOutputStream",
			Handler:       _Executor_GetOutputStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "executor.proto",
}
