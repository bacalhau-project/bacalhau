/* generated using openapi-typescript-codegen -- do not edit */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { models_LabelSelectorRequirement } from './models_LabelSelectorRequirement';
import type { models_State_models_JobStateType } from './models_State_models_JobStateType';
import type { models_Task } from './models_Task';
export type models_Job = {
    /**
     * Constraints is a selector which must be true for the compute node to run this job.
     */
    Constraints?: Array<models_LabelSelectorRequirement>;
    /**
     * Count is the number of replicas that should be scheduled.
     */
    Count?: number;
    CreateTime?: number;
    /**
     * ID is a unique identifier assigned to this job.
     * It helps to distinguish jobs with the same name after they have been deleted and re-created.
     * The ID is generated by the server and should not be set directly by the client.
     */
    ID?: string;
    /**
     * Labels is used to associate arbitrary labels with this job, which can be used
     * for filtering.
     * key=value
     */
    Labels?: Record<string, string>;
    /**
     * Meta is used to associate arbitrary metadata with this job.
     */
    Meta?: Record<string, string>;
    ModifyTime?: number;
    /**
     * Name is the logical name of the job used to refer to it.
     * Submitting a job with the same name as an existing job will result in an
     * update to the existing job.
     */
    Name?: string;
    /**
     * Namespace is the namespace this job is running in.
     */
    Namespace?: string;
    /**
     * Priority defines the scheduling priority of this job.
     */
    Priority?: number;
    /**
     * Revision is a per-job monotonically increasing revision number that is incremented
     * on each update to the job's state or specification
     */
    Revision?: number;
    /**
     * State is the current state of the job.
     */
    State?: models_State_models_JobStateType;
    Tasks?: Array<models_Task>;
    /**
     * Type is the type of job this is, e.g. "daemon" or "batch".
     */
    Type?: string;
    /**
     * Version is a per-job monotonically increasing version number that is incremented
     * on each job specification update.
     */
    Version?: number;
};

