ifeq ($(shell which wasm-gc),)
$(info "No wasm-gc. Install it with cargo install wasm-gc")
endif

WASM_DIRS := $(shell find . -type d -depth 1)
WASM_FILES := $(patsubst ./%,%/main.wasm,${WASM_DIRS})
EMBED_FILES := $(patsubst ./%,%/main.go,${WASM_DIRS})

%.wat: %.wasm
	wasm2wat $^ > $@

%.wasm:
	pushd $(dir $@) && \
	cargo build --target wasm32-wasi --release && \
	popd && \
	cp $(dir $@)/target/wasm32-wasi/release/*.wasm $@ && \
	wasm-gc $@

%.go: %.wasm
	echo "// Generated by Makefile - DO NOT EDIT." > $@; \
	echo "package $$(dirname $@)\n" >> $@; \
	echo "import \"embed\"" >> $@; \
	echo "import \"io/fs\"\n" >> $@; \
	echo "//go:embed $$(basename $^)" >> $@; \
	echo "var file embed.FS" >> $@
	echo "func Program() (b []byte) {" >> $@; \
	echo "	b, err := fs.ReadFile(file, \"$$(basename $^)\")" >> $@; \
	echo "	if err != nil {" >> $@; \
	echo "		panic(err)" >> $@; \
	echo "	}" >> $@; \
	echo "	return" >> $@; \
	echo "}" >> $@;

%.csv: %.sparql
	curl -G https://query.wikidata.org/sparql \
		--data-urlencode "query=$$(cat $^)" \
		-H "Accept: text/csv" -o $@

.PHONY: all
all: ${WASM_FILES} ${EMBED_FILES}

.PHONY: clean
clean:
	$(RM) ${EMBED_FILES}
