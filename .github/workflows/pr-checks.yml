name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
#  pull_request_target:
#    types: [labeled]

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  debug-should-run:
    name: Debug PR Context
    runs-on: ubuntu-latest
    steps:
      - name: Print PR info
        run: |
          echo "üîç github.repository: ${{ github.repository }}"
          echo "üîç head.repo.full_name: ${{ github.event.pull_request.head.repo.full_name }}"
          echo "üîç labels: ${{ toJson(github.event.pull_request.labels) }}"

  static-analysis:
    name: Static Analysis
    uses: ./.github/workflows/_static-analysis.yml
    with:
      go_version_file: go.work
      golangci_lint_version: v1.64.5

  unit-tests:
    name: Unit Tests
    if: github.event.pull_request.head.repo.full_name == github.repository || contains(github.event.pull_request.labels.*.name, 'ok-to-test')
    uses: ./.github/workflows/_test.yml
    with:
      test_name: unit-tests
      test_path: './pkg/... ./cmd/...'
      test_working_dir: '.'
      test_tags: unit
      parallelism: 4

  integration-tests:
    name: Integration Tests
    if: github.event.pull_request.head.repo.full_name == github.repository || contains(github.event.pull_request.labels.*.name, 'ok-to-test')
    uses: ./.github/workflows/_test.yml
    with:
      test_name: integration-tests
      test_path: './pkg/... ./cmd/...'
      test_working_dir: '.'
      test_tags: integration
      parallelism: 1
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

  container-tests:
    name: Container Tests
    if: github.event.pull_request.head.repo.full_name == github.repository || contains(github.event.pull_request.labels.*.name, 'ok-to-test')
    uses: ./.github/workflows/_test.yml
    with:
      test_name: container-tests
      test_path: './...'
      test_working_dir: 'test_integration'
      build_binary: true
      binary_output_path: 'test_integration/common_assets/bacalhau_bin'
      timeout_minutes: 45
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

  combined-coverage:
    name: Combined Coverage
    needs: [unit-tests, integration-tests, container-tests]
    uses: ./.github/workflows/_test_coverage.yml
    with:
      coverage_reports: '["unit-tests", "integration-tests", "container-tests"]'
      output_name: 'pr-combined'
      retention_days: 14
      codecov: true

  build-binaries:
    name: Build Binaries
    needs: [ static-analysis, unit-tests, integration-tests ]
    uses: ./.github/workflows/_build.yml
    secrets: inherit
    if: success()

  testcontainers-suite:
    needs: [ build-binaries]
    if: success()
    uses: ./.github/workflows/testcontainers-suite.yml
    with:
      os: linux
      arch: amd64

    # needs: [lint, unit-tests, integration-tests]
    # runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     arch: [amd64, arm64]
    #     os: [linux, darwin, windows]
    #     exclude:
    #       - os: windows
    #         arch: arm64

    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v4

    #   - name: Setup Go
    #     uses: actions/setup-go@v5
    #     with:
    #       go-version: '1.21'
    #       cache: true

    #   - name: Build Binary
    #     env:
    #       GOOS: ${{ matrix.os }}
    #       GOARCH: ${{ matrix.arch }}
    #     run: |
    #       EXT=""
    #       if [ "${{ matrix.os }}" = "windows" ]; then
    #         EXT=".exe"
    #       fi
    #       TAG=$(git describe --tags --always)
    #       OUTPUT="bacalhau_${{ matrix.os }}_${{ matrix.arch }}${EXT}"
    #       go build -o "$OUTPUT" -v -ldflags="-X 'github.com/bacalhau-project/bacalhau/pkg/version.GITVERSION=${TAG}'" ./cmd/bacalhau

    #   - name: Upload Build Artifact
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: bacalhau_${{ matrix.os }}_${{ matrix.arch }}
    #       path: bacalhau_${{ matrix.os }}_${{ matrix.arch }}*
    #       retention-days: 7
