name: Reusable Test Workflow

on:
  workflow_call:
    inputs:
      go_version_file:
        description: "Path to the file containing Go version"
        required: false
        default: "go.work"
        type: string
      test_name:
        description: "Name for test reports and artifacts"
        required: true
        type: string
      test_working_dir:
        description: "Working directory to run tests from"
        required: false
        default: "."
        type: string
      timeout_minutes:
        description: "Timeout for tests in minutes"
        required: false
        default: 30
        type: number
      build_mode:
        description: "Binary build mode: 'release' or 'test'"
        required: false
        default: "test"
        type: string
      build_os:
        description: "Operating system to build for"
        required: false
        default: "linux"
        type: string
      build_arch:
        description: "Architecture to build for"
        required: false
        default: "amd64"
        type: string
      test_tags:
        description: "Build tags for test mode (e.g. unit,integration)"
        required: false
        default: ""
        type: string
      test_coverage:
        description: "Whether to include coverage instrumentation in test builds"
        required: false
        default: "false"
        type: string
      binary_output_path:
        description: "Output path for binary"
        required: false
        default: "common_assets/bacalhau_bin"
        type: string
      environment_name:
        description: "GitHub Environment to use"
        required: false
        default: "test"
        type: string

jobs:
  run-tests:
    name: Run
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout_minutes }}
    environment: ${{ inputs.environment_name }}
    # Define key paths relative to repository root
    env:
      REPO_ROOT: ${{ github.workspace }}
      REPORTS_DIR: ${{ github.workspace }}/reports
      COVERAGE_DIR: ${{ github.workspace }}/coverage

    steps:
      - name: Prepare tmp directories for tests
        run: |
          # Create a test directory with permissive ACLs
          mkdir -p /tmp
          sudo chmod 1777 /tmp

          # Apply ACLs to allow both the container root and runner user to modify files
          # This is key - it allows files created by root to be modified by non-root
          sudo setfacl -d -m u::rwx,g::rwx,o::rwx /tmp

          # Set sticky bit to prevent others from deleting files
          sudo chmod +t /tmp

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0" # Need to fetch all due to how bacalhau constructs semver

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ inputs.go_version_file }}
          cache: true

      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest

      - name: Create directories
        run: |
          mkdir -p ${{ env.REPORTS_DIR }}
          mkdir -p ${{ env.COVERAGE_DIR }}

      - name: Build binary
        uses: ./.github/actions/build-bacalhau
        with:
          os: ${{ inputs.build_os }}
          arch: ${{ inputs.build_arch }}
          mode: ${{ inputs.build_mode }}
          test_tags: ${{ inputs.test_tags }}
          test_coverage: ${{ inputs.test_coverage }}
          binary_output_path: ${{ inputs.test_working_dir }}/${{ inputs.binary_output_path }}

      - name: Run tests
        shell: bash
        working-directory: ${{ inputs.test_working_dir }}
        run: |
          # Verify binary works before running tests
          ${{ inputs.binary_output_path }} version
          
          # Run the tests
          go test -v -count=1 ./...