#
# This is a Flox environment manifest.
# Visit flox.dev/docs/concepts/manifest/
# or see flox-edit(1), manifest.toml(5) for more information.
#

# List packages you wish to install in your environment inside
# the `[install]` section.
[install]
python311.pkg-path = "python311"
just.pkg-path = "just"
pip.pkg-path = "python311Packages.pip"
# hello.pkg-path = "hello"
# nodejs = { version = "^18.4.2", pkg-path = "nodejs_18" }

# Set environment variables in the `[vars]` section. These variables may not
# reference one another, and are added to the environment without first
# expanding them. They are available for use in the `[profile]` and `[hook]`
# scripts.
[vars]
# message = "Howdy"

# The `hook.on-activate` script is run by the *bash* shell immediately upon
# activating an environment, and will not be invoked if Flox detects that the
# environment has previously been activated. Variables set by the script will
# be inherited by `[profile]` scripts defined below. Note that any stdout
# generated by the script will be redirected to stderr.
[hook]
on-activate = '''
  if [ -z "$FLOX_ACTIVATED" ]; then
    echo "Activating environment..."
    export FLOX_ACTIVATED=1
  fi

  # If the venv directory does not exist, create it
  if [ -d ".venv" ]; then
    mkdir -p ".venv"
    venv_dir=".venv"
    python -m pip install uv

    # Perform initialization steps, e.g. create a python venv
    uv venv "$venv_dir" --seed
  fi

    # Activate the venv
    source "$venv_dir/bin/activate"
'''

# Scripts defined in the `[profile]` section are *sourced* by *your shell* and
# inherit environment variables set in the `[vars]` section and by `[hook]` scripts.
# The `profile.common` script is sourced by all shells and special care should be
# taken to ensure compatibility with all shells, after which exactly one of
# `profile.{bash,fish,tcsh,zsh}` is sourced by the corresponding shell.
[profile]
# common = '''
#   echo "it's gettin' flox in here"
# '''

# Additional options can be set in the `[options]` section. Refer to
# manifest.toml(5) for a list of available options.
[options]
systems = ["aarch64-darwin"]
