VERSION 0.8
FROM python:3.10

WORKDIR /code

# All files to be copied are in the .earthlyignore file - with ! in front of them

install-deps:
    RUN pip3 install --upgrade pip
    COPY requirements.txt .
    RUN pip3 install -r requirements.txt
    COPY dev-requirements.txt .
    RUN pip3 install -r dev-requirements.txt

copy-code:
    FROM +install-deps
    COPY --dir bacalhau_airflow example_dags docs tests ./
    COPY LICENSE MANIFEST.in README.md ruff.toml setup.cfg setup.py tox.ini ./

run-lint:
    FROM +copy-code
    RUN ruff --config ruff.toml

run-format:
    FROM +run-lint
    RUN ruff format .

run-tests:
    FROM +run-format
    RUN tox

make-docs:
    FROM +run-tests
	RUN rm -f docs/bacalhau_airflow.rst
	RUN rm -f docs/modules.rst
	RUN sphinx-apidoc -o docs/ bacalhau_airflow
	RUN make -C docs clean
	RUN make -C docs html
    SAVE ARTIFACT docs/ AS LOCAL ./

dist:
    FROM +make-docs
    ARG --required PYPI_VERSION
    RUN echo "Building version ${PYPI_VERSION}"
    ENV PYPI_VERSION=${PYPI_VERSION}

    RUN python3 setup.py sdist
	RUN python3 setup.py bdist_wheel
	RUN ls -l dist
    SAVE ARTIFACT dist/ AS LOCAL ./

release:
    FROM +dist
    BUILD +dist

    ARG RELEASE_PYTHON_PACKAGES
    LET REPOSITORY_FLAG = "--repository-url https://test.pypi.org/legacy/"
    IF [ "${RELEASE_PYTHON_PACKAGES}" = 1 ]
        RUN echo "Publishing to pypi.org"
        RUN REPOSITORY_FLAG = "" # Publish to default repository
        RUN --secret PYPI_TOKEN test -n "${PYPI_TOKEN}" || (echo "PYPI_TOKEN not found" && exit 1)
        RUN --secret PYPI_TOKEN python3 -m twine upload \
            --non-interactive \
            --disable-progress-bar \
            --skip-existing \
            -u __token__ -p ${PYPI_TOKEN} \
            --verbose \
            dist/* \
            ${REPOSITORY_FLAG}
    ELSE
        RUN echo "Publishing to test.pypi.org"
        RUN --secret TEST_PYPI_TOKEN test -n "${TEST_PYPI_TOKEN}" || (echo "TEST_PYPI_TOKEN not found" && exit 1)
        RUN --secret TEST_PYPI_TOKEN python3 -m twine upload \
            --non-interactive \
            --disable-progress-bar \
            --skip-existing \
            -u __token__ -p ${TEST_PYPI_TOKEN} \
            --verbose \
            dist/* \
            ${REPOSITORY_FLAG}
    END

    RUN echo "Package uploaded to ${REPOSITORY_FLAG}"
